{"version":3,"sources":["assets/logo.svg","assets/login_logo.svg","assets/login_squares.svg","styles/global.js","routes/history.js","store/ducks/lms.js","store/ducks/auth.js","store/ducks/train.js","store/ducks/chart.js","store/ducks/dialog.js","constants/index.js","store/ducks/screen.js","store/ducks/course.js","store/ducks/subject.js","store/ducks/semester.js","store/ducks/indicator.js","store/ducks/pre_processing.js","store/ducks/train_status.js","store/ducks/train_model.js","store/ducks/train_metric.js","store/ducks/model_copy.js","store/ducks/download.js","store/ducks/data_source.js","store/ducks/phenomenon.js","store/ducks/prediction.js","store/ducks/period.js","store/ducks/student.js","services/api.js","store/sagas/chart.js","utils/utils.js","store/sagas/download.js","store/sagas/model_copy.js","store/sagas/train.js","store/sagas/lms.js","store/sagas/course.js","store/sagas/subject.js","store/sagas/semester.js","store/sagas/indicator.js","store/sagas/train_status.js","store/sagas/train_model.js","store/sagas/train_metric.js","store/sagas/auth.js","store/sagas/pre_processing.js","store/sagas/prediction.js","store/sagas/data_source.js","store/sagas/phenomenon.js","store/sagas/student.js","store/sagas/period.js","store/sagas/index.js","store/index.js","store/ducks/index.js","routes/private.js","routes/guest.js","pages/Main/styles.js","components/SideMenu/styles.js","components/SideMenu/index.js","components/DataSource/styles.js","styles/Button.js","styles/ConfigContainer.js","components/Dialog/styles.js","components/Dialog/index.js","components/MoodleConfigDialog/index.js","components/Upload/styles.js","components/Upload/index.js","components/UploadFileList/styles.js","components/UploadFileList/index.js","components/DataSourceDialog/index.js","components/AlertDialog/styles.js","components/AlertDialog/index.js","components/DataSource/index.js","components/BreadCrumb/styles.js","components/BreadCrumb/index.js","components/Indicators/styles.js","components/Indicators/index.js","components/PreProcessing/styles.js","components/Progress/styles.js","components/Progress/index.js","components/Chart/styles.js","components/Chart/index.js","components/PreProcessingDialog/styles.js","components/PreProcessingDialog/index.js","components/TrainConfigDialog/styles.js","components/TrainConfigDialog/index.js","components/PreProcessing/index.js","components/Train/styles.js","components/TrainModelSaveDialog/index.js","components/TrainMetricDialog/styles.js","components/TrainMetricDialog/index.js","components/TrainAlgorithmDialog/index.js","components/Train/index.js","pages/TrainModel/index.js","components/Dashboard/styles.js","components/Dashboard/index.js","pages/Main/index.js","pages/Auth/SignIn/styles.js","pages/Auth/SignIn/index.js","routes/index.js","routes/constants.js","App.js","index.js"],"names":["module","exports","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","initializeIcons","createGlobalStyle","selectStyle","container","provided","width","fontSize","clearIndicator","color","padding","multiValueRemove","borderRadius","cursor","backgroundColor","dropdownIndicator","multiValue","groupHeading","indicatorsContainer","height","control","state","boxShadow","isFocused","isHovered","borderColor","borderWidth","minHeight","option","background","isSelected","Table","styled","table","FirstHeaderColumn","td","HeaderColumn","props","align","css","FirstItemColumn","isClickable","ItemColumn","Header","div","StatusMsgContainer","LoadingContainer","DialogFormButtonContainer","DialogInput","input","DialogSpan","span","DialogForm","form","SelectText","materialUIStyle","createMuiTheme","typography","useNextVariants","fontFamily","h3","marginBottom","primary","main","history","createBrowserHistory","createActions","lmsInit","lmsRequest","lmsSuccess","lmsError","getLms","putLms","Types","Creators","INITIAL_STATE","Immutable","data","loading","error","createReducer","LMS_INIT","merge","LMS_REQUEST","LMS_SUCCESS","LMS_ERROR","signInRequest","signInSuccess","signOutRequest","signOutSuccess","signedIn","localStorage","getItem","token","SIGN_IN_SUCCESS","SIGN_OUT_SUCCESS","trainInit","postTrain","trainRequest","trainSuccess","trainError","deleteTrain","trainDeleteRequest","trainDeleteSuccess","trainDeleteError","deleteLoading","deleteError","TRAIN_INIT","TRAIN_REQUEST","TRAIN_SUCCESS","TRAIN_ERROR","TRAIN_DELETE_REQUEST","TRAIN_DELETE_SUCCESS","TRAIN_DELETE_ERROR","chartInit","chartRequest","getChart","chartSuccess","chartError","chartType","CHART_INIT","CHART_REQUEST","CHART_SUCCESS","CHART_ERROR","setDialog","setDialogData","alert","moodle","dataSource","preProcessingConstant","trainConfig","trainSave","trainMetrics","trainAlgorithm","SET_DIALOG","field","SET_DIALOG_DATA","ADD_TRAIN","LMS","CSV","LAD","setScreen","activeScreen","activeComponent","SET_SCREEN","screen","component","courseInit","courseRequest","courseSuccess","courseError","getCourses","COURSE_INIT","COURSE_REQUEST","COURSE_SUCCESS","COURSE_ERROR","subjectInit","subjectRequest","subjectSuccess","subjectError","getSubjects","SUBJECT_INIT","SUBJECT_REQUEST","SUBJECT_SUCCESS","SUBJECT_ERROR","semesterInit","semesterRequest","semesterSuccess","semesterError","getSemesters","SEMESTER_INIT","SEMESTER_REQUEST","SEMESTER_SUCCESS","SEMESTER_ERROR","indicatorInit","indicatorInitFilter","indicatorRequest","indicatorSuccess","indicatorError","getIndicators","saveIndicators","setIndicator","datsource","source","indicators","targetSelected","courseSelected","subjectSelected","semesterSelected","phenomenonSelected","studentSelected","periodSelected","INDICATOR_INIT","INDICATOR_INIT_FILTER","SET_INDICATOR","name","value","INDICATOR_REQUEST","INDICATOR_SUCCESS","INDICATOR_ERROR","preProcessingInit","preProcessingSetFilter","preProcessingRequest","preProcessingSuccess","preProcessingError","getPreProcessing","deletePreProcessing","preProcessingDeleteRequest","preProcessingDeleteSuccess","preProcessingDeleteError","path","is_processed","filter","PRE_PROCESSING_INIT","PRE_PROCESSING_REQUEST","PRE_PROCESSING_SUCCESS","PRE_PROCESSING_ERROR","PRE_PROCESSING_SET_FILTER","PRE_PROCESSING_DELETE_REQUEST","PRE_PROCESSING_DELETE_SUCCESS","PRE_PROCESSING_DELETE_ERROR","trainStatusInit","postTrainStatus","trainStatusRequest","trainStatusSuccess","trainStatusError","TRAIN_STATUS_INIT","TRAIN_STATUS_REQUEST","TRAIN_STATUS_SUCCESS","TRAIN_STATUS_ERROR","trainModelInit","trainModelRequest","trainModelSuccess","trainModelError","getTrainModel","postTrainModel","putTrainModel","deleteTrainModel","lastModelSaved","TRAIN_MODEL_INIT","TRAIN_MODEL_REQUEST","TRAIN_MODEL_SUCCESS","TRAIN_MODEL_ERROR","trainMetricInit","trainMetricRequest","trainMetricSuccess","trainMetricError","postTrainMetric","TRAIN_METRIC_INIT","TRAIN_METRIC_REQUEST","TRAIN_METRIC_SUCCESS","TRAIN_METRIC_ERROR","modelCopyInit","modelCopyRequest","modelCopySuccess","modelCopyError","getModelCopy","MODEL_COPY_INIT","MODEL_COPY_REQUEST","MODEL_COPY_SUCCESS","MODEL_COPY_ERROR","downloadInit","downloadRequest","downloadSuccess","downloadError","getDownload","DOWNLOAD_INIT","DOWNLOAD_REQUEST","DOWNLOAD_SUCCESS","DOWNLOAD_ERROR","dataSourceInit","dataSourceRequest","dataSourceSuccess","dataSourceError","getDataSource","postDataSource","deleteDataSource","DATA_SOURCE_INIT","DATA_SOURCE_REQUEST","DATA_SOURCE_SUCCESS","DATA_SOURCE_ERROR","phenomenonInit","phenomenonRequest","getPhenomenon","phenomenonSuccess","phenomenonError","PHENOMENON_INIT","PHENOMENON_REQUEST","PHENOMENON_SUCCESS","PHENOMENON_ERROR","predictionInit","postPrediction","predictionRequest","predictionSuccess","predictionError","PREDICTION_INIT","PREDICTION_REQUEST","PREDICTION_SUCCESS","PREDICTION_ERROR","periodInit","periodRequest","periodSuccess","periodError","getPeriods","PERIOD_INIT","PERIOD_REQUEST","PERIOD_SUCCESS","PERIOD_ERROR","studentInit","studentRequest","studentSuccess","studentError","getStudents","STUDENT_INIT","STUDENT_REQUEST","STUDENT_SUCCESS","STUDENT_ERROR","api","axios","create","baseURL","process","interceptors","request","use","config","store","getState","auth","headers","Authorization","put","call","post","response","err","toastrActions","add","type","title","message","copyToClipboard","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","downloadStream","id","content","action","url","window","URL","createObjectURL","Blob","link","extension","getExtensionDownload","href","setAttribute","click","get","responseType","template","TrainStatusCreators","delete","DialogCreators","email","password","setItem","push","removeItem","ScreenCreators","pre_processing_indicator","pre_processing_strategy","modelEndpoint","phenomenon","rootSaga","all","takeLatest","ChartTypes","GET_CHART","DownloadTypes","GET_DOWNLOAD","ModelCopyTypes","GET_MODEL_COPY","AuthTypes","SIGN_IN_REQUEST","SIGN_OUT_REQUEST","LmsTypes","GET_LMS","PUT_LMS","CourseTypes","GET_COURSES","SubjectTypes","GET_SUBJECTS","SemesterTypes","GET_SEMESTERS","IndicatorTypes","GET_INDICATORS","PreProcessingTypes","GET_PRE_PROCESSING","DELETE_PRE_PROCESSING","TrainTypes","POST_TRAIN","DELETE_TRAIN","TrainStatusTypes","POST_TRAIN_STATUS","TrainModelTypes","GET_TRAIN_MODEL","POST_TRAIN_MODEL","PUT_TRAIN_MODEL","DELETE_TRAIN_MODEL","TrainMetricTypes","POST_TRAIN_METRIC","DataSourceTypes","GET_DATA_SOURCE","POST_DATA_SOURCE","DELETE_DATA_SOURCE","PhenomenonTypes","GET_PHENOMENON","PredictionTypes","POST_PREDICTION","StudentTypes","GET_STUDENTS","PeriodTypes","GET_PERIODS","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","initialState","createStore","combineReducers","lms","train","chart","dialog","toastr","course","subject","semester","indicator","pre_processing","train_status","train_model","train_metric","model_copy","download","data_source","prediction","student","period","router","connectRouter","composeWithDevTools","applyMiddleware","configureStore","run","PrivateRoute","Component","rest","render","to","pathname","from","location","GuestRoute","Container","aside","ItemList","Logo","button","Item","ItemText","SideMenu","getStrokeWidth","this","links","icon","strokeWidth","alt","src","logo","map","idx","key","onClick","bind","connect","AuthActions","ScreenActions","CardContainer","sizes","small","default","big","colors","danger","gray","Button","attrs","size","filled","isCancel","disabled","ConfigContainer","Content","Dialog","children","versions","label","MoodleConfigDialog","onClose","renderWarningMsg","msg","handleChangeInput","e","target","handleChange","item","version","description","autoComplete","onChange","style","isClearable","placeholder","styles","options","submit","marginLeft","DialogActions","LmsActions","dragActive","dragReject","DropContainer","className","isDragActive","isDragReject","messageColors","success","UploadMessage","p","Upload","uploadedFiles","handleUpload","files","file","readableSize","filesize","preview","progress","uploaded","setState","concat","forEach","processUpload","updateFile","newFiles","uploadedFile","onUpload","FormData","append","onUploadProgress","parseInt","Math","round","loaded","total","then","catch","renderDragMessage","accept","onDropAccepted","getRootProps","getInputProps","ul","FileInfo","Preview","UploadFileList","handleDelete","a","newUploadedFiles","onDelete","root","stroke","text","DataSourceDialog","onCancel","fileId","length","file_id","paddingTop","paddingBottom","fontWeight","DataSourceActions","AlertDialog","onSubmit","availableLms","DataSource","selectedItem","chipSelected","openDialogConfig","event","renderCardLMS","Card","opacity","CardActionArea","CardContent","Typography","gutterBottom","variant","CardActions","IconButton","goToIndicators","renderCardCSV","moment","created_at","format","handleMsgDelete","context","setChip","renderDatasetOptions","display","paddingLeft","Chip","avatar","addDataSource","hasData","fill","animationDuration","IndicatorActions","Text","BreadCrumb","destiny","SelectContainer","LeftContent","Separator","RightContainer","Indicators","getDataSourceContext","datasource","split","getDataSourceId","refreshFilters","courses","subjects","getValueFromSelect","semesters","items","textAlign","margin","dataSourceContext","Fragment","isMulti","noOptionsMessage","asMutable","metaKeySelection","responsive","showSourceControls","showTargetControls","sourceHeader","targetHeader","onPickListChange","itemTemplate","getPickListTemplate","sourceStyle","targetStyle","CourseActions","SubjectActions","SemesterActions","PreProcessingActions","DataSourceText","RowDetail","tr","Progress","getBackgroundColor","getImportance","fullWidth","abs","renderNumber","prop","importance","transform","flexDirection","alignItems","CenterContainer","Plot","createPlotlyComponent","Plotly","Chart","renderLoading","renderError","renderEmptyState","getTrace","trace","y","x","marker","useResizeHandler","displaylogo","displayModeBar","editable","layout","l","r","b","t","pad","plot_bgcolor","paper_bgcolor","autosize","font","family","PreProcessingDialog","constant","strategy","constantValue","getInputType","inputType","TrainConfigDialog","test","generations","kfold","handlePercentualChange","maskedValue","floatValue","newValue","otherInputToUpdate","inputParams","suffix","decimalSeparator","thousandSeparator","onChangeEvent","precision","PreProcessing","indicatorSelected","anchorEl","expandedRow","getDataSourceName","handleMenuItemClose","executePreProcessing","newFilter","pre_processing_constant","handleMenuItemClick","handleClickListItem","currentTarget","renderMenuActions","actions","pre_processing_action","Menu","list","keepMounted","open","Boolean","MenuItem","index","selected","renderIconDetail","goToTrain","newData","missing","checkIsPreProcessed","initPreProcessing","newExpandedRow","isTarget","ItemColumnWrapped","handleRowClick","itemRows","corr","unique","mean","std","min","max","justifyContent","colSpan","Object","keys","dataSourceName","overflowX","count","renderItem","ChartActions","TrainActions","TrainInfo","ScoreContainer","TrainModelSaveDialog","score","TrainModelActions","TrainMetricDialog","toFixed","TrainAlgorithmDialog","algorithm","hyperparameters","join","fitted_pipelines","Train","interval","countdown","Date","now","callTrainStatus","getDiffExecutionTime","diff","date","finishedAt","nowDiff","finishDiff","getStatusIcon","step","status","getSplit","checkGoBackToPreProcessing","openSaveModel","openViewMetrics","openViewAlgorithms","goToSaveModels","setInterval","clearInterval","isFinished","onBeforeunload","TrainStatusActions","TrainMetricActions","TrainModel","last_predict_at","qtd_predict","handleClickMenu","itemSelected","deleteModel","model_id","renderSuccessMsg","ModelCopyActions","DownloadActions","ChipContainer","MainContainer","AsideContainer","DashboardMainContainer","FullContainer","HalfContent","ExternalLoadingContainer","md5","require","Dashboard","tabValue","chartOptions","choosedChart","detailedOptions","choosedDetailed","variableOptions","choosedVariable","studentOptions","choosedStudent","detailedChartData","detailedChartLayout","loadingChart","predictionInfoText","mappedVariablesMeaning","periods","students","getValueFromIsMultiSelect","getStudentsDynamically","getVariablesDynamically","handleStudentChange","handleVariableChange","realData","uniqueData","studentOption","generateHashName","variable","variableOption","handleTabChange","handleDetailedChange","makeDetailedChartByStudent","makeDetailedChartByVariable","choosedStudentFromInit","getDescriptiveAnalysisByStudentAndClass","studentId","studentGradeMean","studentFirstGrade","studentSecondGrade","studentForum","studentWebquest","webquestText","forumText","gradeText","currentAssessments","assessmentVariables","availableGrades","availableForums","availableWebquests","currentAssessment","currentForumMean","mappedMoreThenZeroWebquest","mappedMoreThenZeroForum","mappedMoreThenZeroGrades","reducer","accumulator","currentValue","classGradeAverage","reduce","classWebquestAverage","classForumAverage","choosedDontKnow","changingWhat","updatedChoosedStudent","updatedChoosedVariables","studentPredictionResult","choosedStudentVariablesLabelAndValue","choosedClassMeanVariablesLabelAndValueList","entries","uniqueRealData","id_do_aluno","assign","predictedData","currentClassStudentVariablesLabelAndValue","variableNames","variableValues","values","xValueVariableNames","yValueVariableValuesStudent","yValueVariableValuesClassMean","textList","shift","variableName","find","searchedVariableOptionFromClass","studentInfo","classSearchedVariableAverage","xaxis","yaxis","barmode","bargap","showlegend","legend","xanchor","updatedChoosedStudents","updatedChoosedVariable","choosedStudentsInfo","studentDataCopy","binaryPrediction","xValueUniqueVariableName","traces","choosedStudentInfo","nome_do_aluno","textposition","line","getChartDataDynamically","getSatisfactoryAndUnsatisfactoryChartDataDynamic","getAllIndicatorsMeanChartDataDynamic","getGradeAndForumAndWebquestChartDataDynamic","getChartLayoutDynamically","getSatisfactoryAndUnsatisfactoryChartLayoutDynamic","getAllIndicatorsMeanChartLayoutDynamic","availableGradeSizes","studentPredictionResults","satisfactoryWebquest","unsatisfactoryWebquest","satisfactoryForum","unsatisfactoryForum","satisfactoryGrade","unsatisfactoryGrade","availableWebquest","availableForum","availableGrade","currentStudentName","mode","getGradeAndForumAndWebquestChartDataLayout","graphDiv","titleX","titleY","minXaxis","maxXaxis","minYaxis","maxYaxis","makeScatterChart","makeScatterLayout","makeHistogramChart","makeHistogramLayout","satisfactoryIndicator","unsatisfactoryIndicator","satisfactoryY","unsatisfactoryY","satisfactoryX","unsatisfactoryX","range","indicatorSatisfactoryMeans","indicatorUnsatisfactoryMeans","indicatorValueSatisfactorySum","satisfactoryCount","indicatorValueUnsatisfactorySum","unsatisfactoryCount","indicatorSatisfactoryMean","indicatorUnatisfactoryMean","orientation","automargin","countZeros","countDisapproved","countApproved","getPieChartDataDynamic","predictionResult","countOnes","binaryResult","labels","getPieChartLayoutDynamic","renderIndicatorsMeaningTable","aria-label","TableHead","TableRow","TableCell","TableBody","scope","renderStudentCards","descriptiveAnalysisObject","minWidth","alignSelf","border","borderStyle","studentName","availableStudents","uniqueStudent","hashedName","Tooltip","arrow","classes","tooltip","Alert","severity","AlertTitle","fontStyle","marginTop","percentageApproved","percentageDisapproved","TableContainer","Paper","maxHeight","PhenomenonActions","PredictionActions","StudentActions","PeriodActions","Main","renderContent","dispatch","bindActionCreators","SignForm","SignIn","handleInputChange","handleSubmit","preventDefault","squares","Routes","exact","App","theme","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","progressBar","closeOnToastrClick","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4127546a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9a3c4ba4.svg\";","module.exports = __webpack_public_path__ + \"static/media/login_logo.d46ac4c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/login_squares.975840b2.svg\";","import styled, { css, createGlobalStyle } from 'styled-components';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\nimport { initializeIcons } from '@uifabric/icons';\nimport { loadTheme } from 'office-ui-fabric-react';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { createMuiTheme } from '@material-ui/core';\n\nexport const primaryColor = '#4A5173';\nconst secondaryColor = '#000';\nexport const terciaryColor = '#DEB981';\nexport const fontFamily = 'Avenir';\n\nloadTheme({\n  palette: {\n    themePrimary: terciaryColor,\n    themeLighterAlt: '#eff6fc',\n    themeLighter: '#deecf9',\n    themeLight: '#c7e0f4',\n    themeTertiary: '#71afe5',\n    themeSecondary: '#2b88d8',\n    themeDarkAlt: '#106ebe',\n    themeDark: '#005a9e',\n    themeDarker: '#004578',\n    neutralLighterAlt: '#f8f8f8',\n    neutralLighter: '#f4f4f4',\n    neutralLight: '#eaeaea',\n    neutralQuaternaryAlt: '#dadada',\n    neutralQuaternary: '#d0d0d0',\n    neutralTertiaryAlt: '#c8c8c8',\n    neutralTertiary: '#c2c2c2',\n    neutralSecondary: '#858585',\n    neutralPrimaryAlt: '#4b4b4b',\n    neutralPrimary: '#333333',\n    neutralDark: '#272727',\n    black: '#1d1d1d',\n    white: '#ffffff'\n  }\n});\n\ninitializeIcons();\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Avenir');\n  @import url('https://fonts.googleapis.com/css?family=Mada');\n\n  // /* latin-ext */\n  // @font-face {\n  //   font-family: 'Avenir';\n  //   font-style: normal;\n  //   font-weight: 400;\n  //   src: local('Avenir LT Pro 45 Book'), local('AvenirLTPro-Book'), url(https://fonts.gstatic.com/l/font?kit=ijwUs5PnXdA4ZZUA6Zd-&skey=8887f17a62203d44&v=v3) format('woff2');\n  //   unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  // }\n  // /* latin */\n  // @font-face {\n  //   font-family: 'Avenir';\n  //   font-style: normal;\n  //   font-weight: 400;\n  //   src: local('Avenir LT Pro 45 Book'), local('AvenirLTPro-Book'), url(https://fonts.gstatic.com/l/font?kit=ijwUs5PnXdA4ZZUA55d-&skey=8887f17a62203d44&v=v3) format('woff2');\n  //   unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  // }\n\n  // /* arabic */\n  // @font-face {\n  //   font-family: 'Mada';\n  //   font-style: normal;\n  //   font-weight: 400;\n  //   src: local('Mada Regular'), local('Mada-Regular'), url(https://fonts.gstatic.com/s/mada/v9/7Auwp_0qnzeSfTfGLRrX.woff2) format('woff2');\n  //   unicode-range: U+0600-06FF, U+200C-200E, U+2010-2011, U+204F, U+2E41, U+FB50-FDFF, U+FE80-FEFC;\n  // }\n  // /* latin */\n  // @font-face {\n  //   font-family: 'Mada';\n  //   font-style: normal;\n  //   font-weight: 400;\n  //   src: local('Mada Regular'), local('Mada-Regular'), url(https://fonts.gstatic.com/s/mada/v9/7Auwp_0qnzeSfTLGLQ.woff2) format('woff2');\n  //   unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  // }\n\n  * {\n    padding: 0;\n    margin: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #E5E5E5;\n    color: #FFF;\n    font-family: ${fontFamily}, sans-serif;\n    text-rendering: optimizeLegibility !important;\n    -webkit-font-smoothing: antialised !important;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  .p-button {\n    background-color: ${primaryColor} !important;\n    border-color: ${primaryColor} !important;\n  }\n\n  .p-picklist .p-picklist-list .p-picklist-item.p-highlight {\n    background-color: ${primaryColor} !important;\n    border-color: ${primaryColor} !important;\n  }\n\n  .MuiList-padding {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n\n  .input {\n    padding: 10px;\n    border-radius: 3px;\n    border: none;\n    margin-top: 8px;\n    transition: border 0.15s ease;\n    font-size: 16px;\n    border: 1px solid #BBB;\n\n    &:focus {\n      border: 1px solid #000;\n    }\n  }\n\n  .active-chip {\n    padding-left: .4vw !important;\n    color: #FFF !important;\n    background-color: ${primaryColor} !important;\n  }\n\n  .inactive-chip {\n    padding-left: .4vw !important;\n    color: ${primaryColor} !important;\n    background-color: transparent !important;\n    border: .8px solid ${primaryColor} !important;\n  }\n\n  .active-chip-lad {\n    padding-left: .4vw !important;\n    color: white !important;\n    background-color: ${primaryColor} !important;\n  }\n\n  .inactive-chip-lad {\n    padding-left: .4vw !important;\n    color: white !important;\n    background-color: transparent !important;\n    border: .8px solid white !important;\n  }\n\n  .lms-card {\n    width: 30.5%;\n    margin: .5vw;\n    background-color: #FBFBFB !important; \n    font-family: ${fontFamily} !important;\n  }\n`;\n\nexport const ComboBoxStyle = {\n  container: {\n    marginBottom: '1rem',\n    '&:hover': {\n      border: '1px solid red'\n    }\n  },\n  root: {\n    backgroundColor: '#F5F5F5',\n    '&:hover': {\n      border: '1px solid red'\n    }\n  },\n  input: {\n    backgroundColor: '#F5F5F5',\n    '&:hover': {\n      border: '1px solid red'\n    }\n  }\n}\n\nexport const selectStyle = {\n  container: (provided) => ({\n    ...provided,\n    width: '100%',\n\n    fontSize: 12,\n  }),\n  clearIndicator: (provided) => ({\n    ...provided,\n    color: secondaryColor,\n    padding: 5\n  }),\n  multiValueRemove: (provided) => ({\n    ...provided,\n    color: secondaryColor,\n    borderRadius: '0 8px 8px 0',\n    \"&:hover\": {\n      color: '#fff',\n      cursor: 'pointer',\n      backgroundColor: secondaryColor,\n    }\n  }),\n  dropdownIndicator: (provided) => {\n    return {\n      ...provided,\n      color: secondaryColor,\n      padding: 5,\n      \":hover\": {\n        color: secondaryColor\n      }\n    }\n  },\n  multiValue: (provided) => ({\n    ...provided,\n    borderRadius: 16\n  }),\n  groupHeading: (provided) => ({\n    ...provided,\n    color: secondaryColor\n  }),\n  indicatorsContainer: provided => ({\n    ...provided,\n    height: 30\n  }),\n  control: (provided, state) => {\n    return {\n      ...provided,\n      backgroundColor: '#F9F9F9',\n      boxShadow: state.isFocused || state.isHovered ? `0 0 0 1px ${secondaryColor}` : null,\n      \"&:hover\": {\n        borderColor: secondaryColor,\n      },\n      borderWidth: 1,\n      minHeight: 30\n    }\n  },\n  option: (provided, state) => {\n    let color = '#000';\n    let background;\n\n    if (state.isFocused && !state.isSelected) {\n      color = secondaryColor;\n      background = '#EEE';\n    }\n\n    if (state.isSelected) {\n      color = '#FFF';\n      background = secondaryColor;\n    }\n\n    return {\n      ...provided,\n      color,\n      background,\n      \":active\": {\n        color: '#FFF',\n        backgroundColor: secondaryColor\n      }\n    }\n  }\n}\n\nexport const Table = styled.table`\n  color: black;\n  width: 100%;\n  border-spacing: 0;\n  padding-top: 1rem;\n  font-size: 13px;\n\n  tbody > tr:nth-child(odd) {\n    background-color: #FAFAFA;\n  }\n\n  button {\n    background: transparent;\n    color: black;\n    border: 1px solid black;\n\n    &:hover {\n      color: #FFF;\n    }\n  }\n`;\n\nexport const FirstHeaderColumn = styled.td`\n  padding: .7rem;\n  padding-left: 2rem;\n  font-weight: bold;\n`;\n\nexport const HeaderColumn = styled.td`\n  padding: .7rem;\n  font-weight: bold;\n\n  ${props => props.align && css`\n    text-align: ${props.align};\n  `}\n`;\n\nexport const FirstItemColumn = styled.td`\n  padding-left: 2rem;\n\n  ${props => props.isClickable && css`\n    &:hover {\n      cursor: pointer;\n    }\n  `}\n`;\n\nexport const ItemColumn = styled.td`\n  padding: .7rem;\n\n  ${props => props.align && css`\n    text-align: ${props.align};\n  `}\n\n  ${props => props.isClickable && css`\n    &:hover {\n      cursor: pointer;\n    }\n  `}\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  button {\n    margin-right: 2rem;\n  }\n`;\n\nexport const StatusMsgContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 15vh;\n  padding-bottom: 15vh;\n  color: #000;\n  opacity: .5;\n  font-size: 1.2rem;\n`;\n\nexport const LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 15vh;\n  padding-bottom: 15vh;\n`;\n\nexport const DialogFormButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const DialogInput = styled.input`\n    padding: 10px;\n    border-radius: 3px;\n    border: none;\n    margin-top: 8px;\n    transition: border 0.15s ease;\n    font-size: 16px;\n    border: 1px solid #BBB;\n\n    &:focus {\n      border: 1px solid #000;\n    }\n`;\n\nexport const DialogSpan = styled.span`\n    font-size: 16px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    margin-top: 15px;\n`;\n\nexport const DialogForm = styled.form`\n  border-radius: 5px;\n  padding: 40px;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  h1 {\n    font-weight: 500;\n    font-weight: 800;\n    font-size: 18px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    justify-content: center;\n  }\n\n  h2 {\n    font-size: 12px;\n  }\n\n  button {\n    margin: 30px 0 0;\n    color: #4A5173;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.14em;\n    text-transform: uppercase;\n    background-color: #FFF;\n    border: 1px solid #4A5173;\n\n    &:hover {\n      color: #FFF;\n    }\n  }\n`;\n\nexport const SelectText = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  color: #000000;\n  padding-bottom: .5vh;\n`;\n\nexport const materialUIStyle = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    fontFamily: fontFamily,\n    h3: {\n      \"&.appTitle\": {\n        marginBottom: 24,\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: primaryColor,\n    },\n  },\n});","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  lmsInit: [],\n  lmsRequest: [],\n  lmsSuccess: ['data'],\n  lmsError: ['err'],\n  getLms: [],\n  putLms: ['filter']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.LMS_INIT]: init,\n  [Types.LMS_REQUEST]: request,\n  [Types.LMS_SUCCESS]: success,\n  [Types.LMS_ERROR]: error\n});","import { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\n/* Types & Action Creators */\n\nexport const { Types, Creators } = createActions({\n  signInRequest: ['email', 'password'],\n  signInSuccess: ['token'],\n  signOutRequest: [],\n  signOutSuccess: []\n});\n\n/* Initial State */\n\nexport const INITIAL_STATE = Immutable({\n  signedIn: !!localStorage.getItem('@fmdev:token'),\n  token: localStorage.getItem('@fmdev:token') || ''\n});\n\n/* Reducers */\n\nexport const success = (state, { token }) => state.merge({ signedIn: true, token });\n\nexport const signOut = state => state.merge({ signedIn: false, token: '' });\n\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.SIGN_IN_SUCCESS]: success,\n  [Types.SIGN_OUT_SUCCESS]: signOut\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  trainInit: [],\n  postTrain: ['filter'],\n  trainRequest: [],\n  trainSuccess: ['data'],\n  trainError: ['err'],\n\n  deleteTrain: ['filter'],\n  trainDeleteRequest: [],\n  trainDeleteSuccess: ['data'],\n  trainDeleteError: ['err']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: {},\n  loading: false,\n  error: false,\n  deleteLoading: false,\n  deleteError: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ ...INITIAL_STATE });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, loading: false, error: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\nexport const setFilter = (state, { filter }) => state.merge({ filter });\n\n/* Delete Reducers */\n\nexport const deleteRequest = state => state.merge({ deleteLoading: true });\n\nexport const deleteSuccess = state => state.merge({ data: { ...INITIAL_STATE }, deleteLoading: false, deleteError: false });\n\nexport const deleteError = state => state.merge({ deleteLoading: false, deleteError: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.TRAIN_INIT]: init,\n  [Types.TRAIN_REQUEST]: request,\n  [Types.TRAIN_SUCCESS]: success,\n  [Types.TRAIN_ERROR]: error,\n\n  [Types.TRAIN_DELETE_REQUEST]: deleteRequest,\n  [Types.TRAIN_DELETE_SUCCESS]: deleteSuccess,\n  [Types.TRAIN_DELETE_ERROR]: deleteError\n});","import { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\n/* Types & Action Creators */\n\nexport const { Types, Creators } = createActions({\n  chartInit: [],\n  chartRequest: [],\n  getChart: ['filter'],\n  chartSuccess: ['data', 'chartType'],\n  chartError: ['err']\n});\n\n/* Initial State */\n\nexport const INITIAL_STATE = Immutable({\n  data: {},\n  chartType: null,\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ ...INITIAL_STATE });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data, chartType }) => state.merge({ data, chartType, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.CHART_INIT]: init,\n  [Types.CHART_REQUEST]: request,\n  [Types.CHART_SUCCESS]: success,\n  [Types.CHART_ERROR]: error\n});\n","import { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\n/* Types & Action Creators */\n\nexport const { Types, Creators } = createActions({\n  setDialog: ['field', 'data'],\n  setDialogData: ['data']\n});\n\n/* Initial State */\n\nexport const INITIAL_STATE = Immutable({\n  data: null,\n  alert: false,\n  moodle: false,\n  dataSource: false,\n  preProcessingConstant: false,\n  trainConfig: false,\n  trainSave: false,\n  trainMetrics: false,\n  trainAlgorithm: false\n});\n\n/* Reducers */\n\nexport const set = (state, { field, data }) => state.merge({ [field]: !state[field], data: data });\n\nexport const setData = (state, { data }) => state.merge({ data: { ...state.data, ...data } });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.SET_DIALOG]: set,\n  [Types.SET_DIALOG_DATA]: setData\n});\n","export const DATASOURCE = 'DATASOURCE';\nexport const INDICATORS = 'INDICATORS';\nexport const PRE_PROCESSING = 'PRE_PROCESSING';\nexport const ADD_TRAIN = 'ADD_MODEL';\nexport const TRAIN_MODEL = 'TRAIN_MODEL';\nexport const TRAIN = 'TRAIN';\nexport const PRE_PROCESSING_RAW = 'PRE_PROCESSING_RAW';\nexport const TRAIN_PIPELINES = 'TRAIN_PIPELINES';\nexport const LMS = 'LMS';\nexport const CSV = 'CSV';\nexport const LAD = 'LAD';","import { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\nimport { LAD } from '../../constants';\n\n/* Types & Action Creators */\n\nexport const { Types, Creators } = createActions({\n  setScreen: ['screen', 'component', 'data']\n});\n\n/* Initial State */\n\nexport const INITIAL_STATE = Immutable({\n  activeScreen: LAD,\n  activeComponent: LAD,\n  data: {}\n});\n\n/* Reducers */\n\nexport const set = (state, { screen, component, data }) => state.merge({\n  activeScreen: screen,\n  activeComponent: component,\n  data\n});\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.SET_SCREEN]: set\n});\n","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  courseInit: [],\n  courseRequest: [],\n  courseSuccess: ['data'],\n  courseError: ['err'],\n  getCourses: ['filter']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.COURSE_INIT]: init,\n  [Types.COURSE_REQUEST]: request,\n  [Types.COURSE_SUCCESS]: success,\n  [Types.COURSE_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  subjectInit: [],\n  subjectRequest: [],\n  subjectSuccess: ['data'],\n  subjectError: ['err'],\n  getSubjects: ['filter']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.SUBJECT_INIT]: init,\n  [Types.SUBJECT_REQUEST]: request,\n  [Types.SUBJECT_SUCCESS]: success,\n  [Types.SUBJECT_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  semesterInit: [],\n  semesterRequest: [],\n  semesterSuccess: ['data'],\n  semesterError: ['err'],\n  getSemesters: ['filter']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.SEMESTER_INIT]: init,\n  [Types.SEMESTER_REQUEST]: request,\n  [Types.SEMESTER_SUCCESS]: success,\n  [Types.SEMESTER_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  indicatorInit: [],\n  indicatorInitFilter: [],\n  indicatorRequest: [],\n  indicatorSuccess: ['data'],\n  indicatorError: ['err'],\n  getIndicators: ['filter'],\n  saveIndicators: ['filter'],\n  setIndicator: ['name', 'value']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  datsource: null,\n  loading: false,\n  error: false,\n  source: [],\n  indicators: [],\n  targetSelected: [],\n  courseSelected: [],\n  subjectSelected: [],\n  semesterSelected: [],\n  phenomenonSelected: [],\n  studentSelected: [],\n  periodSelected: [],\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const initFilter = state => state.merge({\n  targetSelected: [],\n  courseSelected: [],\n  subjectSelected: [],\n  semesterSelected: [],\n  phenomenonSelected: [],\n  studentSelected: [],\n  periodSelected: [],\n});\n\nexport const set = (state, { name, value }) => state.merge({ [name]: value });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ source: data, data, error: false, loading: false, indicators: [] });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.INDICATOR_INIT]: init,\n  [Types.INDICATOR_INIT_FILTER]: initFilter,\n  [Types.SET_INDICATOR]: set,\n  [Types.INDICATOR_REQUEST]: request,\n  [Types.INDICATOR_SUCCESS]: success,\n  [Types.INDICATOR_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  preProcessingInit: [],\n  preProcessingSetFilter: ['filter'],\n  preProcessingRequest: [],\n  preProcessingSuccess: ['data'],\n  preProcessingError: ['err'],\n  getPreProcessing: ['filter'],\n\n  deletePreProcessing: ['filter'],\n  preProcessingDeleteRequest: [],\n  preProcessingDeleteSuccess: ['data'],\n  preProcessingDeleteError: ['err'],\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  path: null,\n  is_processed: false,\n  filter: null,\n  loading: false,\n  error: false,\n  deleteLoading: false,\n  deleteError: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ ...INITIAL_STATE });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({\n  data: data.data,\n  path: data.path,\n  is_processed: data.is_processed,\n  error: false,\n  loading: false\n});\n\nexport const error = state => state.merge({ loading: false, error: true });\n\nexport const setFilter = (state, { filter }) => state.merge({ filter });\n\n/* Delete Reducers */\n\nexport const deleteRequest = state => state.merge({ deleteLoading: true });\n\nexport const deleteSuccess = state => state.merge({ data: { ...INITIAL_STATE }, deleteLoading: false, deleteError: false });\n\nexport const deleteError = state => state.merge({ deleteLoading: false, deleteError: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.PRE_PROCESSING_INIT]: init,\n  [Types.PRE_PROCESSING_REQUEST]: request,\n  [Types.PRE_PROCESSING_SUCCESS]: success,\n  [Types.PRE_PROCESSING_ERROR]: error,\n  [Types.PRE_PROCESSING_SET_FILTER]: setFilter,\n\n  [Types.PRE_PROCESSING_DELETE_REQUEST]: deleteRequest,\n  [Types.PRE_PROCESSING_DELETE_SUCCESS]: deleteSuccess,\n  [Types.PRE_PROCESSING_DELETE_ERROR]: deleteError,\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  trainStatusInit: [],\n  postTrainStatus: ['filter'],\n  trainStatusRequest: [],\n  trainStatusSuccess: ['data'],\n  trainStatusError: ['err']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ ...INITIAL_STATE });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, loading: false, error: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\nexport const setFilter = (state, { filter }) => state.merge({ filter });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.TRAIN_STATUS_INIT]: init,\n  [Types.TRAIN_STATUS_REQUEST]: request,\n  [Types.TRAIN_STATUS_SUCCESS]: success,\n  [Types.TRAIN_STATUS_ERROR]: error,\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  trainModelInit: [],\n  trainModelRequest: [],\n  trainModelSuccess: ['data', 'lastModelSaved'],\n  trainModelError: ['err'],\n  getTrainModel: [],\n  postTrainModel: ['data'],\n  putTrainModel: ['id', 'data'],\n  deleteTrainModel: ['id']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  lastModelSaved: null,\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data, lastModelSaved }) => state.merge({ data, lastModelSaved, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.TRAIN_MODEL_INIT]: init,\n  [Types.TRAIN_MODEL_REQUEST]: request,\n  [Types.TRAIN_MODEL_SUCCESS]: success,\n  [Types.TRAIN_MODEL_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  trainMetricInit: [],\n  trainMetricRequest: [],\n  trainMetricSuccess: ['data'],\n  trainMetricError: ['err'],\n  postTrainMetric: ['filter']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.TRAIN_METRIC_INIT]: init,\n  [Types.TRAIN_METRIC_REQUEST]: request,\n  [Types.TRAIN_METRIC_SUCCESS]: success,\n  [Types.TRAIN_METRIC_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  modelCopyInit: [],\n  modelCopyRequest: [],\n  modelCopySuccess: ['data'],\n  modelCopyError: ['err'],\n  getModelCopy: ['id']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: {},\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.MODEL_COPY_INIT]: init,\n  [Types.MODEL_COPY_REQUEST]: request,\n  [Types.MODEL_COPY_SUCCESS]: success,\n  [Types.MODEL_COPY_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  downloadInit: [],\n  downloadRequest: [],\n  downloadSuccess: ['data'],\n  downloadError: ['err'],\n  getDownload: ['id', 'action']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: {},\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.DOWNLOAD_INIT]: init,\n  [Types.DOWNLOAD_REQUEST]: request,\n  [Types.DOWNLOAD_SUCCESS]: success,\n  [Types.DOWNLOAD_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  dataSourceInit: [],\n  dataSourceRequest: [],\n  dataSourceSuccess: ['data'],\n  dataSourceError: ['err'],\n  getDataSource: [],\n  postDataSource: ['data'],\n  deleteDataSource: ['id']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.DATA_SOURCE_INIT]: init,\n  [Types.DATA_SOURCE_REQUEST]: request,\n  [Types.DATA_SOURCE_SUCCESS]: success,\n  [Types.DATA_SOURCE_ERROR]: error\n});","import { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\n/* Types & Action Creators */\n\nexport const { Types, Creators } = createActions({\n  phenomenonInit: [],\n  phenomenonRequest: [],\n  getPhenomenon: [],\n  phenomenonSuccess: ['data'],\n  phenomenonError: ['err']\n});\n\n/* Initial State */\n\nexport const INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ ...INITIAL_STATE });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.PHENOMENON_INIT]: init,\n  [Types.PHENOMENON_REQUEST]: request,\n  [Types.PHENOMENON_SUCCESS]: success,\n  [Types.PHENOMENON_ERROR]: error\n});\n","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  predictionInit: [],\n  postPrediction: ['filter'],\n  predictionRequest: [],\n  predictionSuccess: ['data'],\n  predictionError: ['err'],\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: null,\n  loading: false,\n  error: false,\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ ...INITIAL_STATE });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, loading: false, error: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.PREDICTION_INIT]: init,\n  [Types.PREDICTION_REQUEST]: request,\n  [Types.PREDICTION_SUCCESS]: success,\n  [Types.PREDICTION_ERROR]: error,\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  periodInit: [],\n  periodRequest: [],\n  periodSuccess: ['data'],\n  periodError: ['err'],\n  getPeriods: ['filter']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.PERIOD_INIT]: init,\n  [Types.PERIOD_REQUEST]: request,\n  [Types.PERIOD_SUCCESS]: success,\n  [Types.PERIOD_ERROR]: error\n});","import { createActions, createReducer } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nexport const { Types, Creators } = createActions({\n  studentInit: [],\n  studentRequest: [],\n  studentSuccess: ['data'],\n  studentError: ['err'],\n  getStudents: ['filter']\n});\n\n/** --------------------------------\n * Variable declarations\n * --------------------------------- */\n\nconst INITIAL_STATE = Immutable({\n  data: [],\n  loading: false,\n  error: false\n});\n\n/* Reducers */\n\nexport const init = state => state.merge({ data: [] });\n\nexport const request = state => state.merge({ loading: true });\n\nexport const success = (state, { data }) => state.merge({ data, error: false, loading: false });\n\nexport const error = state => state.merge({ loading: false, error: true });\n\n/* Reducers to types */\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.STUDENT_INIT]: init,\n  [Types.STUDENT_REQUEST]: request,\n  [Types.STUDENT_SUCCESS]: success,\n  [Types.STUDENT_ERROR]: error\n});","import axios from 'axios';\nimport store from '../store';\n\nconst api = axios.create({\n  baseURL: `${process.env.REACT_APP_HOST}/api/`\n});\n\napi.interceptors.request.use((config) => {\n  const { token } = store.getState().auth;\n\n  const headers = { ...config.headers };\n\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  return { ...config, headers };\n});\n\nexport default api;","import api from '../../services/api';\nimport { Creators } from '../ducks/chart';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getChart({ filter }) {\n  try {\n    let response;\n\n    yield put(Creators.chartRequest());\n    response = yield call(api.post, 'chart', filter);\n\n    yield put(Creators.chartSuccess(response.data, filter.chartType));\n  } catch (err) {\n    yield put(Creators.chartError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao exibir gráfico'\n    }));\n  }\n}","import { TRAIN_PIPELINES, PRE_PROCESSING_RAW } from \"../constants\";\n\nexport const copyToClipboard = (value) => {\n  let dummy = document.createElement(\"input\");\n\n  document.body.appendChild(dummy);\n  dummy.value = value;\n  dummy.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(dummy);\n}\n\nexport const getExtensionDownload = (action) => {\n  if (action === TRAIN_PIPELINES) {\n    return 'py';\n  }\n\n  if (action === PRE_PROCESSING_RAW) {\n    return 'csv';\n  }\n}\n\nexport const downloadStream = ({ id, content, action }) => {\n  const url = window.URL.createObjectURL(new Blob([content]));\n  const link = document.createElement('a');\n  const extension = getExtensionDownload(action);\n\n  link.href = url;\n  link.setAttribute('download', `${id}.${extension}`);\n  document.body.appendChild(link);\n  link.click();\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/download';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { downloadStream } from '../../utils/utils';\n\n\nexport function* getDownload({ id, action }) {\n  try {\n    yield put(Creators.downloadRequest());\n    const response = yield call(api.get, `download/${id}?action=${action}`, { responseType: 'blob' });\n\n    yield put(Creators.downloadSuccess(response.data));\n    downloadStream({ id, content: response.data, action });\n\n  } catch (err) {\n    yield put(Creators.downloadError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao baixar arquivo'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/model_copy';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { copyToClipboard } from '../../utils/utils';\n\n\nexport function* getModelCopy({ id }) {\n  try {\n    yield put(Creators.modelCopyRequest());\n    const response = yield call(api.get, `model-copy/${id}`);\n\n    yield put(Creators.modelCopySuccess(response.data));\n\n    copyToClipboard(response.data.template);\n\n    yield put(toastrActions.add({\n      type: 'success',\n      title: 'Sucesso',\n      message: 'URL Copiada!'\n    }));\n\n  } catch (err) {\n    yield put(Creators.modelCopyError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao copiar URL do modelo'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/train';\nimport { Creators as TrainStatusCreators } from '../ducks/train_status';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* postTrain({ filter }) {\n  try {\n    yield put(Creators.trainInit());\n    yield put(Creators.trainRequest());\n    const response = yield call(api.post, 'train', filter);\n\n    yield put(toastrActions.add({\n      type: 'success',\n      title: 'Sucesso',\n      message: `Treinamento finalizado com sucesso!`\n    }));\n\n    yield put(Creators.trainSuccess(response.data));\n    yield put(TrainStatusCreators.postTrainStatus(filter));\n  } catch (err) {\n    yield put(Creators.trainError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao treinar base de dados'\n    }));\n  }\n}\n\nexport function* deleteTrain({ filter }) {\n  try {\n    yield put(Creators.trainDeleteRequest());\n    const response = yield call(api.delete, 'train', { data: filter });\n\n    yield put(Creators.trainDeleteSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.trainDeleteError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao excluir dados do treinamento'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/lms';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getLms() {\n  try {\n    yield put(Creators.lmsRequest());\n    const response = yield call(api.get, 'lms');\n\n    yield put(Creators.lmsSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.lmsError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar LMS'\n    }));\n  }\n}\n\nexport function* putLms({ filter }) {\n  try {\n    yield put(Creators.lmsRequest());\n    const response = yield call(api.put, 'lms', filter);\n\n    yield put(Creators.lmsSuccess(response.data));\n\n    yield put(toastrActions.add({\n      type: 'success',\n      title: 'Sucesso',\n      message: 'Fonte de dados alterada com sucesso!'\n    }));\n\n  } catch (err) {\n    yield put(Creators.lmsError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao atualizar LMS'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/course';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getCourses({ filter }) {\n  try {\n    yield put(Creators.courseRequest());\n    const response = yield call(api.post, 'course', filter);\n\n    yield put(Creators.courseSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.courseError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar Cursos'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/subject';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getSubjects({ filter }) {\n  try {\n    yield put(Creators.subjectRequest());\n    const response = yield call(api.post, 'subject', filter);\n\n    yield put(Creators.subjectSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.subjectError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar Disciplinas'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/semester';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getSemesters({ filter }) {\n  try {\n    yield put(Creators.semesterRequest());\n    const response = yield call(api.post, 'semester', filter);\n\n    yield put(Creators.semesterSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.semesterError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar Turmas'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/indicator';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getIndicators({ filter }) {\n  try {\n    yield put(Creators.indicatorRequest());\n    const response = yield call(api.post, 'indicator', filter);\n\n    yield put(Creators.indicatorSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.indicatorError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar Indicadores'\n    }));\n  }\n}\n\nexport function* saveIndicators() {\n  try {\n    yield put(Creators.indicatorRequest());\n    const response = yield call(api.post, 'indicator');\n\n    yield put(Creators.indicatorSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.indicatorError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar Indicadores'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/train_status';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* postTrainStatus({ filter }) {\n  try {\n    yield put(Creators.trainStatusRequest());\n    const response = yield call(api.post, 'train-status', filter);\n\n    yield put(Creators.trainStatusSuccess(response.data));\n\n  } catch (err) {\n    yield put(Creators.trainStatusError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao buscar status do treinamento'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/train_model';\nimport { Creators as DialogCreators } from '../ducks/dialog';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getTrainModel() {\n  try {\n    yield put(Creators.trainModelRequest());\n    const response = yield call(api.get, 'train-model');\n\n    yield put(Creators.trainModelSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.trainModelError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar modelos'\n    }));\n  }\n}\n\nexport function* postTrainModel({ data }) {\n  try {\n    yield put(Creators.trainModelRequest());\n    const response = yield call(api.post, 'train-model', data);\n\n    yield put(Creators.trainModelSuccess(response.data, data.path));\n    yield put(DialogCreators.setDialog('trainSave'));\n\n    yield put(toastrActions.add({\n      type: 'success',\n      title: 'Sucesso',\n      message: `Modelo salvo com sucesso!`\n    }));\n  } catch (err) {\n    yield put(Creators.trainModelError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao salvar modelo'\n    }));\n  }\n}\n\nexport function* putTrainModel({ id, data }) {\n  try {\n    yield put(Creators.trainModelRequest());\n    const response = yield call(api.put, `train-model/${id}`, data);\n\n    yield put(Creators.trainModelSuccess(response.data, null));\n\n    yield put(toastrActions.add({\n      type: 'success',\n      title: 'Sucesso',\n      message: `Chave de API regerada com sucesso!`\n    }));\n  } catch (err) {\n    yield put(Creators.trainModelError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao gerar nova chave de API'\n    }));\n  }\n}\n\nexport function* deleteTrainModel({ id }) {\n  try {\n    yield put(Creators.trainModelRequest());\n    const response = yield call(api.delete, `train-model/${id}`);\n\n    yield put(Creators.trainModelSuccess(response.data, null));\n\n    yield put(toastrActions.add({\n      type: 'success',\n      title: 'Sucesso',\n      message: `Modelo removido com sucesso!`\n    }));\n  } catch (err) {\n    yield put(Creators.trainModelError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao remover modelo'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/train_metric';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* postTrainMetric({ filter }) {\n  try {\n    yield put(Creators.trainMetricRequest());\n    const response = yield call(api.post, 'train-metric', filter);\n\n    yield put(Creators.trainMetricSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.trainMetricError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao exibir métricas do modelo'\n    }));\n  }\n}","import { call, put } from 'redux-saga/effects';\nimport api from '../../services/api';\nimport { push } from 'connected-react-router';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { Creators } from '../ducks/auth';\nimport { Creators as ScreenCreators } from '../ducks/screen';\nimport { DATASOURCE, ADD_TRAIN } from '../../constants';\n\n\nexport function* signInRequest({ email, password }) {\n\n  try {\n    const response = yield call(api.post, 'auth/login', { email, password });\n\n    localStorage.setItem('@fmdev:token', response.data.token);\n    yield put(Creators.signInSuccess(response.data.token));\n    yield put(push('/'));\n  } catch (err) {\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Falha no login',\n      message: 'Verifique seu e-mail/senha'\n    }));\n  }\n}\n\nexport function* signOutRequest() {\n  localStorage.removeItem('@fmdev:token');\n\n  yield put(Creators.signOutSuccess());\n  yield put(push('/'));\n  yield put(ScreenCreators.setScreen(ADD_TRAIN, DATASOURCE));\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/pre_processing';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getPreProcessing({ filter }) {\n  try {\n    yield put(Creators.preProcessingRequest());\n    yield put(Creators.preProcessingSetFilter(filter));\n    const response = yield call(api.post, 'pre-processing', filter);\n\n    yield put(Creators.preProcessingSuccess(response.data));\n\n    if (filter.pre_processing_indicator && filter.pre_processing_strategy) {\n      yield put(toastrActions.add({\n        type: 'success',\n        title: 'Sucesso',\n        message: `Indicador ${filter.pre_processing_indicator} pré-processado com sucesso!`\n      }));\n    }\n\n  } catch (err) {\n    yield put(Creators.preProcessingError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar Indicadores'\n    }));\n  }\n}\n\nexport function* deletePreProcessing({ filter }) {\n  try {\n    yield put(Creators.preProcessingDeleteRequest());\n    const response = yield call(api.delete, 'pre-processing', { data: filter });\n\n    yield put(Creators.preProcessingDeleteSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.preProcessingDeleteError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao excluir dados do pré-processamento'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/prediction';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* postPrediction({ filter }) {\n  try {\n    yield put(Creators.predictionInit());\n    yield put(Creators.predictionRequest());\n\n    // Abaixo, fazer chamada para descobrir e pegar as variáveis utilizadas na geração do modelo, de acordo com o phenomenon escolhido pelo usuário e passado no filter. Algo para se basear é o \"getModelCopy\". P.S.: Não achei essas variáveis salvas no banco, então só devem estar em arquivo. Não seria importante salvar tais variáveis no banco de dados? P.S.: Pegar as variáveis seguindo o modelo de ModelCopy.py | DONE\n\n    // Após pegar as variáveis, fazer chamada para montar e executar a query que dá um SELECT nas colunas correspondentes às variáveis acima, passando as próprias variáveis que foram pegas na chamada acima, e os outros atributos do filter que forem passados (cursos, disciplinas, turmas e período) vão estar no WHERE da query.\n\n    // Após a execução da query acima, passar o retorno desse SELECT (todos os atributos e dados respectivos a cada aluno da base de dados (payload.data)) como payload para fazer a predição.\n    const modelEndpoint = filter.phenomenon;\n    const response = yield call(api.post, `predict/${modelEndpoint}`, filter);\n\n    // yield put(toastrActions.add({\n    //   type: 'success',\n    //   title: 'Sucesso',\n    //   message: `Análise finalizada com sucesso!`\n    // }));\n\n    yield put(Creators.predictionSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.predictionError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao gerar análise'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/data_source';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getDataSource() {\n  try {\n    yield put(Creators.dataSourceRequest());\n    const response = yield call(api.get, 'data-source');\n\n    yield put(Creators.dataSourceSuccess(response.data));\n\n  } catch (err) {\n    yield put(Creators.dataSourceError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar fontes de dados'\n    }));\n  }\n}\n\nexport function* postDataSource({ data }) {\n  try {\n    yield put(Creators.dataSourceInit());\n    yield put(Creators.dataSourceRequest());\n    const response = yield call(api.post, 'data-source', data);\n\n    yield put(toastrActions.add({\n      type: 'success',\n      title: 'Sucesso',\n      message: `Fonte de dados criada com sucesso!`\n    }));\n\n    yield put(Creators.dataSourceSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.dataSourceError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao salvar fonte de dados'\n    }));\n  }\n}\n\nexport function* deleteDataSource({ id }) {\n  try {\n    yield put(Creators.dataSourceRequest());\n    const response = yield call(api.delete, `data-source/${id}`);\n\n    yield put(Creators.dataSourceSuccess(response.data));\n\n    yield put(toastrActions.add({\n      type: 'success',\n      title: 'Sucesso',\n      message: `Fonte de dados removida com sucesso!`\n    }));\n  } catch (err) {\n    yield put(Creators.dataSourceError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao excluir fonte de dados'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/phenomenon';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getPhenomenon() {\n  try {\n    yield put(Creators.phenomenonRequest());\n    const response = yield call(api.get, 'phenomenon');\n\n    yield put(Creators.phenomenonSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.phenomenonError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar fenômenos educacionais'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/student';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getStudents({ filter }) {\n  try {\n    yield put(Creators.studentRequest());\n    const response = yield call(api.post, 'student', filter);\n\n    yield put(Creators.studentSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.studentError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar Alunos'\n    }));\n  }\n}","import api from '../../services/api';\nimport { Creators } from '../ducks/period';\nimport { call, put } from 'redux-saga/effects';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\n\nexport function* getPeriods({ filter }) {\n  try {\n    yield put(Creators.periodRequest());\n    const response = yield call(api.post, 'period', filter);\n\n    yield put(Creators.periodSuccess(response.data));\n  } catch (err) {\n    yield put(Creators.periodError({ err }));\n    yield put(toastrActions.add({\n      type: 'error',\n      title: 'Erro',\n      message: 'Falha ao listar Períodos'\n    }));\n  }\n}","import { all, takeLatest } from 'redux-saga/effects';\nimport { Types as LmsTypes } from '../ducks/lms';\nimport { Types as AuthTypes } from '../ducks/auth';\nimport { Types as ChartTypes } from '../ducks/chart';\nimport { Types as CourseTypes } from '../ducks/course';\nimport { Types as SubjectTypes } from '../ducks/subject';\nimport { Types as SemesterTypes } from '../ducks/semester';\nimport { Types as IndicatorTypes } from '../ducks/indicator';\nimport { Types as PreProcessingTypes } from '../ducks/pre_processing';\nimport { Types as TrainTypes } from '../ducks/train';\nimport { Types as TrainStatusTypes } from '../ducks/train_status';\nimport { Types as TrainModelTypes } from '../ducks/train_model';\nimport { Types as TrainMetricTypes } from '../ducks/train_metric';\nimport { Types as ModelCopyTypes } from '../ducks/model_copy';\nimport { Types as DownloadTypes } from '../ducks/download';\nimport { Types as DataSourceTypes } from '../ducks/data_source';\nimport { Types as PhenomenonTypes } from '../ducks/phenomenon';\nimport { Types as PredictionTypes } from '../ducks/prediction';\nimport { Types as StudentTypes } from '../ducks/student';\nimport { Types as PeriodTypes } from '../ducks/period';\n\nimport { getChart } from './chart';\nimport { getDownload } from './download';\nimport { getModelCopy } from './model_copy';\nimport { postTrain, deleteTrain } from './train';\nimport { getLms, putLms } from './lms';\nimport { getCourses } from './course';\nimport { getSubjects } from './subject';\nimport { getSemesters } from './semester';\nimport { getIndicators } from './indicator';\nimport { postTrainStatus } from './train_status';\nimport { getTrainModel, postTrainModel, deleteTrainModel, putTrainModel } from './train_model';\nimport { postTrainMetric } from './train_metric';\nimport { signInRequest, signOutRequest } from './auth';\nimport { getPreProcessing, deletePreProcessing } from './pre_processing';\nimport { postPrediction } from './prediction';\nimport { getDataSource, postDataSource, deleteDataSource } from './data_source';\nimport { getPhenomenon } from './phenomenon';\nimport { getStudents } from './student';\nimport { getPeriods } from './period';\n\nexport default function* rootSaga() {\n  return yield all([\n    takeLatest(ChartTypes.GET_CHART, getChart),\n    takeLatest(DownloadTypes.GET_DOWNLOAD, getDownload),\n    takeLatest(ModelCopyTypes.GET_MODEL_COPY, getModelCopy),\n    takeLatest(AuthTypes.SIGN_IN_REQUEST, signInRequest),\n    takeLatest(AuthTypes.SIGN_OUT_REQUEST, signOutRequest),\n    takeLatest(LmsTypes.GET_LMS, getLms),\n    takeLatest(LmsTypes.PUT_LMS, putLms),\n    takeLatest(CourseTypes.GET_COURSES, getCourses),\n    takeLatest(SubjectTypes.GET_SUBJECTS, getSubjects),\n    takeLatest(SemesterTypes.GET_SEMESTERS, getSemesters),\n    takeLatest(IndicatorTypes.GET_INDICATORS, getIndicators),\n    takeLatest(PreProcessingTypes.GET_PRE_PROCESSING, getPreProcessing),\n    takeLatest(PreProcessingTypes.DELETE_PRE_PROCESSING, deletePreProcessing),\n    takeLatest(TrainTypes.POST_TRAIN, postTrain),\n    takeLatest(TrainTypes.DELETE_TRAIN, deleteTrain),\n    takeLatest(TrainStatusTypes.POST_TRAIN_STATUS, postTrainStatus),\n    takeLatest(TrainModelTypes.GET_TRAIN_MODEL, getTrainModel),\n    takeLatest(TrainModelTypes.POST_TRAIN_MODEL, postTrainModel),\n    takeLatest(TrainModelTypes.PUT_TRAIN_MODEL, putTrainModel),\n    takeLatest(TrainModelTypes.DELETE_TRAIN_MODEL, deleteTrainModel),\n    takeLatest(TrainMetricTypes.POST_TRAIN_METRIC, postTrainMetric),\n    takeLatest(DataSourceTypes.GET_DATA_SOURCE, getDataSource),\n    takeLatest(DataSourceTypes.POST_DATA_SOURCE, postDataSource),\n    takeLatest(DataSourceTypes.DELETE_DATA_SOURCE, deleteDataSource),\n    takeLatest(PhenomenonTypes.GET_PHENOMENON, getPhenomenon),\n    takeLatest(PredictionTypes.POST_PREDICTION, postPrediction),\n    takeLatest(StudentTypes.GET_STUDENTS, getStudents),\n    takeLatest(PeriodTypes.GET_PERIODS, getPeriods),\n  ])\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport history from '../routes/history';\nimport rootReducer from './ducks';\nimport rootSaga from './sagas';\nimport { routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport Immutable from 'seamless-immutable';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\n\nconst configureStore = (initialState) => {\n  return createStore(\n    rootReducer(history),\n    Immutable(initialState),\n    composeWithDevTools(\n      applyMiddleware(...middlewares)\n    ));\n}\n\nconst store = configureStore();\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport lms from './lms';\nimport auth from './auth';\nimport train from './train';\nimport chart from './chart';\nimport dialog from './dialog';\nimport screen from './screen';\nimport course from './course';\nimport subject from './subject';\nimport semester from './semester';\nimport indicator from './indicator';\nimport pre_processing from './pre_processing';\nimport train_status from './train_status';\nimport train_model from './train_model';\nimport train_metric from './train_metric';\nimport model_copy from './model_copy';\nimport download from './download';\nimport data_source from './data_source';\nimport phenomenon from './phenomenon';\nimport prediction from './prediction';\nimport period from './period';\nimport student from './student';\nimport { reducer as toastr } from 'react-redux-toastr';\n\nexport default history => combineReducers({\n  lms,\n  auth,\n  train,\n  chart,\n  dialog,\n  toastr,\n  screen,\n  course,\n  subject,\n  semester,\n  indicator,\n  pre_processing,\n  train_status,\n  train_model,\n  train_metric,\n  model_copy,\n  download,\n  data_source,\n  phenomenon,\n  prediction,\n  student,\n  period,\n  router: connectRouter(history)\n});","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport store from '../store';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (store.getState().auth.signedIn ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to={{ pathname: '/signin', state: { from: props.location } }}\n        />\n      ))\n    }\n  />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport store from '../store';\n\nconst GuestRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (!store.getState().auth.signedIn ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to={{ pathname: '/', state: { from: props.location } }}\n        />\n      ))\n    }\n  />\n)\n\nexport default GuestRoute;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: stretch;\n`;","import styled from 'styled-components';\n\nexport const Container = styled.aside`\n  background: #4A5173;\n  padding: 20px 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ItemList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Logo = styled.button`\n  border: 0;\n  background: transparent;\n  margin: 0 0 8px;\n\n  img {\n    transition: all 0.2s;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const Item = styled.button`\n  border: 0;\n  background: transparent;\n  margin: 0 0 8px;\n  margin-top: 2vh;\n`;\n\nexport const ItemText = styled.span`\n  font-size: 16px;\n  line-height: 22px;\n  color: #FFFCF8;\n`;","import React, { Component } from 'react';\n\nimport logo from '../../assets/logo.svg';\nimport { Container, ItemList, Item, ItemText, Logo } from './styles';\nimport { connect } from 'react-redux';\n\nimport { Creators as AuthActions } from '../../store/ducks/auth';\nimport { Creators as ScreenActions } from '../../store/ducks/screen';\nimport AddIcon from 'react-feather/dist/icons/plus-circle';\nimport TranModelIcon from 'react-feather/dist/icons/package';\nimport MonitorIcon from 'react-feather/dist/icons/monitor';\nimport { DATASOURCE, TRAIN_MODEL, ADD_TRAIN, LAD } from '../../constants';\n\nclass SideMenu extends Component {\n\n  getStrokeWidth = (screen) => {\n    const { activeScreen } = this.props.screen;\n\n    if (activeScreen === screen) {\n      return 1.5;\n    }\n\n    return .5;\n  }\n\n  render() {\n\n    const { signOutRequest } = this.props;\n    const links = [\n      {\n        screen: LAD,\n        component: LAD,\n        icon: <MonitorIcon color={'#FFF'} strokeWidth={this.getStrokeWidth(LAD)} />\n      },\n      {\n        screen: ADD_TRAIN,\n        component: DATASOURCE,\n        icon: <AddIcon color={'#FFF'} strokeWidth={this.getStrokeWidth(ADD_TRAIN)} />\n      },\n      {\n        screen: TRAIN_MODEL,\n        component: TRAIN_MODEL,\n        icon: <TranModelIcon color={'#FFF'} strokeWidth={this.getStrokeWidth(TRAIN_MODEL)} />\n      }\n    ];\n\n    return (\n      <Container>\n        <ItemList>\n          <Logo>\n            <img alt=\"\" src={logo} />\n          </Logo>\n          {links.map((link, idx) => (\n            <Item\n              key={idx}\n              onClick={this.props.setScreen.bind(this, link.screen, link.component, null)}>\n              {link.icon}\n            </Item>\n          ))}\n        </ItemList>\n        <ItemList>\n          <Item>\n            <ItemText onClick={signOutRequest}>Sair</ItemText>\n          </Item>\n        </ItemList>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ screen }) => ({ screen });\n\nexport default connect(\n  mapStateToProps,\n  { ...AuthActions, ...ScreenActions }\n)(SideMenu);","import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  padding: 1rem;\n  padding-left: 1.5rem;\n  padding-right: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;","import styled, { css } from 'styled-components';\n\nconst sizes = {\n  small: css`\n    height: 28px;\n    font-size: 12px;\n  `,\n  default: css`\n    height: 36px;\n    font-size: 14px;\n  `,\n  big: css`\n    height: 44px;\n    font-size: 18px;\n  `\n};\n\nconst colors = {\n  default: css`\n  background: #DEB981;\n\n  &:hover {\n    background: #4A5173;\n  }\n  `,\n  danger: css`\n    background: #e04848;\n\n    &:hover {\n      background: #a43d3d;\n    }\n  `,\n  gray: css`\n    background: #b9bbbe;\n    color: #666;\n\n    &:hover {\n      background: #999;\n    }\n  `\n};\n\nconst Button = styled.button.attrs({\n  type: 'button'\n})`\n  \n  font-size: 12px;\n  padding: 0 10px;\n  border-radius: none;\n  color: black;\n  background: #DEB981;\n  border: 1px solid #DEB981;\n  box-sizing: border-box;\n  line-height: 18px;\n  letter-spacing: 0.14em;\n  text-transform: uppercase;\n  font-weight: normal;\n  color: #FFF;\n  transition: background-color 0.15s ease;\n\n  &:hover {\n    color: #FFF;\n    border: 1px solid #4A5173;\n  }\n\n  ${props => sizes[props.size || 'default']}\n  ${props => colors[props.color || 'default']}\n\n  ${props => props.filled === false && css`\n    background: none;\n    color: #4A5173;\n    border: 1px solid #4A5173;\n\n    &:hover {\n      background:#4A5173;\n      color: #FFF;\n    }`}\n\n  ${props => props.isCancel === true && css`\n      font-weight: normal;\n      border: none !important;\n    `}\n  \n  ${props => props.disabled === true && css`\n    font-weight: normal;\n    opacity: .4;\n\n    &:hover {\n      cursor: default;\n    }`}\n`;\n\nexport default Button;","import styled, { css } from 'styled-components';\n\nconst sizes = {\n  default: css`\n    margin-top: 15vh;\n    margin-bottom: 20vh;\n    margin-left: 20vw;\n    width: 60%;\n    min-height: 60vh;\n  `,\n  big: css`\n    margin-top: 5vh;\n    margin-bottom: 5vh;\n    margin-left: 5vw;\n    margin-right: 5vw;\n    width: 90%;\n    min-height: 90vh;\n  `\n};\n\nexport const ConfigContainer = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n\n  ${props => sizes[props.size || 'default']}\n  \n  h1 {\n    padding: 2rem;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 31px;\n    color: #4A5173;\n  }\n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Content = styled.div`\n  background: #fff;\n  color: #000;\n  border-radius: 5px;\n  box-shadow: 40px;\n  width: ${props => (props.size === 'big' ? 600 : 400)}\n`;","import React from 'react';\nimport { Container, Content } from './styles';\n\nconst Dialog = ({ children, size }) => (\n  <Container>\n    <Content size={size}>{children}</Content>\n  </Container>\n)\n\nexport default Dialog;","import React, { Component } from 'react';\nimport {\n  DialogForm, DialogFormButtonContainer,\n  DialogInput, DialogSpan\n} from '../../styles/global';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { Creators as LmsActions } from '../../store/ducks/lms';\nimport { connect } from 'react-redux';\nimport Dialog from '../Dialog';\nimport Button from '../../styles/Button';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport Select from 'react-select';\nimport { selectStyle } from '../../styles/global';\n\nconst versions = [\n  { value: '3.8.0', label: '3.8.0' },\n  { value: '3.7.0', label: '3.7.0' },\n  { value: '3.6.0', label: '3.6.0' }\n];\n\nclass MoodleConfigDialog extends Component {\n\n  onClose = () => {\n    this.props.setDialog('moodle');\n  }\n\n  submit() {\n    const { id, name, url, token, version } = this.props.dialog.data;\n\n    if (!url) {\n      this.renderWarningMsg('Informe a URL');\n      return;\n    }\n\n    if (!token) {\n      this.renderWarningMsg('Informe a Chave de API');\n      return;\n    }\n\n    if (!version) {\n      this.renderWarningMsg('Informe a versão');\n      return;\n    }\n\n    this.props.putLms({ id, url, token, version: version.value });\n    this.props.setDialog(name);\n  }\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  handleChangeInput = e => this.props.setDialogData({ [e.target.name]: e.target.value });\n\n  handleChange = (item, name) => this.props.setDialogData({ [name]: item });\n\n  render() {\n    const { url, token, version, description } = this.props.dialog.data || {};\n    const { moodle } = this.props.dialog;\n\n    if (!moodle) {\n      return null;\n    }\n\n    return (\n      <Dialog>\n        <DialogForm>\n          <h1>Configurar Integração</h1>\n          <h2>{description}</h2>\n\n          <DialogSpan>URL</DialogSpan>\n          <DialogInput value={url} autoComplete=\"off\" onChange={this.handleChangeInput} name=\"url\"></DialogInput>\n\n          <DialogSpan>Chave de Api</DialogSpan>\n          <DialogInput value={token} onChange={this.handleChangeInput} name=\"token\" type=\"password\" />\n\n          <DialogSpan>Versão LMS</DialogSpan>\n          <div style={{ width: '100%' }}>\n            <Select\n              isClearable\n              value={version}\n              onChange={(e) => this.handleChange(e, 'version')}\n              placeholder={'Selecione uma Versão'}\n              styles={selectStyle}\n              options={versions} />\n          </div>\n\n          <DialogFormButtonContainer>\n            <Button onClick={this.submit.bind(this)}>Salvar</Button>\n            <Button style={{ marginLeft: '1vw' }} color=\"gray\" isCancel={true} onClick={this.onClose}>Cancelar</Button>\n          </DialogFormButtonContainer>\n\n        </DialogForm>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = ({ dialog }) => ({ dialog });\n\nexport default connect(\n  mapStateToProps,\n  {\n    ...DialogActions, ...toastrActions,\n    ...LmsActions\n  }\n)(MoodleConfigDialog);","import styled, { css } from \"styled-components\";\n\nconst dragActive = css`\n  border-color: #78e5d5;\n`;\n\nconst dragReject = css`\n  border-color: #e57878;\n`;\n\nexport const DropContainer = styled.div.attrs({\n  className: \"dropzone\"\n})`\n  border: 1px dashed #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: height 0.2s ease;\n  ${props => props.isDragActive && dragActive};\n  ${props => props.isDragReject && dragReject};\n`;\n\nconst messageColors = {\n  default: \"#999\",\n  error: \"#e57878\",\n  success: \"#78e5d5\"\n};\n\nexport const UploadMessage = styled.p`\n  display: flex;\n  color: ${props => messageColors[props.type || \"default\"]};\n  justify-content: center;\n  align-items: center;\n  padding: 15px 0;\n`;","import React, { Component } from 'react';\nimport DropZone from 'react-dropzone';\nimport { DropContainer, UploadMessage } from './styles';\nimport api from '../../services/api';\nimport filesize from \"filesize\";\n\nexport default class Upload extends Component {\n\n  state = {\n    uploadedFiles: []\n  };\n\n  handleUpload = files => {\n    const uploadedFiles = files.map(file => ({\n      file,\n      id: null,\n      name: file.name,\n      readableSize: filesize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false,\n      url: null\n    }));\n\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.concat(uploadedFiles)\n    });\n\n    uploadedFiles.forEach(this.processUpload);\n  };\n\n  updateFile = (id, data) => {\n    const newFiles = this.state.uploadedFiles.map(uploadedFile => {\n      return id === uploadedFile.id\n        ? { ...uploadedFile, ...data }\n        : uploadedFile;\n    });\n\n    this.setState({ uploadedFiles: newFiles });\n\n    if (this.props.onUpload) {\n      this.props.onUpload(newFiles);\n    }\n  };\n\n  processUpload = uploadedFile => {\n    const data = new FormData();\n\n    data.append(\"file\", uploadedFile.file, uploadedFile.name);\n\n    api\n      .post(\"file\", data, {\n        onUploadProgress: e => {\n          const progress = parseInt(Math.round((e.loaded * 100) / e.total));\n\n          this.updateFile(uploadedFile.id, {\n            progress\n          });\n        }\n      })\n      .then(response => {\n        this.updateFile(uploadedFile.id, {\n          uploaded: true,\n          id: response.data.id,\n          url: response.data.url\n        });\n      })\n      .catch(() => {\n        this.updateFile(uploadedFile.id, {\n          error: true\n        });\n      });\n  };\n\n  renderDragMessage = (isDragActive, isDragReject) => {\n    if (!isDragActive) {\n      return <UploadMessage>{this.props.message}</UploadMessage>\n    }\n\n    if (isDragReject) {\n      return <UploadMessage type=\"error\">Arquivo não suportado</UploadMessage>\n    }\n\n    return <UploadMessage type=\"success\">Solte os arquivos aqui</UploadMessage>\n  }\n\n  render() {\n    return (\n      <DropZone accept={this.props.accept} onDropAccepted={this.handleUpload}>\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n          <DropContainer\n            {...getRootProps()}\n            isDragActive={isDragActive}\n            isDragReject={isDragReject}\n          >\n            <input {...getInputProps()} />\n            {this.renderDragMessage(isDragActive, isDragReject)}\n          </DropContainer>\n        )}\n      </DropZone>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.ul`\n  margin-top: 20px;\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #444;\n    & + li {\n      margin-top: 15px;\n    }\n  }\n`;\n\nexport const FileInfo = styled.div`\n  display: flex;\n  align-items: center;\n  div {\n    display: flex;\n    flex-direction: column;\n    max-width: 220px;\n    strong {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n    span {\n      font-size: 12px;\n      color: #999;\n      margin-top: 5px;\n      div {\n        border: 0;\n        display: inline;\n        background: transparent;\n        color: #e57878;\n        margin-left: 5px;\n        \n        &:hover {\n          text-decoration: underline;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n`;\n\nexport const Preview = styled.div`\n  width: 36px;\n  height: 36px;\n  border-radius: 5px;\n  background-image: url(${props => props.src});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: 50% 50%;\n  margin-right: 10px;\n`;","import React, { Component } from 'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { Container, FileInfo, Preview } from './styles';\nimport { primaryColor } from '../../styles/global';\nimport FileIcon from 'react-feather/dist/icons/file';\nimport CheckCircleIcon from 'react-feather/dist/icons/check-circle';\nimport AlertIcon from 'react-feather/dist/icons/alert-circle';\nimport api from '../../services/api';\n\nclass UploadFileList extends Component {\n\n  handleDelete = async id => {\n    let newUploadedFiles = [];\n    await api.delete(`file/${id}`);\n\n    newUploadedFiles = this.props.files.filter(file => file.id !== id);\n\n    if (this.props.onDelete) {\n      this.props.onDelete(newUploadedFiles);\n    }\n  };\n\n  render() {\n    const { files } = this.props;\n\n    return (\n      <Container>\n        {files.map((uploadedFile, idx) => (\n          <li key={uploadedFile.id || idx}>\n            <FileInfo>\n              <Preview><FileIcon size={24} color={primaryColor} /></Preview>\n              <div>\n                <strong>{uploadedFile.name}</strong>\n                <span>\n                  {uploadedFile.readableSize}{\" \"}\n                  {!!uploadedFile.id && (\n                    <div onClick={() => this.handleDelete(uploadedFile.id)}>\n                      Excluir\n                    </div>\n                  )}\n                </span>\n              </div>\n            </FileInfo>\n\n            <div>\n              {!uploadedFile.uploaded &&\n                !uploadedFile.error && (\n                  <CircularProgressbar\n                    styles={{\n                      root: { width: 45 },\n                      path: { stroke: primaryColor }\n                    }}\n                    strokeWidth={10}\n                    value={uploadedFile.progress}\n                    text={`${uploadedFile.progress}%`}\n                  />\n                )}\n\n              {uploadedFile.uploaded && <CheckCircleIcon size={24} color=\"#78e5d5\" />}\n              {uploadedFile.error && <AlertIcon size={24} color=\"#e57878\" />}\n            </div>\n          </li>\n        ))}\n      </Container>\n    )\n  }\n}\n\nexport default UploadFileList;","import React, { Component } from 'react';\nimport {\n  DialogForm, DialogFormButtonContainer,\n  DialogInput, DialogSpan\n} from '../../styles/global';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { Creators as DataSourceActions } from '../../store/ducks/data_source';\nimport { connect } from 'react-redux';\nimport Dialog from '../Dialog';\nimport Button from '../../styles/Button';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport Upload from '../Upload';\nimport UploadFileList from '../UploadFileList';\nimport api from '../../services/api';\n\nclass DataSourceDialog extends Component {\n\n  state = {\n    name: '',\n    uploadedFiles: []\n  };\n\n  onClose = () => {\n    this.props.setDialog('dataSource');\n    this.setState({ name: '', uploadedFiles: [] });\n  }\n\n  onCancel = () => {\n    const { uploadedFiles } = this.state;\n\n    uploadedFiles.forEach(file => this.handleDelete(file.id));\n\n    this.onClose();\n  }\n\n  handleDelete = async id => {\n    await api.delete(`file/${id}`);\n\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.filter(file => file.id !== id)\n    });\n  };\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  handleChangeInput = e => this.setState({ [e.target.name]: e.target.value });\n\n  submit = () => {\n    const { name, uploadedFiles } = this.state;\n    const fileId = uploadedFiles.map(file => file.id);\n\n    if (!name) {\n      this.renderWarningMsg('Nome não informado');\n      return;\n    }\n\n    if (!uploadedFiles.length) {\n      this.renderWarningMsg('Nenhum arquivo importado');\n      return;\n    }\n\n    this.props.postDataSource({ name, file_id: fileId[0] });\n    this.onClose();\n  }\n\n  render() {\n    const { name, uploadedFiles } = this.state;\n    const { dataSource } = this.props.dialog;\n\n    if (!dataSource) {\n      return null;\n    }\n\n    return (\n      <Dialog>\n        <DialogForm>\n          <h1>Adicionar Fonte de Dados</h1>\n\n          <DialogSpan>Fonte de dados:</DialogSpan>\n          <DialogInput\n            value={name}\n            autoComplete=\"off\"\n            onChange={this.handleChangeInput}\n            name=\"name\">\n          </DialogInput>\n\n          {!uploadedFiles.length && (\n            <div style={{ paddingTop: '2vh' }}>\n              <div style={{ paddingBottom: '.5vh' }}><DialogSpan>Arquivo:</DialogSpan></div>\n              <Upload\n                onUpload={(uploadedFiles) => this.setState({ uploadedFiles })}\n                accept=\"text/csv\"\n                message=\"Arraste um arquivo CSV ou clique aqui.\"\n              />\n            </div>)}\n\n          {!!uploadedFiles.length && (\n            <UploadFileList\n              files={uploadedFiles}\n              onDelete={(uploadedFiles) => this.setState({ uploadedFiles })} />\n          )}\n\n          {!uploadedFiles.length && (\n            <div style={{ paddingTop: '.5vh' }}>\n              <h2 style={{ fontWeight: 500 }}>* Arquivo deve estar separado por vírgulas</h2>\n              <h2 style={{ fontWeight: 500 }}>* Primeira linha deve ser o cabeçalho</h2>\n              <h2 style={{ fontWeight: 500 }}>* As variáveis alvo devem ser numéricas</h2>\n            </div>\n          )}\n\n          <DialogFormButtonContainer>\n            <Button onClick={this.submit.bind(this)}>Salvar</Button>\n            <Button style={{ marginLeft: '1vw' }} color=\"gray\" isCancel={true} onClick={this.onCancel}>Cancelar</Button>\n          </DialogFormButtonContainer>\n\n        </DialogForm>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = ({ dialog }) => ({ dialog });\n\nexport default connect(\n  mapStateToProps,\n  {\n    ...DialogActions, ...toastrActions,\n    ...DataSourceActions\n  }\n)(DataSourceDialog);","import styled from 'styled-components';\n\nexport const DialogInput = styled.input`\n    padding: 10px;\n    border-radius: 3px;\n    border: none;\n    background-color: rgba(0, 0, 0, 0.1);\n    margin-top: 8px;\n    transition: border 0.15s ease;\n    font-size: 16px;\n    border: 1px solid #FFF;\n\n    &:focus {\n      border: 1px solid #000;\n    }\n`;\n\nexport const DialogSpan = styled.span`\n    font-size: 16px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    margin-top: 15px;\n`;\n\nexport const DialogForm = styled.form`\n  border-radius: 5px;\n  padding: 40px;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  color: #4A5173;\n\n  h1 {\n    padding: 0;\n    font-weight: 500;\n    font-weight: 800;\n    font-size: 22px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    justify-content: center;\n  }\n\n  h2 {\n    margin-top: 2vh;\n    font-size: 14px;\n  }\n\n  button {\n    margin: 30px 0 0;\n    margin-left: 1vw;\n    color: #4A5173;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.14em;\n    text-transform: uppercase;\n    background-color: #FFF;\n    border: 1px solid #4A5173;\n\n    &:hover {\n      color: #FFF;\n    }\n  }\n`\n\nexport const DialogFormButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;","import React, { Component } from 'react';\nimport { DialogForm, DialogFormButtonContainer } from './styles';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { connect } from 'react-redux';\nimport Dialog from '../Dialog';\nimport Button from '../../styles/Button';\n\nclass AlertDialog extends Component {\n\n  onClose = () => {\n    this.props.setDialog('alert');\n  }\n\n  submit = () => {\n    this.onClose();\n\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const { alert, data } = this.props.dialog;\n\n    if (!alert) {\n      return null;\n    }\n\n    return (\n      <Dialog>\n        <DialogForm>\n          <h1>Atenção</h1>\n          <h2>{data && data.description ? data.description : 'Deseja Continuar?'}</h2>\n\n          <DialogFormButtonContainer>\n            <Button onClick={this.submit.bind(this)}>Sim</Button>\n            <Button color=\"gray\" isCancel={true} onClick={this.onClose}>Não</Button>\n          </DialogFormButtonContainer>\n\n        </DialogForm>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = ({ dialog }) => ({ dialog });\n\nexport default connect(\n  mapStateToProps, { ...DialogActions }\n)(AlertDialog);","import React, { Component } from 'react';\nimport { CardContainer } from './styles';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { Creators as LmsActions } from '../../store/ducks/lms';\nimport { Creators as DataSourceActions } from '../../store/ducks/data_source';\nimport { connect } from 'react-redux';\nimport { default as CustomButton } from '../../styles/Button';\nimport { ConfigContainer } from '../../styles/ConfigContainer';\nimport { Header, fontFamily, primaryColor, StatusMsgContainer } from '../../styles/global';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MonitorIcon from 'react-feather/dist/icons/monitor';\nimport EditIcon from 'react-feather/dist/icons/settings';\nimport DeleteIcon from 'react-feather/dist/icons/trash-2';\nimport PlayIcon from 'react-feather/dist/icons/play';\nimport FileIcon from 'react-feather/dist/icons/file';\nimport MoodleConfigDialog from '../MoodleConfigDialog';\nimport { INDICATORS, ADD_TRAIN, LMS, CSV } from '../../constants';\nimport { Creators as ScreenActions } from '../../store/ducks/screen';\nimport { Creators as IndicatorActions } from '../../store/ducks/indicator';\nimport DataSourceDialog from '../DataSourceDialog';\nimport * as moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport AlertDialog from '../AlertDialog';\nimport filesize from \"filesize\";\n\nconst availableLms = { moodle: true };\n\nclass DataSource extends Component {\n\n  state = {\n    selectedItem: null,\n    chipSelected: LMS\n  }\n\n  componentWillMount() {\n    this.props.getDataSource();\n  }\n\n  openDialogConfig = (item, event) => {\n    if (!availableLms[item.name]) return;\n\n    this.props.setDialog(item.name, {\n      ...item,\n      version: {\n        label: item.version, value: item.version\n      }\n    })\n  }\n\n  renderCardLMS = (item, idx) => (\n    <Card className='lms-card' key={idx} style={{ opacity: availableLms[item.name] ? 1 : .3 }}>\n      <CardActionArea>\n        <CardContent style={{ color: primaryColor }}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ fontFamily: fontFamily }}>\n            {item.description}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: primaryColor, fontFamily: fontFamily, fontSize: '10px' }}>\n            Versão: {item.version ? item.version : 'Não disponível'}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions style={{ backgroundColor: primaryColor }}>\n       <IconButton onClick={this.goToIndicators.bind(this, LMS, item.name, item.description)}>\n          <PlayIcon size={20} color={'#FFF'} />\n        </IconButton>\n        <IconButton onClick={this.openDialogConfig.bind(this, item)}>\n          <EditIcon size={20} color={'#FFF'} />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n\n  renderCardCSV = (item, idx) => (\n    <Card className='lms-card' key={idx}>\n      <CardActionArea>\n        <CardContent style={{ color: primaryColor }}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ fontFamily: fontFamily }}>\n            {item.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: primaryColor, fontFamily: fontFamily, fontSize: '10px' }}>\n            <b>Importado em:</b> {moment(item.created_at).format('DD/MM/YYYY HH:mm')}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: primaryColor, fontFamily: fontFamily, fontSize: '10px' }}>\n            <b>Tamanho:</b> {filesize(item.size)}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions style={{ backgroundColor: primaryColor }}>\n        <IconButton onClick={this.goToIndicators.bind(this, CSV, item.id, item.name)}>\n          <PlayIcon size={20} color={'#FFF'} />\n        </IconButton>\n        <IconButton onClick={this.handleMsgDelete.bind(this, item)}>\n          <DeleteIcon size={20} color={'#FFF'} />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n\n  handleMsgDelete = (item, event) => {\n    this.setState({ selectedItem: item });\n\n    this.props.setDialog('alert', {\n      description: 'Você realmente deseja excluir esta fonte de dados?'\n    });\n  }\n\n  handleDelete = () => {\n    const { selectedItem } = this.state;\n\n    if (!selectedItem || !selectedItem.id) return;\n\n    this.props.deleteDataSource(selectedItem.id);\n  }\n\n  goToIndicators = (context, id, name, event) => {\n    const key = `${context}/${id}/${name}`;\n  \n    if (context === LMS && !availableLms[id]) return;\n\n    this.props.setScreen(ADD_TRAIN, INDICATORS);\n    this.props.setIndicator('datasource', key);\n    this.props.getIndicators({ context, id });\n  }\n\n  setChip = (value, event) => this.setState({ chipSelected: value });\n\n  renderDatasetOptions = () => {\n    const { chipSelected } = this.state;\n\n    return (\n      <div style={{ display: 'flex', paddingLeft: '2rem' }}>\n        <div>\n          <Chip\n            avatar={<MonitorIcon size={16} color={chipSelected === LMS ? '#FFF' : primaryColor} />}\n            label=\"Ambientes EAD\"\n            className={chipSelected === LMS ? 'active-chip' : 'inactive-chip'}\n            onClick={this.setChip.bind(this, LMS)}\n          />\n        </div>\n        <div style={{ paddingLeft: '.5vw' }}>\n          <Chip\n            avatar={<FileIcon size={16} color={chipSelected === CSV ? '#FFF' : primaryColor} />}\n            label=\"Arquivos CSV\"\n            className={chipSelected === CSV ? 'active-chip' : 'inactive-chip'}\n            onClick={this.setChip.bind(this, CSV)}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  addDataSource = () => this.props.setDialog('dataSource');\n\n  render() {\n    const { chipSelected } = this.state;\n    const { lms, data_source } = this.props;\n    const loading = !!data_source.loading;\n    const hasData = !!data_source.data.length;\n\n    return (\n      <PerfectScrollbar style={{ width: '100%' }}>\n        <ConfigContainer style={{ minHeight: '70%' }}>\n\n          <Header>\n            <h1>Fontes de Dados</h1>\n            <div>\n              <CustomButton filled={false} onClick={this.addDataSource}>Adicionar fonte de dados</CustomButton>\n            </div>\n          </Header>\n\n          {this.renderDatasetOptions()}\n\n          {chipSelected === LMS ?\n            <CardContainer>{lms.data.map((item, idx) => this.renderCardLMS(item, idx))}</CardContainer>\n            : null}\n\n          {chipSelected === CSV ?\n            <CardContainer>{data_source.data.map((item, idx) => this.renderCardCSV(item, idx))}</CardContainer>\n            : null}\n\n          {chipSelected === CSV && loading && (\n            <StatusMsgContainer>\n              <ProgressSpinner style={{ width: '50px', height: '50px' }} strokeWidth=\"4\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\n            </StatusMsgContainer>\n          )}\n\n          {chipSelected === CSV && !hasData && !loading && (\n            <StatusMsgContainer>Nenhuma fonte de dados cadastrada</StatusMsgContainer>\n          )}\n        </ConfigContainer>\n        <MoodleConfigDialog />\n        <DataSourceDialog />\n        <AlertDialog onSubmit={this.handleDelete}></AlertDialog>\n      </PerfectScrollbar>\n    );\n  }\n}\n\nconst mapStateToProps = ({ lms, data_source }) => ({ lms, data_source });\n\nexport default connect(\n  mapStateToProps, {\n  ...DialogActions, ...LmsActions,\n  ...ScreenActions, ...IndicatorActions,\n  ...DataSourceActions\n}\n)(DataSource);","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 1rem;\n  padding-bottom: 0;\n  align-items: center;\n  color: #4A5173;\n  \n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Text = styled.span`\n  font-size: 12px;\n  margin-left: .2rem;\n  line-height: 16px;\n  letter-spacing: 0.14em;\n  text-transform: uppercase;\n  transition: 0.15s ease;\n\n  &:hover {\n    font-weight: bold;\n  }\n`","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport BackIcon from 'react-feather/dist/icons/arrow-left';\nimport { Creators as ScreenActions } from '../../store/ducks/screen';\n\nimport { Container, Text } from './styles';\n\nclass BreadCrumb extends Component {\n  render() {\n    const { text, screen, destiny, setScreen } = this.props;\n\n\n    return (\n      <Container onClick={destiny ? setScreen.bind(this, screen, destiny, {}) : null}>\n        <BackIcon size={16} />\n        <Text>{text}</Text>\n      </Container>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { ...ScreenActions }\n)(BreadCrumb);","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  button {\n    margin-right: 2rem;\n  }\n`;\n\nexport const SelectContainer = styled.div`\n  padding-bottom: 3vh;\n  width: 100%;\n`;\n\nexport const SelectText = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  color: #000000;\n  padding-bottom: .5vh;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  margin: 2rem;\n`;\n\nexport const LeftContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 16vw;\n  max-width: 16vw;\n`;\n\nexport const Separator = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 2vw;\n  border-left: 2px dotted #000;\n`;\n\nexport const RightContainer = styled.div`\n  margin-left: 1.5rem;\n`;\n\nexport const RightHeader = styled.div`\n  display: flex;\n  margin-bottom: .5rem;\n\n  span {\n    text-align: left;\n    font-size: 16px;\n    line-height: 21px;\n    color: #000000;\n  }\n`;","import { connect } from 'react-redux';\nimport BreadCrumb from '../BreadCrumb';\nimport Button from '../../styles/Button';\nimport React, { Component } from 'react';\nimport { ConfigContainer } from '../../styles/ConfigContainer';\nimport { Creators as ScreenActions } from '../../store/ducks/screen';\nimport { Creators as CourseActions } from '../../store/ducks/course';\nimport { Creators as SubjectActions } from '../../store/ducks/subject';\nimport { Creators as SemesterActions } from '../../store/ducks/semester';\nimport { Creators as IndicatorActions } from '../../store/ducks/indicator';\nimport { Creators as PreProcessingActions } from '../../store/ducks/pre_processing';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport {\n  Header, Separator, Content, LeftContent,\n  RightContainer, SelectText, SelectContainer\n} from './styles';\nimport { DATASOURCE, PRE_PROCESSING, ADD_TRAIN, LMS } from '../../constants';\nimport { selectStyle } from '../../styles/global';\nimport Select from 'react-select';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { PickList } from 'primereact/picklist';\n\nclass Indicators extends Component {\n\n  componentDidMount() {\n    const dataSourceContext = this.getDataSourceContext();\n\n    if (dataSourceContext === LMS) {\n      this.props.getCourses({ datasource: this.getDataSourceId() });\n    };\n\n    this.props.indicatorInitFilter();\n  }\n\n  getDataSourceContext = () => this.props.indicator.datasource ? this.props.indicator.datasource.split('/')[0] : null;\n\n  getDataSourceId = () => this.props.indicator.datasource ? this.props.indicator.datasource.split('/')[1] : null;\n\n  getPickListTemplate(item) {\n    return (\n      <div className=\"p-clearfix\">\n        <div style={{ fontSize: '14px', textAlign: 'right', margin: '15px 5px 0 0' }}>{item.label}</div>\n      </div>\n    );\n  }\n\n  handleChange = (item, name) => {\n    this.props.setIndicator(name, item);\n    this.refreshFilters(name, item);\n  };\n\n  refreshFilters = (name, item) => {\n    if (name === 'courseSelected') {\n\n      if (!item || !item.length) {\n        this.props.subjectSuccess([]);\n        this.props.semesterSuccess([]);\n        return;\n      }\n\n      this.props.getSubjects({ courses: item.map(item => item.value) });\n    }\n\n    if (name === 'subjectSelected') {\n      if (!item || !item.length) {\n        this.props.semesterSuccess([]);\n        return;\n      }\n\n      this.props.getSemesters({ subjects: item.map(item => item.value) });\n    }\n  };\n\n  onPickListChange(event) {\n    this.props.setIndicator('source', event.source);\n    this.props.setIndicator('indicators', event.target);\n  }\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  onSubmit = () => {\n    let filter = {};\n    const { setScreen } = this.props;\n    const { indicators, targetSelected, courseSelected, subjectSelected, semesterSelected } = this.props.indicator;\n\n    if (!targetSelected || !targetSelected.value) {\n      this.renderWarningMsg('Selecione um indicador alvo');\n      return;\n    }\n\n    if (!indicators || !indicators.length || indicators.length <= 1) {\n      this.renderWarningMsg('Selecione ao menos dois indicadores');\n      return;\n    }\n\n    if (!indicators.filter(indicator => indicator.value === targetSelected.value).length) {\n      this.renderWarningMsg(`É necessário selecionar o indicador ${targetSelected.value}, pois o mesmo é um indicador alvo`);\n      return;\n    }\n\n    filter.context = this.getDataSourceContext();\n    filter.id = this.getDataSourceId();\n    filter.target = targetSelected.value;\n    filter.courses = this.getValueFromSelect(courseSelected);\n    filter.subjects = this.getValueFromSelect(subjectSelected);\n    filter.semesters = this.getValueFromSelect(semesterSelected);\n    filter.indicators = this.getValueFromSelect(indicators);\n\n\n    this.props.getPreProcessing(filter);\n    setScreen(ADD_TRAIN, PRE_PROCESSING);\n  }\n\n  getValueFromSelect = items => {\n    if (!items) {\n      return null;\n    }\n\n    return items.map(item => item.value);\n  }\n\n  render() {\n    const { course, subject, semester, indicator } = this.props;\n    const { source, indicators, targetSelected, courseSelected,\n      subjectSelected, semesterSelected } = this.props.indicator;\n    const dataSourceContext = this.getDataSourceContext();\n\n    return (\n      <ConfigContainer size='big'>\n        <PerfectScrollbar style={{ width: '100%' }}>\n          <div style={{ width: '35%' }}>\n            <BreadCrumb text='Voltar para Escolha de Fontes de dados' screen={ADD_TRAIN} destiny={DATASOURCE} />\n          </div>\n          <Header>\n            <h1>Selecione os indicadores</h1>\n            <div>\n              <Button onClick={this.onSubmit.bind(this)}>PRÉ-PROCESSAR BASE</Button>\n            </div>\n          </Header>\n\n          <Content>\n            <LeftContent>\n              {dataSourceContext === LMS && (\n                <React.Fragment>\n                  <SelectText>Cursos</SelectText>\n                  <SelectContainer>\n                    <Select\n                      isMulti\n                      isClearable\n                      value={courseSelected}\n                      noOptionsMessage={() => 'Sem dados'}\n                      onChange={(e) => this.handleChange(e, 'courseSelected')}\n                      placeholder={'Selecione os Cursos'}\n                      styles={selectStyle}\n                      options={course.data.asMutable()} />\n                  </SelectContainer>\n\n\n                  <SelectText>Disciplinas</SelectText>\n                  <SelectContainer>\n                    <Select\n                      isMulti\n                      isClearable\n                      noOptionsMessage={() => 'Sem dados'}\n                      value={subjectSelected}\n                      onChange={(e) => this.handleChange(e, 'subjectSelected')}\n                      placeholder={'Selecione as Disciplinas'}\n                      styles={selectStyle}\n                      options={subject.data.asMutable()} />\n                  </SelectContainer>\n\n\n                  <SelectText>Turmas</SelectText>\n                  <SelectContainer>\n                    <Select\n                      isMulti\n                      isClearable\n                      value={semesterSelected}\n                      noOptionsMessage={() => 'Sem dados'}\n                      onChange={(e) => this.handleChange(e, 'semesterSelected')}\n                      placeholder={'Selecione as Turmas'}\n                      styles={selectStyle}\n                      options={semester.data.asMutable()} />\n                  </SelectContainer>\n                </React.Fragment>\n              )}\n\n              <SelectText>Indicador Alvo</SelectText>\n              <SelectContainer>\n                <Select\n                  isClearable\n                  value={targetSelected}\n                  noOptionsMessage={() => 'Sem dados'}\n                  onChange={(e) => this.handleChange(e, 'targetSelected')}\n                  placeholder={'Selecione um indicador alvo'}\n                  styles={selectStyle}\n                  options={indicator.data.asMutable()} />\n              </SelectContainer>\n            </LeftContent>\n\n            <Separator>&nbsp;</Separator>\n\n            <RightContainer>\n              <PickList\n                metaKeySelection={false}\n                responsive={true}\n                showSourceControls={false}\n                showTargetControls={false}\n                sourceHeader=\"Disponíveis\"\n                targetHeader=\"Selecionados\"\n                source={source}\n                target={indicators}\n                onChange={this.onPickListChange.bind(this)}\n                itemTemplate={this.getPickListTemplate.bind(this)}\n                sourceStyle={{ height: '40vh', width: '28vw' }} targetStyle={{ height: '40vh', width: '28vw' }}\n              />\n            </RightContainer>\n\n          </Content>\n        </PerfectScrollbar>\n      </ConfigContainer>\n    );\n  }\n}\n\nconst mapStateToProps = ({ course, subject, semester, indicator }) => ({ course, subject, semester, indicator });\n\nexport default connect(\n  mapStateToProps,\n  {\n    ...ScreenActions, ...CourseActions,\n    ...SubjectActions, ...SemesterActions,\n    ...IndicatorActions, ...toastrActions,\n    ...PreProcessingActions\n  }\n)(Indicators);","import styled from 'styled-components';\n\nexport const DataSourceText = styled.div`\n  display: flex;\n  margin-left: 2rem;\n  color: #000;\n  font-size: 14px;\n  line-height: 23px;\n`;\n\nexport const RowDetail = styled.tr`\n  background-color: #F3F3F3;\n  width: 100%;\n  height: 20vh;\n\n  > td {\n    vertical-align: top;\n    &:hover {\n      cursor: default;\n    }\n  }\n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 6vw;\n  height: 1.3vh;\n  border-radius: 11px;\n  position: relative;\n  background: #E5E5E5;\n`;\n\n\nexport const Content = styled.div`\n  width: 3vw;\n  height: 1.3vh;\n  border-radius: 11px;\n  position: absolute;\n  background: ${props => props.background};\n`;","import React, { Component } from 'react';\n\nimport { Container, Content } from './styles';\n\nexport default class Progress extends Component {\n\n  getBackgroundColor = () => {\n    let color = '#488DA3';\n    const { value } = this.props;\n\n    if (value > 0) return color;\n\n    return '#FA8B8B';\n  }\n\n  getImportance = fullWidth => {\n    const { value } = this.props;\n\n    return Math.abs(value * fullWidth);\n  }\n\n  renderNumber = (value, prop) => {\n    return <div style={{ fontSize: '.7rem', [prop]: '.3vw' }}>{value}</div>\n  }\n\n  render() {\n    const fullWidth = 6;\n    const { value } = this.props;\n    const background = this.getBackgroundColor();\n    const importance = this.getImportance(fullWidth);\n    const transform = value > 0 ? 'rotate(0deg)' : 'rotate(180deg)';\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n        {value < 0 ? this.renderNumber(value, 'paddingRight') : null}\n        <Container style={{ transform }}>\n          <Content\n            background={background}\n            style={{ width: `${importance}vw` }} />\n        </Container>\n        {value > 0 ? this.renderNumber(value, 'paddingLeft') : null}\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const CenterContainer = styled.div`\n  display: flex;\n  color: #B9B9B9;\n  font-size: 1.5rem;\n  font-weight: 500;\n  letter-spacing: 0.065em;\n  justify-content: center;\n  margin: 10% auto;\n`;","import Plotly from 'plotly.js-dist';\nimport React, { Component } from 'react';\nimport { CenterContainer } from './styles';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { connect } from 'react-redux';\nimport { primaryColor } from '../../styles/global';\n\nconst Plot = createPlotlyComponent(Plotly);\n\nclass Chart extends Component {\n\n  renderLoading = () => (\n    <CenterContainer color={primaryColor}>\n      <ProgressSpinner style={{ width: '50px', height: '50px' }} strokeWidth=\"4\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\n    </CenterContainer>\n  )\n\n  renderError = () => (\n    <CenterContainer>Ocorreu um erro</CenterContainer>\n  )\n\n  renderEmptyState = () => (\n    <CenterContainer>Sem detalhes para este indicador</CenterContainer>\n  )\n\n  getTrace = () => {\n    let trace = {};\n    const { name } = this.props;\n    const { data, chartType } = this.props.chart;\n\n    if (chartType === 'box') {\n      trace.y = data;\n    }\n\n    if (chartType === 'histogram') {\n      trace.x = data;\n    }\n\n    trace.name = name;\n    trace.marker = { color: primaryColor };\n    trace.type = chartType;\n\n    return [trace];\n  }\n\n  render() {\n    const { error, loading, data, chartType } = this.props.chart;\n\n    if (error && !loading) return this.renderError();\n    if (loading) return this.renderLoading();\n\n    if (!data.length) return this.renderEmptyState();\n\n    return (\n      <Plot\n        useResizeHandler={true}\n        style={{ width: '100%', height: '50vh' }}\n        data={this.getTrace()}\n        config={{\n          displaylogo: false,\n          displayModeBar: false,\n          responsive: true,\n          editable: false\n        }}\n        layout={{\n          title: chartType === 'box' ? 'Box Plot' : 'Histograma',\n          margin: {\n            l: 100,\n            r: 100,\n            b: 50,\n            t: 50,\n            pad: 2\n          },\n          plot_bgcolor: '#F3F3F3',\n          paper_bgcolor: '#F3F3F3',\n          autosize: true,\n          font: {\n            family: 'Avenir'\n          },\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ chart }) => ({ chart });\n\nexport default connect(\n  mapStateToProps, null\n)(Chart);","import styled from 'styled-components';\n\nexport const DialogInput = styled.input`\n    padding: 10px;\n    border-radius: 3px;\n    border: none;\n    background-color: rgba(0, 0, 0, 0.1);\n    margin-top: 8px;\n    transition: border 0.15s ease;\n    font-size: 16px;\n    border: 1px solid #FFF;\n\n    &:focus {\n      border: 1px solid #000;\n    }\n`;\n\nexport const DialogSpan = styled.span`\n    font-size: 16px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    margin-top: 15px;\n`;\n\nexport const DialogForm = styled.form`\n  border-radius: 5px;\n  padding: 40px;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  h1 {\n    font-weight: 500;\n    font-weight: 800;\n    font-size: 18px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    justify-content: center;\n  }\n\n  h2 {\n    font-size: 12px;\n  }\n\n  button {\n    margin: 30px 0 0;\n    color: #4A5173;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.14em;\n    text-transform: uppercase;\n    background-color: #FFF;\n    border: 1px solid #4A5173;\n\n    &:hover {\n      color: #FFF;\n    }\n  }\n`\n\nexport const DialogFormButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;","import React, { Component } from 'react';\nimport {\n  DialogForm, DialogFormButtonContainer,\n  DialogInput, DialogSpan\n} from './styles';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { connect } from 'react-redux';\nimport Dialog from '../Dialog';\nimport Button from '../../styles/Button';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\nclass PreProcessingDialog extends Component {\n\n  state = {\n    constant: null\n  };\n\n  onClose = () => {\n    this.props.setDialog('preProcessingConstant');\n  }\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  handleChangeInput = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  submit = () => {\n    const { onSubmit } = this.props;\n    const { constant } = this.state;\n\n    if (!constant) {\n      this.renderWarningMsg('Valor da constante não informada!');\n      return;\n    }\n\n    if (onSubmit) {\n      this.onClose();\n      onSubmit({ strategy: 'constant', constantValue: constant });\n    }\n  }\n\n  getInputType = (data) => {\n    let type = \"text\";\n\n    if (data && data.type === 'Discreto') {\n      type = \"number\";\n    }\n\n    return type;\n  }\n\n  render() {\n    const { constant } = this.state;\n    const { preProcessingConstant, data } = this.props.dialog;\n    const inputType = this.getInputType(data);\n\n    if (!preProcessingConstant) {\n      return null;\n    }\n\n    return (\n      <Dialog>\n        <DialogForm>\n          <h1>Pré-processamento</h1>\n          <h2>(Indicador: {data && data.description ? `${data.description})` : null}</h2>\n\n          <DialogSpan>Constante {inputType === 'number' ? '(Apenas números)' : null}</DialogSpan>\n          <DialogInput\n            type={inputType}\n            value={constant}\n            autoComplete=\"off\"\n            onChange={this.handleChangeInput}\n            name=\"constant\">\n          </DialogInput>\n\n          <DialogFormButtonContainer>\n            <Button onClick={this.submit.bind(this)}>Pré-processar</Button>\n            <Button color=\"gray\" isCancel={true} onClick={this.onClose}>Cancelar</Button>\n          </DialogFormButtonContainer>\n\n        </DialogForm>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = ({ dialog }) => ({ dialog });\n\nexport default connect(\n  mapStateToProps, { ...DialogActions, ...toastrActions }\n)(PreProcessingDialog);","import styled from 'styled-components';\n\nexport const DialogSpan = styled.span`\n    font-size: 16px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    margin-top: 15px;\n`;\n\nexport const DialogForm = styled.form`\n  border-radius: 5px;\n  padding: 40px;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  h1 {\n    font-weight: 500;\n    font-weight: 800;\n    font-size: 18px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    justify-content: center;\n  }\n\n  h2 {\n    font-size: 11px;\n  }\n\n  button {\n    margin: 30px 0 0;\n    color: #4A5173;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.14em;\n    text-transform: uppercase;\n    background-color: #FFF;\n    border: 1px solid #4A5173;\n\n    &:hover {\n      color: #FFF;\n    }\n  }\n`\n\nexport const DialogFormButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;","import React, { Component } from 'react';\nimport {\n  DialogForm, DialogFormButtonContainer, DialogSpan\n} from './styles';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { connect } from 'react-redux';\nimport Dialog from '../Dialog';\nimport Button from '../../styles/Button';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport CurrencyInput from 'react-currency-input';\n\nclass TrainConfigDialog extends Component {\n\n  state = {\n    train: 70,\n    test: 30,\n    generations: 5,\n    kfold: 5\n  };\n\n  onClose = () => {\n    this.props.setDialog('trainConfig');\n  }\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  submit = () => {\n    const { train, test, generations, kfold } = this.state;\n    const { onSubmit } = this.props;\n\n    if (!train || train <= 0) {\n      this.renderWarningMsg('O percentual da base de treinamento é inválido!');\n      return;\n    }\n\n    if (!test || test <= 0) {\n      this.renderWarningMsg('O percentual da base de testes é inválido!');\n      return;\n    }\n\n    if (!generations || generations <= 0) {\n      this.renderWarningMsg('A Qtd. máxima de treinos é inválida!');\n      return;\n    }\n\n    if (!kfold || kfold <= 0) {\n      this.renderWarningMsg('A Qtd. de kfolds é inválida!');\n      return;\n    }\n\n    this.onClose();\n\n    if (onSubmit) {\n      onSubmit({ data: { train, test, generations, kfold } });\n    }\n  }\n\n  handlePercentualChange = (event, maskedValue, floatValue) => {\n    let newValue = floatValue;\n    let otherInputToUpdate = event.target.name === 'train' ? 'test' : 'train';\n\n    if (floatValue < 0) {\n      newValue = 0;\n    }\n\n    if (floatValue > 100) {\n      newValue = 100;\n    }\n\n    this.setState({\n      [event.target.name]: newValue,\n      [otherInputToUpdate]: Math.abs(100 - newValue),\n    });\n  }\n\n  handleChange = (event, maskedValue, floatValue) => {\n    this.setState({ [event.target.name]: floatValue });\n  }\n\n  render() {\n    const { train, test, generations, kfold } = this.state;\n    const { trainConfig } = this.props.dialog;\n    const inputParams = {\n      suffix: \"%\",\n      className: \"input\",\n      decimalSeparator: \".\",\n      thousandSeparator: \"\",\n      onChangeEvent: this.handlePercentualChange\n    };\n\n    if (!trainConfig) {\n      return null;\n    }\n\n    return (\n      <Dialog>\n        <DialogForm>\n          <h1>Parâmetros do treinamento</h1>\n          <h2>Use os parâmetros default ou altere-os caso seja necessário.</h2>\n\n          <DialogSpan>Percentual de treinamento</DialogSpan>\n          <CurrencyInput\n            {...inputParams}\n            value={train}\n            name=\"train\"\n          />\n\n          <DialogSpan>Percentual de testes</DialogSpan>\n          <CurrencyInput\n            {...inputParams}\n            value={test}\n            name=\"test\"\n          />\n\n          <DialogSpan>Qtd. máxima de treinos</DialogSpan>\n          <CurrencyInput\n            {...inputParams}\n            suffix=\"\"\n            precision=\"0\"\n            onChangeEvent={this.handleChange}\n            value={generations}\n            name=\"generations\"\n          />\n\n          <DialogSpan>Qtd. de K-fold</DialogSpan>\n          <CurrencyInput\n            {...inputParams}\n            suffix=\"\"\n            precision=\"0\"\n            onChangeEvent={this.handleChange}\n            value={kfold}\n            name=\"kfold\"\n          />\n\n          <DialogFormButtonContainer>\n            <Button onClick={this.submit.bind(this)}>TREINAR</Button>\n            <Button color=\"gray\" isCancel={true} onClick={this.onClose}>Cancelar</Button>\n          </DialogFormButtonContainer>\n\n        </DialogForm>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = ({ dialog }) => ({ dialog });\n\nexport default connect(\n  mapStateToProps, { ...DialogActions, ...toastrActions }\n)(TrainConfigDialog);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ConfigContainer } from '../../styles/ConfigContainer';\nimport BreadCrumb from '../BreadCrumb';\nimport { DataSourceText, RowDetail } from './styles';\nimport {\n  Header, Table, HeaderColumn, StatusMsgContainer,\n  FirstItemColumn, ItemColumn, LoadingContainer\n} from '../../styles/global';\nimport Button from '../../styles/Button';\nimport MoreIcon from 'react-feather/dist/icons/more-horizontal';\nimport ChevronDown from 'react-feather/dist/icons/chevron-down';\nimport ChevronUp from 'react-feather/dist/icons/chevron-up';\nimport AlertIcon from 'react-feather/dist/icons/alert-triangle';\nimport TargetIcon from 'react-feather/dist/icons/crosshair';\nimport Progress from '../Progress';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { INDICATORS, TRAIN, ADD_TRAIN } from '../../constants';\nimport { Creators as ScreenActions } from '../../store/ducks/screen';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { Creators as ChartActions } from '../../store/ducks/chart';\nimport Chart from '../Chart';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { terciaryColor, FirstHeaderColumn } from '../../styles/global';\nimport PreProcessingDialog from '../PreProcessingDialog';\nimport TrainConfigDialog from '../TrainConfigDialog';\nimport { Creators as PreProcessingActions } from '../../store/ducks/pre_processing';\nimport { Creators as TrainActions } from '../../store/ducks/train';\nimport AlertDialog from '../AlertDialog';\n\nexport const ItemColumnWrapper = onClick => ({ ...props }) => <ItemColumn isClickable={true} onClick={onClick} {...props} />\n\nclass PreProcessing extends Component {\n\n  state = {\n    indicatorSelected: null,\n    anchorEl: null,\n    expandedRow: null\n  };\n\n  getDataSourceContext = () => this.props.indicator.datasource ? this.props.indicator.datasource.split('/')[0] : null;\n\n  getDataSourceName = () => this.props.indicator.datasource ? this.props.indicator.datasource.split('/')[2] : null;\n\n  handleRowClick(item) {\n    const { expandedRow } = this.state;\n    const { path } = this.props.pre_processing;\n    const newExpandedRow = expandedRow !== item.name ? item.name : null;\n    const chartType = item.type === 'Categórico' ? 'histogram' : 'box';\n\n    if (newExpandedRow) {\n      this.props.getChart({ path, indicator: item.name, chartType });\n    }\n\n    this.setState({ expandedRow: newExpandedRow });\n  }\n\n  handleMenuItemClose = () => this.setState({ anchorEl: null });\n\n  executePreProcessing = ({ strategy, constantValue }) => {\n    let newFilter = {};\n    const { indicatorSelected } = this.state;\n    const { filter, path } = this.props.pre_processing;\n\n    newFilter = {\n      ...filter,\n      path,\n      pre_processing_constant: indicatorSelected.type === 'Discreto' ? +constantValue : constantValue,\n      pre_processing_strategy: strategy,\n      pre_processing_indicator: indicatorSelected.name\n    }\n\n    this.props.getPreProcessing(newFilter);\n  }\n\n  handleMenuItemClick = (strategy, event) => {\n    const { indicatorSelected } = this.state;\n\n    this.handleMenuItemClose();\n\n    if (strategy === 'constant') {\n      this.props.setDialog('preProcessingConstant', indicatorSelected);\n      return;\n    }\n    this.executePreProcessing({ strategy });\n  };\n\n  handleClickListItem = (item, event) => {\n    this.setState({ anchorEl: event.currentTarget, indicatorSelected: item });\n  };\n\n  renderMenuActions = () => {\n    let actions = [];\n    const { anchorEl, indicatorSelected } = this.state;\n\n    if (indicatorSelected && indicatorSelected.type === 'Discreto') {\n      actions.push({ label: 'Média', pre_processing_action: 'mean' });\n      actions.push({ label: 'Mediana', pre_processing_action: 'median' });\n    }\n\n    actions.push({ label: 'Valor mais frequente', pre_processing_action: 'most_frequent' });\n    actions.push({ label: 'Valor constante', pre_processing_action: 'constant' });\n\n    return (\n      <Menu\n        style={{ list: { paddingTop: 0, paddingBottom: 0 } }}\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={this.handleMenuItemClose}\n      >\n        <MenuItem style={{ color: '#FFF', backgroundColor: terciaryColor }}>Pré-processar com</MenuItem>\n        {actions.map((option, index) => (\n          <MenuItem\n            key={index}\n            selected={false}\n            onClick={this.handleMenuItemClick.bind(this, option.pre_processing_action)}\n          >\n            {option.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    )\n  }\n\n  renderIconDetail = (item) => {\n    let icon = <ChevronDown size={20} />;\n    const { expandedRow } = this.state;\n\n    if (expandedRow === item.name) {\n      icon = <ChevronUp size={20} />;\n    }\n\n    return <div style={{ display: 'flex', alignItems: 'center' }}>{icon}</div>\n  }\n\n  renderItem(item) {\n    const { targetSelected } = this.props.indicator;\n    const isTarget = targetSelected && targetSelected.value === item.name ? true : false;\n    const ItemColumnWrapped = ItemColumnWrapper(this.handleRowClick.bind(this, item));\n\n    const itemRows = [\n      <tr key={\"row-data-\" + item.name}>\n        <FirstItemColumn onClick={this.handleRowClick.bind(this, item)} isClickable={true}>{this.renderIconDetail(item)}</FirstItemColumn>\n        <ItemColumnWrapped style={{ paddingLeft: '2rem' }}>{item.description}</ItemColumnWrapped>\n        <ItemColumnWrapped title={item.missing ? `Qtd. Dados Faltantes: ${item.missing}` : null}>\n          {item.missing ? <AlertIcon size={20} color=\"#FFF\" fill=\"#A87878\" /> : null}\n        </ItemColumnWrapped>\n        <ItemColumnWrapped>{isTarget ? <TargetIcon size={20} color=\"#DEB981\" /> : null}</ItemColumnWrapped>\n        <ItemColumnWrapped>{item.corr ? <Progress value={item.corr} /> : isTarget ? <b>Alvo</b> : 'N/A'}</ItemColumnWrapped>\n        <ItemColumnWrapped>{item.type}</ItemColumnWrapped>\n        <ItemColumnWrapped align=\"right\">{item.unique}</ItemColumnWrapped>\n        <ItemColumnWrapped align=\"right\">{item.missing}</ItemColumnWrapped>\n\n        <ItemColumnWrapped align=\"right\">{item.mean}</ItemColumnWrapped>\n        <ItemColumnWrapped align=\"right\">{item.std}</ItemColumnWrapped>\n        <ItemColumnWrapped align=\"right\">{item.min}</ItemColumnWrapped>\n        <ItemColumnWrapped align=\"right\">{item.max}</ItemColumnWrapped>\n\n        <ItemColumn onClick={item.missing ? this.handleClickListItem.bind(this, item) : null} style={{ display: 'flex', justifyContent: 'center' }}>{item.missing ? <MoreIcon /> : null}</ItemColumn>\n      </tr >\n    ];\n\n    if (this.state.expandedRow === item.name) {\n      itemRows.push(\n        <RowDetail key={\"row-expanded-\" + item.name}>\n          <td colSpan={Object.keys(item).length}>\n            <div style={{ 'display': 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Chart name={item.description} />\n            </div>\n          </td>\n        </RowDetail>\n      );\n    }\n\n    return itemRows;\n  }\n\n  goToTrain = ({ data }) => {\n    const { path } = this.props.pre_processing;\n    const { targetSelected } = this.props.indicator;\n\n    const newData = {\n      ...data,\n      path,\n      target: targetSelected && targetSelected.value ? targetSelected.value : null\n    };\n\n    this.props.postTrain(newData);\n    this.props.setScreen(ADD_TRAIN, TRAIN, newData);\n  };\n\n  submit = () => {\n    const { data } = this.props.pre_processing;\n    const itemsMissing = data.filter(item => item.missing);\n\n    if (itemsMissing.length) {\n      this.renderWarningMsg('Por favor, verifique as pendências antes de continuar.');\n      return;\n    }\n\n    if (!data.length) {\n      this.renderWarningMsg('Sem dados disponíveis.');\n      return;\n    }\n\n    this.props.setDialog('trainConfig');\n  }\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  checkIsPreProcessed = () => {\n    const { is_processed } = this.props.pre_processing;\n\n    if (is_processed) {\n      this.props.setDialog('alert', {\n        description: 'Os dados pré-processados serão perdidos. Deseja continuar?'\n      });\n      return;\n    }\n\n    this.initPreProcessing();\n  }\n\n  initPreProcessing = () => {\n    const { path } = this.props.pre_processing;\n\n    this.props.deletePreProcessing({ path });\n    this.props.setScreen(ADD_TRAIN, INDICATORS);\n  }\n\n  render() {\n    const dataSourceContext = this.getDataSourceContext();\n    const dataSourceName = this.getDataSourceName();\n    const { data, loading, error } = this.props.pre_processing;\n\n    return (\n      <PerfectScrollbar style={{ width: '100%', overflowX: 'auto' }}>\n        <ConfigContainer size='big'>\n\n          <div onClick={this.checkIsPreProcessed.bind(this)}>\n            <BreadCrumb\n              text='Voltar para Seleção de indicadores'\n            />\n          </div>\n\n          <Header>\n            <h1>Pré-processamento dos dados</h1>\n            <div>\n              <Button onClick={this.submit.bind(this)}>Configurar treinamento</Button>\n            </div>\n          </Header>\n\n          <DataSourceText>\n            <span><b>Fonte de dados: </b> {dataSourceContext}/{dataSourceName} {data.length && !loading ? `(Total de Instâncias : ${data[0].count})` : null}</span>\n          </DataSourceText>\n\n          {loading ?\n            <LoadingContainer>\n              <ProgressSpinner style={{ width: '50px', height: '50px' }} strokeWidth=\"4\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\n            </LoadingContainer>\n            : null}\n\n          {!data.length && !loading && !error ?\n            <StatusMsgContainer> Sem dados para serem exibidos. </StatusMsgContainer>\n            : null}\n\n          {error ?\n            <StatusMsgContainer>Ocorreu um erro para listar os indicadores.</StatusMsgContainer>\n            : null}\n\n          {data.length && !loading && !error ?\n            <div style={{ overflowX: 'auto' }}>\n              <Table>\n                <thead>\n                  <tr>\n                    <FirstHeaderColumn>&nbsp;</FirstHeaderColumn>\n                    <HeaderColumn style={{ paddingLeft: '2rem' }}>Indicador</HeaderColumn>\n                    <HeaderColumn>&nbsp;</HeaderColumn>\n                    <HeaderColumn>&nbsp;</HeaderColumn>\n                    <HeaderColumn>Correlação</HeaderColumn>\n                    <HeaderColumn>Tipo</HeaderColumn>\n                    <HeaderColumn align=\"right\">Qtd. Único</HeaderColumn>\n                    <HeaderColumn align=\"right\">Qtd. Faltante</HeaderColumn>\n                    <HeaderColumn align=\"right\" >Média</HeaderColumn>\n                    <HeaderColumn align=\"right\">Desvio Padrão</HeaderColumn>\n                    <HeaderColumn align=\"right\">Mínimo</HeaderColumn>\n                    <HeaderColumn align=\"right\">Máximo</HeaderColumn>\n                    <HeaderColumn>Ações</HeaderColumn>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {data.map(item => this.renderItem(item))}\n                </tbody>\n              </Table>\n            </div>\n            : null}\n\n        </ConfigContainer>\n        {this.renderMenuActions()}\n        <PreProcessingDialog onSubmit={({ strategy, constantValue }) => this.executePreProcessing({ strategy, constantValue })} />\n        <TrainConfigDialog onSubmit={({ data }) => this.goToTrain({ data })} />\n        <AlertDialog onSubmit={this.initPreProcessing}></AlertDialog>\n      </PerfectScrollbar>\n    )\n  }\n}\n\nconst mapStateToProps = ({ pre_processing, indicator }) => ({ pre_processing, indicator });\n\nexport default connect(\n  mapStateToProps, {\n  ...ScreenActions, ...toastrActions,\n  ...ChartActions, ...DialogActions,\n  ...PreProcessingActions, ...TrainActions\n}\n)(PreProcessing);","import styled from 'styled-components';\n\nexport const TrainInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 2rem;\n  margin-right: 2rem;\n  color: #4A5173;\n  font-size: 13px;\n  line-height: 23px;\n`;\n\nexport const EmptyTrainInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 50%;\n  color: #CCC;\n  font-size: 20px;\n  line-height: 23px;\n`;\n\nexport const ScoreContainer = styled.div`\n  background: rgba(176, 190, 255, 0.31);\n  border-radius: 72px;\n  padding: 5px 20px;\n  margin-right: 2vw;\n  font-size: 14px;\n`;","import React, { Component } from 'react';\nimport {\n  DialogForm, DialogFormButtonContainer,\n  DialogInput, DialogSpan\n} from '../../styles/global';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { connect } from 'react-redux';\nimport Dialog from '../Dialog';\nimport Button from '../../styles/Button';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { Creators as TrainModelActions } from '../../store/ducks/train_model';\nimport { ProgressSpinner } from 'primereact/progressspinner';\n\nclass TrainModelSaveDialog extends Component {\n\n  state = {\n    name: '',\n    description: ''\n  };\n\n  onClose = () => {\n    this.props.setDialog('trainSave');\n  }\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  submit = () => {\n    const { path } = this.props.pre_processing;\n    const { score } = this.props.train.data;\n    const { name, description } = this.state;\n\n    if (!name || !description) {\n      this.renderWarningMsg('Por favor, preencha todos os campos!');\n      return;\n    }\n\n    this.props.postTrainModel({\n      name, \n      description, \n      path, \n      score: score || null\n    });\n  }\n\n  render() {\n    const { loading } = this.props.train_model;\n    const { name, description } = this.state;\n    const { trainSave } = this.props.dialog;\n\n    if (!trainSave) {\n      return null;\n    }\n\n    return (\n      <Dialog>\n        <DialogForm>\n          <h1>{loading ? 'Salvando Modelo...' : 'Salvar Modelo'}</h1>\n\n          {loading ? \n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '15vh' }}>\n              <ProgressSpinner style={{ width: '30px', height: '30px' }} strokeWidth=\"4\" animationDuration=\".5s\" />\n            </div>\n          : null}\n\n          {!loading ? <DialogSpan>Nome do modelo</DialogSpan> : null}\n          {!loading ? <DialogInput\n            value={name}\n            autoComplete=\"off\"\n            onChange={this.handleChange}\n            name=\"name\">\n          </DialogInput> : null}\n\n          {!loading ? <DialogSpan>Detalhes do modelo</DialogSpan> : null}\n          {!loading ? <DialogInput\n            value={description}\n            autoComplete=\"off\"\n            onChange={this.handleChange}\n            name=\"description\">\n          </DialogInput> : null}\n\n          {!loading ? <DialogFormButtonContainer>\n            <Button onClick={this.submit.bind(this)}>Salvar</Button>\n            <Button style={{ marginLeft: '1vw' }} color=\"gray\" isCancel={true} onClick={this.onClose}>Cancelar</Button>\n          </DialogFormButtonContainer> : null}\n\n\n        </DialogForm>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = ({ dialog, train_model, pre_processing, train }) =>\n  ({ dialog, train_model, pre_processing, train });\n\nexport default connect(\n  mapStateToProps, { ...DialogActions, ...toastrActions, ...TrainModelActions }\n)(TrainModelSaveDialog);","import styled from 'styled-components';\n\nexport const DialogInput = styled.input`\n    padding: 10px;\n    border-radius: 3px;\n    border: none;\n    background-color: rgba(0, 0, 0, 0.1);\n    margin-top: 8px;\n    transition: border 0.15s ease;\n    font-size: 16px;\n    border: 1px solid #FFF;\n\n    &:focus {\n      border: 1px solid #000;\n    }\n`;\n\nexport const DialogSpan = styled.span`\n    font-size: 16px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    margin-top: 15px;\n`;\n\nexport const DialogForm = styled.form`\n  border-radius: 5px;\n  padding: 30px;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  h1 {\n    font-weight: 500;\n    font-weight: 800;\n    font-size: 18px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    justify-content: center;\n  }\n\n  h2 {\n    font-size: 12px;\n  }\n\n  button {\n    margin: 30px 0 0;\n    color: #4A5173;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.14em;\n    text-transform: uppercase;\n    background-color: #FFF;\n    border: 1px solid #4A5173;\n\n    &:hover {\n      color: #FFF;\n    }\n  }\n`;\n\nexport const DialogFormButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;","import React, { Component } from 'react';\nimport { DialogForm, DialogFormButtonContainer } from './styles';\nimport { Table, ItemColumn } from '../../styles/global';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { connect } from 'react-redux';\nimport Dialog from '../Dialog';\nimport Button from '../../styles/Button';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { Creators as TrainModelActions } from '../../store/ducks/train_model';\nimport { ProgressSpinner } from 'primereact/progressspinner';\n\nclass TrainMetricDialog extends Component {\n\n  onClose = () => {\n    this.props.setDialog('trainMetrics');\n  }\n\n  renderItem = (item, idx) => (\n    <tr key={idx}>\n      <ItemColumn style={{ paddingLeft: '1rem' }}><b>{item.name}</b></ItemColumn>\n      <ItemColumn>{item.value.toFixed(2)}</ItemColumn>\n    </tr>\n  )\n\n  render() {\n    const { data, loading } = this.props.train_metric;\n    const { trainMetrics } = this.props.dialog;\n\n    if (!trainMetrics) {\n      return null;\n    }\n\n    return (\n      <Dialog>\n        <DialogForm>\n          <h1 style={{ paddingLeft: '1rem' }}>Métricas</h1>\n\n          {loading ?\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '15vh' }}>\n              <ProgressSpinner style={{ width: '30px', height: '30px' }} strokeWidth=\"4\" animationDuration=\".5s\" />\n            </div>\n            : null}\n\n          {data && !loading ?\n            <Table>\n              <tbody>\n                {data.map((item, idx) => this.renderItem(item, idx))}\n              </tbody>\n            </Table>\n            : null}\n\n          {!loading ? <DialogFormButtonContainer>\n            <Button color=\"gray\" isCancel={true} onClick={this.onClose}>Fechar</Button>\n          </DialogFormButtonContainer> : null}\n\n\n        </DialogForm>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = ({ dialog, train_metric, pre_processing }) =>\n  ({ dialog, train_metric, pre_processing });\n\nexport default connect(\n  mapStateToProps,\n  {\n    ...DialogActions, ...toastrActions,\n    ...TrainModelActions\n  }\n)(TrainMetricDialog);","import React, { Component } from 'react';\nimport { Table, ItemColumn, DialogForm, DialogFormButtonContainer } from '../../styles/global';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { connect } from 'react-redux';\nimport Dialog from '../Dialog';\nimport Button from '../../styles/Button';\n\nclass TrainAlgorithmDialog extends Component {\n\n  onClose = () => {\n    this.props.setDialog('trainAlgorithm');\n  }\n\n  renderItem = (item, idx) => (\n    <tr key={idx}>\n      <ItemColumn style={{ paddingLeft: '1rem' }}>{item.algorithm}</ItemColumn>\n      <ItemColumn style={{ paddingLeft: '1rem' }}>{item.hyperparameters.join(', ')}</ItemColumn>\n    </tr>\n  )\n\n  render() {\n    const { fitted_pipelines } = this.props.train.data;\n    const { trainAlgorithm } = this.props.dialog;\n\n    if (!trainAlgorithm) {\n      return null;\n    }\n\n    return (\n      <Dialog>\n        <DialogForm>\n          <h1 style={{ paddingLeft: '1rem' }}>Classificadores Utilizados</h1>\n\n          {fitted_pipelines && fitted_pipelines.length ?\n            <div style={{ display: 'flex' }}>\n              <Table>\n                <thead>\n                  <tr>\n                    <th align=\"left\" style={{ paddingLeft: '1rem' }}>Classificador</th>\n                    <th align=\"left\" style={{ paddingLeft: '1rem' }}>Hiperparâmetros</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {fitted_pipelines.map((item, idx) => this.renderItem(item, idx))}\n                </tbody>\n              </Table>\n            </div>\n            : null}\n\n          <DialogFormButtonContainer>\n            <Button color=\"gray\" isCancel={true} onClick={this.onClose}>Fechar</Button>\n          </DialogFormButtonContainer>\n\n\n        </DialogForm>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = ({ dialog, train }) => ({ dialog, train });\n\nexport default connect(\n  mapStateToProps,\n  {\n    ...DialogActions\n  }\n)(TrainAlgorithmDialog);","import * as moment from 'moment';\nimport React, { Component } from 'react';\nimport { ConfigContainer } from '../../styles/ConfigContainer';\nimport BreadCrumb from '../BreadCrumb';\nimport {\n  TrainInfo, ScoreContainer\n} from './styles';\nimport {\n  Header, Table, FirstHeaderColumn, HeaderColumn,\n  FirstItemColumn, ItemColumn, StatusMsgContainer\n} from '../../styles/global';\nimport Button from '../../styles/Button';\nimport { PRE_PROCESSING, ADD_TRAIN, TRAIN_MODEL } from '../../constants';\nimport { connect } from 'react-redux';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport CheckIcon from 'react-feather/dist/icons/check';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Creators as TrainStatusActions } from '../../store/ducks/train_status';\nimport { Creators as TrainActions } from '../../store/ducks/train';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { Creators as ScreenActions } from '../../store/ducks/screen';\nimport { Beforeunload } from 'react-beforeunload';\nimport AlertDialog from '../AlertDialog';\nimport TrainModelSaveDialog from '../TrainModelSaveDialog';\nimport TrainMetricDialog from '../TrainMetricDialog';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { Creators as TrainMetricActions } from '../../store/ducks/train_metric';\nimport TrainAlgorithmDialog from '../TrainAlgorithmDialog';\n\nclass Train extends Component {\n\n  state = {\n    interval: null,\n    countdown: Date.now()\n  };\n\n  getDataSourceContext = () => this.props.indicator.datasource ? this.props.indicator.datasource.split('/')[0] : null;\n\n  getDataSourceName = () => this.props.indicator.datasource ? this.props.indicator.datasource.split('/')[2] : null;\n\n  componentDidMount() {\n    const interval = window.setInterval(this.callTrainStatus, 1000 * 20);\n\n    this.setState({\n      countdown: Date.now(),\n      interval\n    });\n\n    this.props.trainStatusInit();\n  }\n\n  callTrainStatus = () => {\n    const { path } = this.props.pre_processing;\n    this.props.postTrainStatus({ path });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  getDiffExecutionTime = (item, idx) => {\n    let diff = null;\n    const { data } = this.props.train_status;\n    let now = idx === 0 ? moment(this.state.countdown) : moment(data[idx - 1].date);\n    let finishedAt = moment(item.date);\n    let nowDiff = moment(\n      [~~now.format('YYYY'), ~~now.format('MM'), ~~now.format('DD'),\n      ~~now.format('HH'), ~~now.format('mm'), ~~now.format('ss')\n      ])\n    let finishDiff = moment(\n      [~~finishedAt.format('YYYY'), ~~finishedAt.format('MM'), ~~finishedAt.format('DD'),\n      ~~finishedAt.format('HH'), ~~finishedAt.format('mm'), ~~finishedAt.format('ss')])\n\n    diff = finishDiff.diff(nowDiff, 'minutes');\n    diff = Math.abs(diff);\n\n    if (diff === 0) {\n      diff = finishDiff.diff(nowDiff, 'seconds');\n      diff = Math.abs(diff);\n\n      return `${diff} segundos`;\n    }\n\n    if (diff === 1) {\n      diff = `${diff} minuto`;\n    }\n\n    if (diff < 60) {\n      diff = `${diff} minutos`;\n    }\n\n    if (diff >= 60 && diff <= 120) {\n      diff = `${Math.round(diff / 60)} hora`;\n    }\n\n    if (diff >= 120) {\n      diff = `${Math.round(diff / 60)} horas`;\n    }\n\n    return diff;\n  }\n\n  renderItem = (item, idx) => (\n    <tr key={idx}>\n      <FirstItemColumn>{this.getStatusIcon(item)}</FirstItemColumn>\n      <ItemColumn>{item.step}</ItemColumn>\n      <ItemColumn>{item.status}</ItemColumn>\n      <ItemColumn>{item.date ? moment(item.date).format('DD/MM/YYYY HH:mm:ss') : null}</ItemColumn>\n      <ItemColumn>{item.date ? this.getDiffExecutionTime(item, idx) : null}</ItemColumn>\n    </tr>\n  )\n\n  getStatusIcon = (item) => {\n    if (item.status === 'Em andamento') {\n      return (\n        <ProgressSpinner\n          style={{ width: '24px', height: '24px' }}\n          strokeWidth=\"4\"\n          animationDuration=\".5s\" />\n      )\n    }\n\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <CheckIcon color={'#12BB6A'} />\n      </div>\n    );\n  }\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  getSplit = (value) => {\n    const { data } = this.props.pre_processing;\n\n    return ~~((data[0].count * this.props.screen.data[value]) / 100);\n  }\n\n  checkGoBackToPreProcessing = () => {\n    const { data, loading } = this.props.train;\n\n    if (loading) {\n      this.renderWarningMsg('Não é possível voltar para a tela de pré-processamento durante o treinamento!');\n      return;\n    }\n\n    if (Object.keys(data).length) {\n      this.props.setDialog('alert', {\n        description: 'Os dados gerados pelo treinamento serão perdidos. Você realmente deseja voltar para a tela de pré-processamento?'\n      });\n      return;\n    }\n\n    this.props.setScreen(ADD_TRAIN, PRE_PROCESSING);\n  }\n\n  deleteTrain = () => {\n    const { path } = this.props.pre_processing;\n\n    this.props.deleteTrain({ path });\n    this.props.setScreen(ADD_TRAIN, PRE_PROCESSING);\n  }\n\n  openSaveModel = () => {\n    this.props.setDialog('trainSave');\n  }\n\n  openViewMetrics = () => {\n    const { path } = this.props.pre_processing;\n\n    this.props.postTrainMetric({ path });\n    this.props.setDialog('trainMetrics');\n  }\n\n  openViewAlgorithms = () => {\n    this.props.setDialog('trainAlgorithm');\n  }\n\n  goToSaveModels = () => {\n    this.props.setScreen(TRAIN_MODEL, TRAIN_MODEL, null);\n  }\n\n  render() {\n    const dataSourceContext = this.getDataSourceContext();\n    const dataSourceName = this.getDataSourceName();\n    const { train, screen, train_status, train_model } = this.props;\n    const { loading, error } = this.props.train;\n    const { data } = this.props.pre_processing;\n    const isFinished = !train.loading && Object.keys(train.data).length > 0;\n\n    return (\n      <Beforeunload onBeforeunload={() => \"Deseja Continuar?\"}>\n        <PerfectScrollbar style={{ width: '100%', overflowX: 'auto' }}>\n          <ConfigContainer size='big' style={{ color: '#000' }}>\n\n            <div onClick={this.checkGoBackToPreProcessing}>\n              <BreadCrumb\n                text='Voltar para pré-processamento'\n              />\n            </div>\n\n            <Header>\n              <h1>Treinamento</h1>\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                {train.data && train.data.score && (\n                  <ScoreContainer>Acurácia de Teste: <b>{train.data.score.toFixed(2)}</b></ScoreContainer>\n                )}\n                < Button\n                  style={{ margin: '.5vw' }}\n                  onClick={isFinished ? this.openViewMetrics.bind(this) : null}\n                  disabled={!isFinished}\n                  filled={false}>Ver Métricas</Button>\n                {train.data && train.data.score && (\n                  <Button\n                    style={{ margin: '.5vw' }}\n                    onClick={isFinished ? this.openViewAlgorithms.bind(this) : null}\n                    disabled={!isFinished}\n                    filled={false}>Ver Classificadores</Button>\n                  )}\n                {train_model.lastModelSaved ?\n                  <Button\n                    style={{ marginLeft: '.5vw' }}\n                    onClick={this.goToSaveModels.bind(this)}>VER MODELOS SALVOS</Button> : null}\n                {!train_model.lastModelSaved ?\n                  <Button\n                    style={{ marginLeft: '.5vw' }}\n                    onClick={isFinished ? this.openSaveModel.bind(this) : null}\n                    disabled={!isFinished}>SALVAR MODELO</Button>\n                  : null}\n              </div>\n            </Header>\n\n            <TrainInfo>\n              <div><b>Fonte de dados:</b> {dataSourceContext}/{dataSourceName} {data.length && !loading ? `(Total de Instâncias : ${data[0].count})` : null}</div>\n              <div><b>Qtd. máxima de treinos:</b> {screen.data.generations || null}</div>\n              <div><b>Qtd. de kfolds:</b> {screen.data.kfold || null}</div>\n              <div><b>Treinamento:</b> {screen.data.train}% ({this.getSplit('train')} instâncias)  | <b>Testes:</b> {screen.data.test}% ({this.getSplit('test')} instâncias)</div>\n            </TrainInfo>\n\n            {!loading && !error && !train_status.data.length ?\n              <StatusMsgContainer> Sem dados de treinamento para serem exibidos. </StatusMsgContainer>\n              : null}\n\n            <Table>\n              <thead>\n                <tr>\n                  <FirstHeaderColumn>&nbsp;</FirstHeaderColumn>\n                  <HeaderColumn>Treinamento</HeaderColumn>\n                  <HeaderColumn>Status</HeaderColumn>\n                  <HeaderColumn>Finalizado em</HeaderColumn>\n                  <HeaderColumn>Tempo de Execução</HeaderColumn>\n                </tr>\n              </thead>\n\n              <tbody>\n                {train_status.data.map((item, idx) => this.renderItem(item, idx))}\n                {loading ? this.renderItem({\n                  step: `Treinamento ${train_status.data.length + 1}`,\n                  status: 'Em andamento',\n                  date: null,\n                  score: null\n                })\n                  : null}\n              </tbody>\n            </Table>\n\n          </ConfigContainer >\n          <AlertDialog onSubmit={this.deleteTrain}></AlertDialog>\n          <TrainModelSaveDialog />\n          <TrainMetricDialog />\n          <TrainAlgorithmDialog />\n        </PerfectScrollbar>\n      </Beforeunload>\n    )\n  }\n}\n\nconst mapStateToProps = ({ train, screen, pre_processing, train_status, train_model, indicator }) =>\n  ({ train, screen, pre_processing, train_status, train_model, indicator });\n\nexport default connect(mapStateToProps,\n  {\n    ...TrainStatusActions, ...toastrActions,\n    ...ScreenActions, ...DialogActions,\n    ...TrainActions, ...TrainMetricActions\n  }\n)(Train);","import * as moment from 'moment';\nimport React, { Component } from 'react';\nimport { ConfigContainer } from '../../styles/ConfigContainer';\nimport {\n  Header, Table, HeaderColumn, ItemColumn,\n  FirstHeaderColumn, FirstItemColumn,\n  StatusMsgContainer, LoadingContainer\n} from '../../styles/global';\nimport { connect } from 'react-redux';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Creators as TrainModelActions } from '../../store/ducks/train_model';\nimport { Creators as ModelCopyActions } from '../../store/ducks/model_copy';\nimport { Creators as DialogActions } from '../../store/ducks/dialog';\nimport { Creators as DownloadActions } from '../../store/ducks/download';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport MoreIcon from 'react-feather/dist/icons/more-horizontal';\nimport CopyIcon from 'react-feather/dist/icons/copy';\nimport KeyIcon from 'react-feather/dist/icons/key';\nimport DownloadIcon from 'react-feather/dist/icons/download';\nimport CodeIcon from 'react-feather/dist/icons/terminal';\nimport TrashIcon from 'react-feather/dist/icons/trash';\nimport { primaryColor } from '../../styles/global';\nimport { PRE_PROCESSING_RAW, TRAIN_PIPELINES } from '../../constants';\nimport AlertDialog from '../../components/AlertDialog';\nimport { ProgressSpinner } from 'primereact/progressspinner';\n\nclass TrainModel extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      itemSelected: null,\n      anchorEl: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTrainModel();\n  }\n\n  renderItem = (item, idx) => (\n    <tr key={idx}>\n      <FirstItemColumn>{item.name}</FirstItemColumn>\n      <ItemColumn>{item.description}</ItemColumn>\n      <ItemColumn>{moment(item.created_at).format('DD/MM/YYYY HH:mm:ss')}</ItemColumn>\n      <ItemColumn>{item.score ? item.score.toFixed(2) : null}</ItemColumn>\n      <ItemColumn>{item.last_predict_at ? moment(item.last_predict_at).format('DD/MM/YYYY HH:mm:ss') : null}</ItemColumn>\n      <ItemColumn>{item.qtd_predict ? item.qtd_predict : 0}</ItemColumn>\n      <ItemColumn isClickable onClick={this.handleClickMenu.bind(this, item)}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}><MoreIcon size={16} /></div>\n      </ItemColumn>\n    </tr>\n  )\n\n  handleMenuItemClose = () => this.setState({ anchorEl: null });\n\n  handleClickMenu = (item, event) => {\n    this.setState({ anchorEl: event.currentTarget, itemSelected: item });\n  };\n\n  deleteModel = () => {\n    const { itemSelected } = this.state;\n\n    this.props.deleteTrainModel(itemSelected.model_id);\n  }\n\n  renderMenuActions = () => {\n    let actions = [\n      {\n        action: 'download_data',\n        label: 'Baixar dados do modelo',\n        icon: <DownloadIcon size={16} color={primaryColor} />\n      },\n      {\n        action: 'download_pipeline',\n        label: 'Baixar código do modelo',\n        icon: <CodeIcon size={16} color={primaryColor} />\n      },\n      {\n        action: 'copy_url',\n        label: 'Copiar URL do modelo',\n        icon: <CopyIcon size={16} color={primaryColor} />\n      },\n      {\n        action: 'generate_key',\n        label: 'Gerar nova chave de API',\n        icon: <KeyIcon size={16} color={primaryColor} />\n      },\n      {\n        action: 'delete_model',\n        label: 'Excluir modelo',\n        icon: <TrashIcon size={16} color={primaryColor} />\n      }\n    ];\n\n    const { anchorEl } = this.state;\n\n    return (\n      <Menu\n        style={{ list: { paddingTop: 0, paddingBottom: 0 } }}\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={this.handleMenuItemClose}\n      >\n        {actions.map((option, index) => (\n          <MenuItem\n            style={{ color: primaryColor, fontSize: '14px' }}\n            key={index}\n            selected={false}\n            onClick={this.handleMenuItemClick.bind(this, option)}\n          >\n            {option.icon}&nbsp;&nbsp;{option.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    )\n  }\n\n  renderSuccessMsg = ({ title, message }) => {\n    this.props.add({\n      type: 'success',\n      title: title || 'Sucesso',\n      message\n    });\n  }\n\n  handleMenuItemClick = (option, event) => {\n    const { model_id } = this.state.itemSelected;\n\n    if (option.action === 'download_data') {\n      this.props.getDownload(model_id, PRE_PROCESSING_RAW);\n    }\n\n    if (option.action === 'download_pipeline') {\n      this.props.getDownload(model_id, TRAIN_PIPELINES);\n    }\n\n    if (option.action === 'delete_model') {\n      this.props.setDialog('alert', {\n        description: 'Todos os dados gerados pelo modelo serão removidos. Deseja continuar?'\n      });\n    }\n\n    if (option.action === 'copy_url') {\n      this.props.getModelCopy(model_id)\n    }\n\n    if (option.action === 'generate_key') {\n      this.props.putTrainModel(model_id, { data: {}, action: 'GENERATE_KEY' });\n    }\n\n    this.handleMenuItemClose();\n  };\n\n  render() {\n    const { data, loading } = this.props.train_model;\n\n    return (\n      <PerfectScrollbar style={{ width: '100%', overflowX: 'auto' }}>\n        <ConfigContainer size='big' style={{ color: '#000' }}>\n\n          <Header>\n            <h1>Modelos Salvos</h1>\n          </Header>\n\n\n          {!data.length && !loading ?\n            <StatusMsgContainer> Sem modelos salvos para serem exibidos. </StatusMsgContainer>\n            : null}\n\n          {loading ?\n            <LoadingContainer>\n              <ProgressSpinner style={{ width: '50px', height: '50px' }} strokeWidth=\"4\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\n            </LoadingContainer>\n            : null}\n\n          {data.length && !loading ?\n            <Table>\n              <thead>\n                <tr>\n                  <FirstHeaderColumn>Nome</FirstHeaderColumn>\n                  <HeaderColumn>Descrição</HeaderColumn>\n                  <HeaderColumn>Criado em</HeaderColumn>\n                  <HeaderColumn>Acurácia de teste</HeaderColumn>\n                  <HeaderColumn>Última predição em</HeaderColumn>\n                  <HeaderColumn>Predições realizadas</HeaderColumn>\n                  <HeaderColumn><div style={{ display: 'flex', justifyContent: 'center' }}>Ações</div></HeaderColumn>\n                </tr>\n              </thead>\n\n              <tbody>\n                {data.map((item, idx) => this.renderItem(item, idx))}\n              </tbody>\n            </Table>\n            : null}\n\n          {this.renderMenuActions()}\n          <AlertDialog onSubmit={this.deleteModel}></AlertDialog>\n        </ConfigContainer >\n      </PerfectScrollbar>\n    )\n  }\n}\n\nconst mapStateToProps = ({ train_model }) => ({ train_model });\n\nexport default connect(mapStateToProps,\n  {\n    ...TrainModelActions, ...toastrActions,\n    ...ModelCopyActions, ...DownloadActions,\n    ...DialogActions\n  })\n  (TrainModel);","import styled from 'styled-components';\n\nexport const Item = styled.button`\n  border: 0;\n  background: transparent;\n`;\n\nexport const ChipContainer = styled.div`\n  span {\n    font-family: Avenir, sans-serif;\n    font-size: 15px;\n  }\n`;\n\nexport const CardContainer = styled.div`\n  margin: 5px 10px;\n  display: flex;\n  flex-wrap: wrap;\n  /* background: white;\n  border-radius: 5px; */\n`;\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  min-height: 100%;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\t/* border: 1px solid #ccc; */\n\t/* flex-wrap: wrap; */\n  justify-content: flex-start;\n`;\n\nexport const AsideContainer = styled.aside`\n  /* height: 100%; */\n  background: white;\n  padding: 20px 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const LeftContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 20vw;\n  max-width: 20vw;\n  padding: 20px;\n  margin-bottom: 10px;\n\n  h1 {\n    padding-bottom: 15px;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 31px;\n    color: #4A5173;\n  }\n`;\n\nexport const DashboardMainContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FullContainer = styled.div`\n  width: 100%;\n\tpadding: 10px;\n  display: flex;\n\t/* text-align: center; */\n  border-radius: 5px;\n  /* box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1); */\n\n  h1 {\n    padding-bottom: 15px;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 31px;\n    color: white;\n  }\n`;\n\nexport const LeftContentInside = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 16vw;\n  max-width: 16vw;\n  padding: 20px;\n  margin-bottom: 10px;\n  margin-top: 25px; \n  margin-left: 10px; \n  height: 80%;\n  border: 2px solid #4A5173;\n`;\n\nexport const FlexInside = styled.div`\n  display: flex;\n`;\n\nexport const SelectContainer = styled.div`\n  padding-bottom: 3vh;\n  width: 100%;\n`;\n\nexport const Content = styled.div`\n  /* display: flex; */\n  padding-top: 0;\n  /* width: 50%; */\n  margin: 0 10px;\n  /* margin: 0 2rem 1rem; */\n`;\n\nexport const HalfContent = styled.div`\n  /* display: flex; */\n  padding-top: 0;\n  width: 50%;\n  margin: 0 10px;\n  /* margin: 0 2rem 1rem; */\n`;\n\nexport const CustomizedContent = styled.div`\n  padding-top: 0;\n  margin: 0 10px;\n`;\n\nexport const Separator = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 2vw;\n  /* border-left: 2px dotted #000; */\n  height: 462px;\n`;\n\nexport const GraphContainer = styled.div`\n  max-width: 420px;\n\tmargin: 10px auto;\n  padding-top: 5px;\n\tdisplay: flex;\n  background: white;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nexport const GraphContainerInside = styled.div`\n\tmargin: 15px;\n  padding-top: 5px;\n  background: white;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nexport const ExternalLoadingContainer = styled.div`\n  max-width: 420px;\n\tmargin: 0 auto;\n\tdisplay: flex;\n  /* background: white; */\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nexport const FlexItem = styled.div`\n\tflex: 1;\n\tmargin: 5px;\n\tpadding: 10px;\n\ttext-align: center;\n\t/* font-size: 1.5em; */\n  position: relative;\n  border-radius: 5px;\n  border: 2px solid #4A5173;\n  /* background: #4A5173; */\n`;\n\nexport const TabsContainer = styled.div`\n  flex-grow: 1;\n  border: 2px solid #4A5173;\n  /* background: #4A5173; */\n  margin: 40px;\n`;","import React, { Component } from 'react';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Header, LoadingContainer, SelectText, selectStyle\n} from '../../styles/global';\nimport { connect } from 'react-redux';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Creators as CourseActions } from '../../store/ducks/course';\nimport { actions as toastrActions } from 'react-redux-toastr';\nimport { Creators as IndicatorActions } from '../../store/ducks/indicator';\nimport { Creators as SubjectActions } from '../../store/ducks/subject';\nimport { Creators as SemesterActions } from '../../store/ducks/semester';\nimport { Creators as PhenomenonActions } from '../../store/ducks/phenomenon';\nimport { Creators as PredictionActions } from '../../store/ducks/prediction';\nimport { Creators as StudentActions } from '../../store/ducks/student';\nimport { Creators as PeriodActions } from '../../store/ducks/period';\n\nimport { LeftContent, SelectContainer, Content, HalfContent, CustomizedContent, GraphContainer, GraphContainerInside, FlexItem, TabsContainer, ExternalLoadingContainer, LeftContentInside, FlexInside, AsideContainer, MainContainer, DashboardMainContainer, FullContainer, ChipContainer, Item, CardContainer } from './styles';\nimport Select from 'react-select';\nimport Button from '../../styles/Button';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport MonitorIcon from 'react-feather/dist/icons/monitor';\n// import InfoIcon from 'react-feather/dist/icons/info';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\n\n// simplest method: uses precompiled complete bundle from `plotly.js`\n// import Plot from 'react-plotly.js';\n\n// import Plot from \"react-plotly.js\";\nimport Plotly from \"plotly.js-basic-dist\";\n\n// customizable method: use your own `Plotly` object\nimport createPlotlyComponent from 'react-plotly.js/factory';\n\nconst Plot = createPlotlyComponent(Plotly);\n\nconst md5 = require('md5');\n\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   customWidth: {\n//     maxWidth: 500,\n//   },\n//   noMaxWidth: {\n//     maxWidth: 'none',\n//   },\n//   fixedFontSize: {\n//     fontSize: '15px',\n//   }\n// }));\n\n// const classes = useStyles();\n\nclass Dashboard extends Component {\n  state = {\n    tabValue: 0,\n    config: {\n      responsive: true,\n      displaylogo: false,\n      // scrollZoom: true,\n    },\n    chartOptions: [\n      { value: 'bar', label: 'Barra' },\n      { value: 'pie', label: 'Pizza' },\n    ],\n    choosedChart: { value: 'bar', label: 'Barra' },\n    detailedOptions: [\n      { value: 'byStudent', label: 'Aluno' },\n      { value: 'byVariable', label: 'Variável' },\n    ],\n    choosedDetailed: { value: 'byStudent', label: 'Aluno' },\n    variableOptions: null,\n    choosedVariable: null,\n    studentOptions: null,\n    choosedStudent: null,\n    detailedChartData: null,\n    detailedChartLayout: null,\n    loadingChart: false,\n    predictionInfoText: null,\n    mappedVariablesMeaning: {\n      'var01': 'Número de diferentes lugares (Endereços IP) de onde o aluno acessou o AVA.',\n      'var02': 'Número de mensagens enviadas do aluno ao(s) professor(es) usando o AVA.',\n      'var03': 'Número de mensagens enviadas do aluno ao(s) tutor(es) usando o AVA.',\n      'var04': 'Número total de mensagens enviadas pelo aluno no AVA.',\n      'var05': 'Número total de mensagens recebidas pelo aluno no AVA.',\n      'var06': 'Número de threads criadas pelo aluno em fóruns Q&A.',\n      'var07': 'Número de threads no fórum Q&A.',\n      'var08': 'Número de threads no fórum criadas pelo aluno que foram respondidas por outros alunos.',\n      'var09': 'Número de threads no fórum criadas pelo aluno que foram respondidas pelo tutor ou professor.',\n      'var10': 'Número de diferentes colegas para quem o aluno enviou mensagens no AVA.',\n      'var12': 'Número de vezes que a seção \"Conteúdos\" (que lista os arquivos que descrevem o programa do curso) foi visualizada.',\n      'var13': 'Hora do dia em que o aluno mais frequentemente trabalha em suas atribuições/exercícios.',\n      'var14': 'Período do dia (manhã, tarde, anoitecer, noite) na qual o aluno mais frequentemente trabalhou em suas atribuições/exercícios.',\n      'var16': 'Número de atribuições/exercícios entregues pelo aluno após o prazo.',\n      'var17': 'Tempo médio entre o momento em que uma atividade foi atribuída e em que o aluno a completou.',\n      'var18': 'Número de vezes que o aluno acessa o fórum (pageviews).',\n      'var20': 'Número de respostas em uma thread no fórum (denota a ação de reconsiderar a opinião sobre o assunto).',\n      'var21': 'Número de vezes que o aluno acessa o relatório de notas.',\n      'var22': 'Número de vezes que o aluno visualizou as atividades.',\n      'var23': 'Número de visualizações nas notas de atividades.',\n      'var24': 'Média semanal do número de vezes em que o aluno acessou o AVA.',\n      'var25': 'Tempo médio entre o momento em que um tópico é criado no fórum e o momento\\n em que o aluno posta sua primeira resposta nele.',\n      'var28': 'Número de timeouts no AVA.',\n      // 'var31a': 'Número de vezes que o aluno acessou o AVA.',\n      'var31': 'Número de vezes que o aluno acessou o AVA.',\n      'var31b': 'Número de distintos dias onde o aluno acessou o curso no AVA.',\n      'var31c': 'Número de distintos dias onde o aluno acessou o AVA.',\n      'var32a': 'Número de vezes em que o aluno acessou o AVA por período do dia (manhãs).',\n      'var32b': 'Número de vezes em que o aluno acessou o AVA por período do dia (tardes).',\n      'var32c': 'Número de vezes em que o aluno acessou o AVA por período do dia (fins de tardes).',\n      'var32d': 'Número de vezes em que o aluno acessou o AVA por período do dia (noites).',\n      'var33': 'Número de atividades/atribuições entregues por um aluno dentro do prazo.',\n      'var34': 'Número total de mensagens postadas pelo aluno nos fóruns.',\n      'var35': 'Número de respostas de um professor para perguntas do aluno em fóruns.',\n    },\n    chipSelected: 'overallView',\n  }\n\n  componentDidMount() {\n    this.props.indicatorInitFilter();\n    this.props.predictionInit();\n    this.props.getPhenomenon();\n    this.props.getCourses({ datasource: 'moodle' });\n  }\n\n  handleChange = (item, name) => {\n    this.props.setIndicator(name, item);\n    this.refreshFilters(name, item);\n  };\n\n  refreshFilters = (name, item) => {\n    // const { phenomenonSelected, courseSelected, subjectSelected, semesterSelected, periodSelected, studentSelected } = this.props.indicator;\n\n    if (name === 'courseSelected') {\n      this.props.setIndicator('subjectSelected', null);\n      this.props.setIndicator('semesterSelected', null);\n      this.props.setIndicator('studentSelected', null);\n      this.props.subjectSuccess([]);\n      this.props.semesterSuccess([]);\n      this.props.studentSuccess([]);\n\n      if (!item || !item.label || !item.value) {\n        return;\n      }\n\n      this.props.getSubjects({ courses: [item.value] });\n\n      // this.props.getSubjects({ courses: item.map(item => item.value) });\n    }\n\n    if (name === 'subjectSelected') {\n      this.props.setIndicator('semesterSelected', null);\n      this.props.setIndicator('studentSelected', null);\n      this.props.studentSuccess([]);\n      this.props.semesterSuccess([]);\n\n      const { courseSelected } = this.props.indicator;\n\n      let courses, subjects;\n\n      if ((!item || !item.label || !item.value)) {\n        return;\n      }\n\n      if (item && item.label && item.value) {\n        subjects = [item.value];\n\n        // subjects = item.map(item => item.value);\n      }\n\n      if (courseSelected && courseSelected.label && courseSelected.value) {\n        courses = [courseSelected.value];\n\n        // courses = courseSelected.map(item => item.value);\n      }\n\n      this.props.getSemesters({ \n        subjects,\n        courses\n      });\n\n      this.props.getStudents({ \n        subjects,\n        courses\n      });\n    }\n\n    if (name === 'semesterSelected') {\n      this.props.setIndicator('studentSelected', null);\n      this.props.studentSuccess([]);\n\n      const { courseSelected, subjectSelected } = this.props.indicator;\n\n      let courses, subjects, semesters;\n\n      if ((!item || !item.label || !item.value) && (!subjectSelected || !subjectSelected.label || !subjectSelected.value)) {\n        return;\n      } \n        \n      if (item && item.label && item.value) {\n        // semesters = item.map(item => item.value);\n        semesters = [item.value];\n      }\n\n      if (courseSelected && courseSelected.label && courseSelected.value) {\n        // courses = courseSelected.map(item => item.value);\n        courses = [courseSelected.value];\n      }\n\n      if (subjectSelected && subjectSelected.label && subjectSelected.value) {\n        // subjects = subjectSelected.map(item => item.value);\n        subjects = [subjectSelected.value];\n      }\n\n      // this.props.getPeriods({ \n      //   subjects,\n      //   semesters\n      // });\n\n      this.props.getStudents({\n        courses,\n        subjects,\n        semesters\n      })\n    }\n\n    // if (name === 'periodSelected') {\n    //   const { subjectSelected, semesterSelected } = this.props.indicator;\n\n    //   let subjects, semesters, periods;\n\n    //   if ((!item || !item.length) && (!subjectSelected || !subjectSelected.length) && (!semesterSelected && !semesterSelected.length)) {\n    //     this.props.studentSuccess([]);\n    //     return;\n    //   } \n        \n    //   if (item && item.length) {\n    //     periods = item.map(item => item.value);\n    //   }\n\n    //   if (subjectSelected && subjectSelected.length) {\n    //     subjects = subjectSelected.map(item => item.value);\n    //   }\n\n    //   if (semesterSelected && semesterSelected.length) {\n    //     semesters = semesterSelected.map(item => item.value);\n    //   }\n\n    //   this.props.getStudents({\n    //     subjects,\n    //     semesters,\n    //     periods\n    //   })\n    // }\n  };\n\n  renderWarningMsg = (msg) => {\n    this.props.add({\n      type: 'warning',\n      title: 'Atenção',\n      message: msg\n    });\n  }\n\n  onSubmit = () => {\n    let filter = {};\n    const { phenomenonSelected, courseSelected, subjectSelected, semesterSelected, periodSelected, studentSelected } = this.props.indicator;\n\n    if (!phenomenonSelected || !phenomenonSelected.label || !phenomenonSelected.value) {\n      this.renderWarningMsg('Selecione um fenômeno educacional.');\n      return;\n    } else if (!courseSelected || !courseSelected.label || !courseSelected.value) {\n      this.renderWarningMsg('Selecione um curso.');\n      return;\n    } else if (!subjectSelected || !subjectSelected.label || !subjectSelected.value) {\n      this.renderWarningMsg('Selecione uma disciplina.');\n      return;\n    } else if ((!semesterSelected || !semesterSelected.label || !semesterSelected.value)) {\n      this.renderWarningMsg('Selecione um semestre.');\n      return;\n    }\n\n    filter.phenomenon = phenomenonSelected.value;\n    \n    filter.courses = this.getValueFromSelect(courseSelected);\n    filter.subjects = this.getValueFromSelect(subjectSelected);\n    filter.semesters = this.getValueFromSelect(semesterSelected);\n    filter.periods = this.getValueFromSelect(periodSelected);\n    filter.students = this.getValueFromIsMultiSelect(studentSelected);\n\n    this.props.postPrediction(filter);\n\n    this.setState({ \n      tabValue: 0,\n      chipSelected: 'overallView',\n      variableOptions: null,\n      choosedVariable: null,\n      studentOptions: null,\n      choosedStudent: null,\n      predictionInfoText: null,\n    });\n  }\n\n  getValueFromSelect = item => {\n    if (!item || !item.value) {\n      return null;\n    }\n\n    return [item.value];\n  }\n\n  getValueFromIsMultiSelect = items => {\n    if (!items || !items.length) {\n      return null;\n    }\n\n    return items.map(item => item.value);\n  }\n\n\n  setChip = (value) => {\n    if (value === 'overallView') {\n      this.setState({\n        chipSelected: value\n      });\n    } else if (value === 'studentsView') {\n      const studentOptions = this.getStudentsDynamically();\n      const variableOptions = this.getVariablesDynamically();\n\n      const choosedStudent = studentOptions[0];\n      const choosedVariable = [variableOptions[0]];\n\n      this.setState({ \n        chipSelected: value,\n        studentOptions,\n        variableOptions,\n        choosedStudent,\n        choosedVariable,\n      });\n\n      this.handleStudentChange(choosedStudent);\n      this.handleVariableChange(choosedVariable, choosedStudent);\n    }\n  }\n\n  getStudentsDynamically = () => {\n    const { prediction } = this.props;\n\n    let studentOptions = [];\n\n    if (prediction && prediction.data && prediction.data.realData) {\n      prediction.data.realData.forEach(uniqueData => {\n        const studentOption = {\n          label: `${this.generateHashName(uniqueData['nome_do_aluno'])}`,\n          value: uniqueData['id_do_aluno'],\n        }\n  \n        studentOptions.push(studentOption);\n      });\n    }\n\n    return studentOptions;\n  }\n\n  getVariablesDynamically = () => {\n    const { prediction } = this.props;\n    const { mappedVariablesMeaning } = this.state;\n\n    let variableOptions = [\n      {\n      label: 'Todos',\n      value: 'Todos'\n      }\n    ];\n\n    if (prediction && prediction.data && prediction.data.realData) {\n      const variables = Object.keys(prediction.data.realData[0]);\n\n      variables.forEach(variable => {\n        if (variable !== 'nome_do_aluno' && variable !== 'id_do_aluno') {\n          const variableOption = {\n            label: `${variable} - ${mappedVariablesMeaning[variable]}` || variable,\n            value: variable,\n          }\n    \n          variableOptions.push(variableOption);\n        }\n      });\n    }\n\n    return variableOptions;\n  }\n\n  handleTabChange = (newValue) => {\n    if (newValue === 1) {\n      const studentOptions = this.getStudentsDynamically();\n      const variableOptions = this.getVariablesDynamically();\n\n      this.setState({ \n        tabValue: newValue,\n        studentOptions,\n        variableOptions\n      });\n    } else if (newValue === 0) {\n      this.setState({ tabValue: newValue });\n    }\n  };\n\n  handleDetailedChange = (event) => {\n    if (event) {\n      this.setState({ \n        choosedDetailed: event,\n        choosedStudent: null,\n        choosedVariable: null,\n        predictionInfoText: null,\n      });\n    }\n  }\n\n  handleStudentChange = (event) => {\n    if (event && (event.value || event.length)) {\n      const { \n        choosedVariable, choosedDetailed\n      } = this.state;\n      \n      if (choosedVariable) {\n        this.setState({\n          loadingChart: true,\n        });\n\n        if (choosedDetailed.value === 'byStudent') {\n          this.makeDetailedChartByStudent(event, 'changingStudent');\n        } else if (choosedDetailed.value === 'byVariable') {\n          this.makeDetailedChartByVariable(event, 'changingStudent');\n        }\n      } else {\n        this.setState({ \n          choosedStudent: event,\n          predictionInfoText: null,\n        });\n      }\n    } else {\n      this.setState({ \n        choosedStudent: event,\n        predictionInfoText: null,\n      });\n    }\n  }\n\n  handleVariableChange = (event, choosedStudentFromInit) => {\n    if (event && (event.value || event.length)) {\n      const { \n        choosedStudent, choosedDetailed\n      } = this.state;\n      \n      if (choosedStudent || (event && event.length && event[0].value === 'Todos' )) {\n        this.setState({\n          loadingChart: true,\n        });\n        \n        if (choosedDetailed.value === 'byStudent') {\n          this.makeDetailedChartByStudent(event, 'changingVariable', choosedStudentFromInit);\n        } else if (choosedDetailed.value === 'byVariable') {\n          this.makeDetailedChartByVariable(event, 'changingVariable');\n        }\n      } else {\n        this.setState({ \n          choosedVariable: event,\n          predictionInfoText: null,\n        });\n      }\n    } else {\n      this.setState({ \n        choosedVariable: null,\n      });\n    }\n  }\n\n  getDescriptiveAnalysisByStudentAndClass = (studentId) => {\n    const { prediction } = this.props;\n\n    let currentAssessments = prediction.data.assessmentVariables;\n\n    let availableGrades = [];\n    let availableForums = [];\n    let availableWebquests = [];\n    let studentGradeMean;\n    let studentFirstGrade;\n    let studentSecondGrade;\n    let studentForum;\n    let studentWebquest;\n\n    let webquestText;\n    let forumText;\n    let gradeText;\n\n    for (const currentAssessment of currentAssessments) {\n      if (currentAssessment['media_webquest'] > 0) {\n        availableWebquests.push(currentAssessment['media_webquest']);\n      } else if (currentAssessment['webquest01'] > 0) {\n        availableWebquests.push(currentAssessment['webquest01']);\n      } else {\n        availableWebquests.push(0);\n      }\n\n      if (currentAssessment['media_forum'] > 0) {\n        availableForums.push(currentAssessment['media_forum']);\n      } else if (currentAssessment['forum04'] > 0) {\n        const currentForumMean = ((currentAssessment['forum04'] + currentAssessment['forum03'] + currentAssessment['forum02'] + currentAssessment['forum01']) / 4).toFixed(2);\n        availableForums.push(currentForumMean);\n      } else if (currentAssessment['forum03'] > 0) {\n        const currentForumMean = ((currentAssessment['forum03'] + currentAssessment['forum02'] + currentAssessment['forum01']) / 3).toFixed(2);\n        availableForums.push(currentForumMean);\n      } else if (currentAssessment['forum02'] > 0) {\n        const currentForumMean = ((currentAssessment['forum02'] + currentAssessment['forum01']) / 2).toFixed(2);\n        availableForums.push(currentForumMean);\n      } else if (currentAssessment['forum01'] > 0) {\n        const currentForumMean = currentAssessment['forum01'].toFixed(2);\n        availableForums.push(currentForumMean);\n      } else {\n        availableForums.push(0);\n      }\n\n      if (currentAssessment['media_provas'] > 0) {\n        availableGrades.push(currentAssessment['media_provas']);\n      } else if (currentAssessment['primeira_prova'] > 0) {\n        availableGrades.push(currentAssessment['primeira_prova']);\n      } else {\n        availableGrades.push(0);\n      }\n\n      if (currentAssessment['id_do_aluno'] === studentId) {\n        studentForum = availableForums[availableForums.length - 1].toFixed(2);\n        studentWebquest = availableWebquests[availableWebquests.length - 1].toFixed(2);\n        studentGradeMean = availableGrades[availableGrades.length - 1].toFixed(2);\n        if (currentAssessment['media_provas'] > 0) {\n          studentFirstGrade = currentAssessment['primeira_prova'];\n          studentSecondGrade = currentAssessment['segunda_prova'];\n        }\n      }\n    }\n\n    let mappedMoreThenZeroWebquest = currentAssessments.filter(currentAssessment => currentAssessment['media_webquest'] > 0);\n    if (mappedMoreThenZeroWebquest.length) {\n      webquestText = 'Média dos webquests (atividade de pesquisa):';\n    } else {\n      mappedMoreThenZeroWebquest = currentAssessments.filter(currentAssessment => currentAssessment['webquest01'] > 0);\n      if (mappedMoreThenZeroWebquest.length) {\n        webquestText = 'Primeiro webquest (atividade de pesquisa):';\n      }\n    }\n\n    let mappedMoreThenZeroForum = currentAssessments.filter(currentAssessment => currentAssessment['media_forum'] > 0);\n    if (mappedMoreThenZeroForum.length) {\n      forumText = 'Média dos fóruns:';\n    } else {\n      mappedMoreThenZeroForum = currentAssessments.filter(currentAssessment => currentAssessment['forum04'] > 0);\n      if (mappedMoreThenZeroForum.length) {\n        forumText = 'Média de quatro fóruns:';\n      } else {\n        mappedMoreThenZeroForum = currentAssessments.filter(currentAssessment => currentAssessment['forum03'] > 0);\n        if (mappedMoreThenZeroForum.length) {\n          forumText = 'Média de três fóruns:';\n        } else {\n          mappedMoreThenZeroForum = currentAssessments.filter(currentAssessment => currentAssessment['forum02'] > 0);\n          if (mappedMoreThenZeroForum.length) {\n            forumText = 'Média de dois fóruns:';\n          } else {\n            mappedMoreThenZeroForum = currentAssessments.filter(currentAssessment => currentAssessment['forum01'] > 0);\n            if (mappedMoreThenZeroForum.length) {\n              forumText = 'Primeiro fórum:';\n            }\n          }\n        }\n      }\n    }\n\n    let mappedMoreThenZeroGrades = currentAssessments.filter(currentAssessment => currentAssessment['media_provas'] > 0);\n    if (mappedMoreThenZeroGrades.length) {\n      gradeText = 'Média das provas:';\n    } else {\n      mappedMoreThenZeroGrades = currentAssessments.filter(currentAssessment => currentAssessment['primeira_prova'] > 0);\n      if (mappedMoreThenZeroGrades.length) {\n        gradeText = 'Primeira prova:';\n      }\n    }\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n    const classGradeSum = availableGrades.reduce(reducer);\n    const classGradeAverage = (classGradeSum / availableGrades.length).toFixed(2);\n\n    const classWebquestSum = availableWebquests.reduce(reducer);\n    const classWebquestAverage = (classWebquestSum / availableWebquests.length).toFixed(2);\n\n    const classForumSum = availableForums.reduce(reducer);\n    const classForumAverage = (classForumSum / availableForums.length).toFixed(2);\n\n    const descriptiveAnalysisObject = {\n      studentFirstGrade,\n      studentSecondGrade,\n      studentGradeMean,\n      classGradeAverage,\n      studentWebquest,\n      classWebquestAverage,\n      studentForum,\n      classForumAverage,\n      webquestText,\n      forumText,\n      gradeText,\n    };\n\n    return descriptiveAnalysisObject;\n  }\n\n  makeDetailedChartByStudent = (choosedDontKnow, changingWhat, choosedStudentFromInit) => {\n    const { \n      choosedStudent, choosedVariable, mappedVariablesMeaning\n    } = this.state;\n\n    let updatedChoosedStudent;\n    let updatedChoosedVariables;\n    let predictionInfoText;\n    let studentPredictionResult;\n    let choosedStudentVariablesLabelAndValue;\n    let choosedClassMeanVariablesLabelAndValueList = [];\n\n    // Essa verificação é importantíssima, pois o estudante pode estar sendo modificado nesse exato momento, logo ele ainda não foi modificado no state.\n    if (changingWhat === 'changingStudent') {\n      updatedChoosedStudent = choosedDontKnow;\n      updatedChoosedVariables = choosedVariable;\n    } else {\n      updatedChoosedStudent = choosedStudent ? choosedStudent : choosedStudentFromInit;\n      updatedChoosedVariables = choosedDontKnow;\n    }\n\n    const { prediction } = this.props;\n\n    for (const [index, uniqueRealData] of prediction.data.realData.entries()) {\n      if (uniqueRealData.id_do_aluno === updatedChoosedStudent.value) {\n        choosedStudentVariablesLabelAndValue = Object.assign({}, uniqueRealData);\n        studentPredictionResult = prediction.data.predictedData[index];\n        predictionInfoText = studentPredictionResult === 0 ? 'Reprovado' : 'Aprovado';\n      } \n    }\n\n    for (const [index, uniqueRealData] of prediction.data.realData.entries()) {\n      if (uniqueRealData.id_do_aluno !== updatedChoosedStudent.value) {\n        const currentClassStudentVariablesLabelAndValue = Object.assign({}, uniqueRealData);\n        const currentStudentPredictionResult = prediction.data.predictedData[index];\n\n        if (currentStudentPredictionResult !== studentPredictionResult) {\n          choosedClassMeanVariablesLabelAndValueList.push(currentClassStudentVariablesLabelAndValue);\n        }\n      } \n    }\n\n    const title = predictionInfoText === 'Aprovado' ? 'Indicadores do Aluno x Médias dos Insatisfatórios' : 'Indicadores do Aluno x Médias dos Satisfatórios';\n\n    // const choosedStudentVariablesLabelAndValue = prediction.data.realData.find(uniqueRealData => uniqueRealData.id_do_aluno === updatedChoosedStudent.value);\n\n    let variableNames = Object.keys(choosedStudentVariablesLabelAndValue);\n    let variableValues = Object.values(choosedStudentVariablesLabelAndValue);\n\n    let xValueVariableNames = [];\n    let yValueVariableValuesStudent = [];\n    let yValueVariableValuesClassMean = [];\n    let textList = [];\n\n    if (updatedChoosedVariables[updatedChoosedVariables.length-1].value === 'Todos') {\n      let variableOptions = this.getVariablesDynamically();\n      variableOptions.shift();\n      updatedChoosedVariables = variableOptions;\n      if (changingWhat === 'changingVariable') {\n        choosedDontKnow = updatedChoosedVariables;\n      }\n    } else if (updatedChoosedVariables[0].value === 'Todos' && updatedChoosedVariables.length > 1) {\n      updatedChoosedVariables.shift();\n      if (changingWhat === 'changingVariable') {\n        choosedDontKnow = updatedChoosedVariables;\n      }\n    }\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n    for (const [index, variableName] of variableNames.entries()) {\n      const searchedVariableOption = updatedChoosedVariables.find(variableOption => variableOption.value === variableName);\n\n      if (searchedVariableOption) {\n        xValueVariableNames.push(variableName);\n        textList.push(mappedVariablesMeaning[variableName]);\n        yValueVariableValuesStudent.push(variableValues[index]);\n\n        const searchedVariableOptionFromClass = choosedClassMeanVariablesLabelAndValueList.map(studentInfo => studentInfo[variableName]);\n        \n        const classSearchedVariableSum = searchedVariableOptionFromClass.reduce(reducer);\n        const classSearchedVariableAverage = (classSearchedVariableSum / searchedVariableOptionFromClass.length).toFixed(2);\n\n        yValueVariableValuesClassMean.push(classSearchedVariableAverage);\n      }\n    }\n\n    const chartStudentInfo = {\n      x: xValueVariableNames,\n      y: yValueVariableValuesStudent,\n      type: 'bar',\n      text: textList,\n      name: 'Aluno',\n      // textposition: 'auto',\n      marker: {\n        color: 'rgb(74,81,115)'\n      }\n    };\n\n    const chartClassMeanInfo = {\n      x: xValueVariableNames,\n      y: yValueVariableValuesClassMean,\n      type: 'bar',\n      text: textList,\n      name: studentPredictionResult === 1 ? 'Insatisfatório' : 'Satisfatório',\n      // textposition: 'auto',\n      marker: {\n        color: studentPredictionResult === 1 ? '#f44336' : '#4caf50',\n      }\n    };\n\n    const detailedChartData = [chartStudentInfo, chartClassMeanInfo];\n\n    const detailedChartLayout = {\n      title,\n      width: 850, \n      height: 500,\n      // font:{\n      //   family: 'Raleway, sans-serif'  \n      // },\n      xaxis: {\n        title: 'Indicadores',\n      },\n      yaxis: {\n        title: 'Valor do Indicador',\n      },\n      font: {\n        family: 'Avenir, sans-serif',\n        size: 14,\n      },\n      barmode: 'group',\n      bargap: 0.15,\n      showlegend: true,\n      legend: {\n        x: 1,\n        xanchor: 'right',\n        y: 1\n      }\n    };\n\n    if (changingWhat === 'changingVariable') {\n      this.setState({ \n        detailedChartData,\n        detailedChartLayout,\n        choosedVariable: choosedDontKnow,\n        loadingChart: false,\n        predictionInfoText\n      });\n    } else if (changingWhat === 'changingStudent') {\n      this.setState({ \n        detailedChartData,\n        detailedChartLayout,\n        choosedStudent: choosedDontKnow,\n        loadingChart: false,\n        predictionInfoText\n      });\n    }\n  }\n\n  makeDetailedChartByVariable = (choosedDontKnow, changingWhat) => {\n    const { \n      choosedStudent, studentOptions, choosedVariable, variableOptions, mappedVariablesMeaning\n    } = this.state;\n\n    let updatedChoosedStudents;\n    let updatedChoosedVariable;\n    let choosedStudentsInfo = [];\n\n    // Essa verificação é importantíssima, pois a variável pode estar sendo modificada nesse exato momento, logo ela ainda não foi modificada no state.\n    if (changingWhat === 'changingStudent') {\n      updatedChoosedStudents = choosedDontKnow;\n      updatedChoosedVariable = choosedVariable;\n    } else {\n      updatedChoosedStudents = choosedStudent;\n      updatedChoosedVariable = choosedDontKnow;\n    }\n\n    const { prediction } = this.props;\n\n    for (const student of updatedChoosedStudents) {\n      for (const [index, uniqueRealData] of prediction.data.realData.entries()) {\n        if (uniqueRealData.id_do_aluno === student.value) {\n          let studentDataCopy = Object.assign({}, uniqueRealData);\n\n          const studentPredictionResult = prediction.data.predictedData[index];\n          studentDataCopy.binaryPrediction = studentPredictionResult;\n          choosedStudentsInfo.push(studentDataCopy);\n          \n          break;\n        }\n      }\n    }\n\n    const allVariableNames = Object.keys(choosedStudentsInfo[0]);\n\n    let xValueUniqueVariableName = allVariableNames.filter(variableName => variableName === updatedChoosedVariable.value);\n\n    let traces = [];\n\n    for (const choosedStudentInfo of choosedStudentsInfo) {\n      const studentVariableValue = choosedStudentInfo[xValueUniqueVariableName[0]];\n      let yValueStudentInfo = [studentVariableValue];\n\n      const trace = {\n        x: xValueUniqueVariableName,\n        y: yValueStudentInfo,\n        type: 'bar',\n        name: choosedStudentInfo.binaryPrediction === 0 ? 'Reprovado' : 'Aprovado',\n        text: choosedStudentInfo.nome_do_aluno,\n        textposition: 'auto',\n        // hoverinfo: 'none',\n        marker: {\n          color: choosedStudentInfo.binaryPrediction === 0 ? '#f44336' : '#4caf50',\n          line: {\n            color: 'rgb(8,48,107)',\n            width: 1.5\n          }\n        }\n      };\n\n      traces.push(trace);\n    }\n\n    const detailedChartData = traces;\n\n    const detailedChartLayout = {\n      title: 'Análise preditiva de desempenho dos alunos',\n      width: 1200, \n      height: 500,\n    };\n\n    const predictionInfoText = updatedChoosedVariable.value + ' - ' + updatedChoosedVariable.label;\n\n    if (changingWhat === 'changingVariable') {\n      this.setState({ \n        detailedChartData,\n        detailedChartLayout,\n        choosedVariable: choosedDontKnow,\n        loadingChart: false,\n        predictionInfoText,\n      });\n    } else if (changingWhat === 'changingStudent') {\n      this.setState({ \n        detailedChartData,\n        detailedChartLayout,\n        choosedStudent: choosedDontKnow,\n        loadingChart: false,\n        predictionInfoText,\n      });\n    }\n  }\n\n  // getRandomColor = () => {\n  //   const x = Math.floor(Math.random() * 256);\n  //   const y = Math.floor(Math.random() * 256);\n  //   const z = Math.floor(Math.random() * 256);\n  //   const bgColor = 'rgb(\" + x + \",\" + y + \",\" + z + \")';\n\n  //   return bgColor;\n  // }\n\n  // handleChartChange = (event, value) => {\n  //   if (event) {\n  //     this.setState({ \n  //       choosedChart: event,\n  //     });\n  //   }\n  // };\n\n  // getDetailedChartDynamically = (choosedChart) => {\n  //   const { prediction } = this.props;\n\n  //   if (choosedChart.value === 'bar') {\n  //     return this.getBarChartDataDynamic(prediction.data.predictedData);\n  //   } else if (choosedChart.value === 'pie') {\n  //     return this.getPieChartDataDynamic(prediction.data.predictedData);\n  //   }\n  // }\n\n  getChartDataDynamically = (chartType) => {\n    if (chartType === 'satisfactoryAndUnsatisfactory') {\n      return this.getSatisfactoryAndUnsatisfactoryChartDataDynamic();\n    } else if (chartType === 'allIndicatorsMean') {\n      return this.getAllIndicatorsMeanChartDataDynamic();\n    } else if (chartType === 'gradeAndForumAndWebquest') {\n      return this.getGradeAndForumAndWebquestChartDataDynamic();\n    }\n  }\n\n  getChartLayoutDynamically = (chartType) => {\n    if (chartType === 'satisfactoryAndUnsatisfactory') {\n      return this.getSatisfactoryAndUnsatisfactoryChartLayoutDynamic();\n    } else if (chartType === 'allIndicatorsMean') {\n      return this.getAllIndicatorsMeanChartLayoutDynamic();\n    }\n  }\n\n  getGradeAndForumAndWebquestChartDataDynamic = () => {\n    const { prediction } = this.props;\n\n    let currentAssessments = prediction.data.assessmentVariables;\n\n    let availableGrades = [];\n    let availableGradeSizes = [];\n    let availableGradeTexts = [];\n    let availableForums = [];\n    let availableWebquests = [];\n    let studentPredictionResults = [];\n\n    let satisfactoryWebquest = [];\n    let unsatisfactoryWebquest = [];\n    let satisfactoryForum = [];\n    let unsatisfactoryForum = [];\n    let satisfactoryGrade = [];\n    let unsatisfactoryGrade = [];\n\n    for (const [index, currentAssessment] of currentAssessments.entries()) {\n      const studentPredictionResult = prediction.data.predictedData[index];\n      \n      if (studentPredictionResult === 0) {\n        studentPredictionResults.push('#f44336');\n      } else if (studentPredictionResult === 1) {\n        studentPredictionResults.push('#4caf50');\n      }\n      \n      if (currentAssessment['media_webquest'] > 0) {\n        availableWebquests.push(currentAssessment['media_webquest']);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryWebquest.push(currentAssessment['media_webquest']);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryWebquest.push(currentAssessment['media_webquest']);\n        }\n      } else if (currentAssessment['webquest01'] > 0) {\n        availableWebquests.push(currentAssessment['webquest01']);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryWebquest.push(currentAssessment['webquest01']);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryWebquest.push(currentAssessment['webquest01']);\n        }\n      } else {\n        availableWebquests.push(0);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryWebquest.push(0);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryWebquest.push(0);\n        }\n      }\n\n      if (currentAssessment['media_forum'] > 0) {\n        availableForums.push(currentAssessment['media_forum']);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryForum.push(currentAssessment['media_forum']);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryForum.push(currentAssessment['media_forum']);\n        }\n      } else if (currentAssessment['forum04'] > 0) {\n        const currentForumMean = ((currentAssessment['forum04'] + currentAssessment['forum03'] + currentAssessment['forum02'] + currentAssessment['forum01']) / 4).toFixed(2);\n        availableForums.push(currentForumMean);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryForum.push(currentForumMean);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryForum.push(currentForumMean);\n        }\n      } else if (currentAssessment['forum03'] > 0) {\n        const currentForumMean = ((currentAssessment['forum03'] + currentAssessment['forum02'] + currentAssessment['forum01']) / 3).toFixed(2);\n        availableForums.push(currentForumMean);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryForum.push(currentForumMean);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryForum.push(currentForumMean);\n        }\n      } else if (currentAssessment['forum02'] > 0) {\n        const currentForumMean = ((currentAssessment['forum02'] + currentAssessment['forum01']) / 2).toFixed(2);\n        availableForums.push(currentForumMean);\n        \n        if (studentPredictionResult === 0) {\n          unsatisfactoryForum.push(currentForumMean);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryForum.push(currentForumMean);\n        }\n      } else if (currentAssessment['forum01'] > 0) {\n        const currentForumMean = currentAssessment['forum01'].toFixed(2);\n        availableForums.push(currentForumMean);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryForum.push(currentForumMean);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryForum.push(currentForumMean);\n        }\n      } else {\n        availableForums.push(0);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryForum.push(0);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryForum.push(0);\n        }\n      }\n\n      if (currentAssessment['media_provas'] > 0) {\n        availableGrades.push(currentAssessment['media_provas']);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryGrade.push(currentAssessment['media_provas']);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryGrade.push(currentAssessment['media_provas']);\n        }\n      } else if (currentAssessment['primeira_prova'] > 0) {\n        availableGrades.push(currentAssessment['primeira_prova']);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryGrade.push(currentAssessment['primeira_prova']);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryGrade.push(currentAssessment['primeira_prova']);\n        }\n      } else {\n        availableGrades.push(0);\n\n        if (studentPredictionResult === 0) {\n          unsatisfactoryGrade.push(0);\n        } else if (studentPredictionResult === 1) {\n          satisfactoryGrade.push(0);\n        }\n      }\n    }\n\n    const mappedMoreThenZeroWebquest = availableWebquests.filter(availableWebquest => availableWebquest > 0);\n    const mappedMoreThenZeroForum = availableForums.filter(availableForum => availableForum > 0);\n    const mappedMoreThenZeroGrades = availableGrades.filter(availableGrade => availableGrade > 0);\n\n    if (mappedMoreThenZeroWebquest.length && mappedMoreThenZeroForum.length && mappedMoreThenZeroGrades.length) {\n      availableGradeSizes = availableGrades.map(availableGrade => availableGrade * 10);\n\n      availableGradeTexts = availableGrades.map((availableGrade, index) => {\n        const currentStudentName = `${this.generateHashName(currentAssessments[index]['nome_do_aluno'])}`;\n        return `${currentStudentName}<br>Média das Provas: ${availableGrade}`;\n      });\n\n      const trace = {\n        x: availableForums,\n        y: availableWebquests,\n        text: availableGradeTexts,\n        mode: 'markers',\n        marker: {\n          color: studentPredictionResults,\n          size: availableGradeSizes\n        },\n      };\n      \n      const data = [trace];\n\n      const { config } = this.state;\n\n      // config.modeBarButtonsToAdd = [\n      //   {\n      //     name: 'Tip button',\n      //     icon: icon1,\n      //     click: function(gd) {\n      //       alert('Here comes the tip!');\n      //     }\n      //   },\n      // ];\n\n      return (\n        <Content style={{ backgroundColor: 'white', borderRadius: '5px', width: '100%' }}>\n          <Plot\n            data={\n              data\n            }\n            layout={\n              this.getGradeAndForumAndWebquestChartDataLayout()\n            }\n            config={\n              config\n            }\n            graphDiv='graph'\n          />\n        </Content>\n      )\n    } else if ((mappedMoreThenZeroWebquest.length && mappedMoreThenZeroForum.length) || (mappedMoreThenZeroWebquest.length && mappedMoreThenZeroGrades.length) || (mappedMoreThenZeroForum.length && mappedMoreThenZeroGrades.length)) {\n      let data;\n      let layout;\n      let titleX;\n      let titleY;\n\n      if (mappedMoreThenZeroWebquest.length && mappedMoreThenZeroForum.length) {\n        titleX = 'Média dos Fóruns';\n        titleY = 'Média dos Webquests (atividade de pesquisa)';\n        \n        const minXaxis = Math.min(...availableForums);\n        const maxXaxis =  Math.max(...availableForums);\n        const minYaxis =  Math.min(...availableWebquests);\n        const maxYaxis =  Math.max(...availableWebquests);\n\n        data = this.makeScatterChart(satisfactoryWebquest, unsatisfactoryWebquest, satisfactoryForum, unsatisfactoryForum);\n        layout = this.makeScatterLayout(titleX, minXaxis, maxXaxis, titleY, minYaxis, maxYaxis);\n      } else if (mappedMoreThenZeroWebquest.length && mappedMoreThenZeroGrades.length) {\n        titleX = 'Média das Provas';\n        titleY = 'Média dos Webquests (atividade de pesquisa)';\n\n        const minXaxis = Math.min(...availableGrades);\n        const maxXaxis =  Math.max(...availableGrades);\n        const minYaxis =  Math.min(...availableWebquests);\n        const maxYaxis =  Math.max(...availableWebquests);\n\n        data = this.makeScatterChart(satisfactoryWebquest, unsatisfactoryWebquest, satisfactoryGrade, unsatisfactoryGrade);\n        layout = this.makeScatterLayout(titleX, minXaxis, maxXaxis, titleY, minYaxis, maxYaxis);\n      } else if (mappedMoreThenZeroForum.length && mappedMoreThenZeroGrades.length) {\n        titleX = 'Média dos Fóruns';\n        titleY = 'Média das Provas';\n\n        const minXaxis = Math.min(...availableForums);\n        const maxXaxis =  Math.max(...availableForums);\n        const minYaxis =  Math.min(...availableGrades);\n        const maxYaxis =  Math.max(...availableGrades);\n\n        data = this.makeScatterChart(satisfactoryGrade, unsatisfactoryGrade, satisfactoryForum, unsatisfactoryForum);\n        layout = this.makeScatterLayout(titleX, minXaxis, maxXaxis, titleY, minYaxis, maxYaxis);\n      }\n      \n      const { config } = this.state;\n\n      return (\n        <Content style={{ backgroundColor: 'white', borderRadius: '5px', width: '100%', textAlign: 'center' }}>\n          <Plot\n            data={\n              data\n            }\n            layout={\n              layout\n            }\n            config={\n              config\n            }\n            graphDiv='graph'\n          />\n        </Content>\n      )\n    } else if (mappedMoreThenZeroWebquest.length || mappedMoreThenZeroForum.length || mappedMoreThenZeroGrades.length) {\n      let data;\n      let layout;\n      let titleX;\n      let titleY;\n\n      if (mappedMoreThenZeroWebquest.length) {\n        titleX = 'Alunos';\n        titleY = 'Média dos Webquests (atividade de pesquisa)';\n\n        data = this.makeHistogramChart(satisfactoryWebquest, unsatisfactoryWebquest);\n        layout = this.makeHistogramLayout(titleX, titleY);\n      } else if (mappedMoreThenZeroGrades.length) {\n        titleX = 'Alunos';\n        titleY = 'Média das Provas';\n\n        data = this.makeHistogramChart(satisfactoryGrade, unsatisfactoryGrade);\n        layout = this.makeHistogramLayout(titleX, titleY);\n      } else if (mappedMoreThenZeroForum.length) {\n        titleX = 'Alunos';\n        titleY = 'Média dos Fóruns';\n\n        data = this.makeHistogramChart(satisfactoryForum, unsatisfactoryForum);\n        layout = this.makeHistogramLayout(titleX, titleY);\n      }\n      \n      const { config } = this.state;\n\n      return (\n        <Content style={{ backgroundColor: 'white', borderRadius: '5px', width: '100%', textAlign: 'center' }}>\n          <Plot\n            data={\n              data\n            }\n            layout={\n              layout\n            }\n            config={\n              config\n            }\n            graphDiv='graph'\n          />\n        </Content>\n      )\n    } else {\n      return;\n    }\n  }\n\n  makeHistogramChart = (satisfactoryIndicator, unsatisfactoryIndicator) => {\n    const firstTrace = {\n      y: satisfactoryIndicator,\n      type: 'box',\n      name: 'Satisfatório',\n      opacity: 0.5,\n      marker: {\n        color: '#4caf50',\n      },\n    };\n\n    const secondTrace = {\n      y: unsatisfactoryIndicator,\n      type: 'box',\n      name: 'Insatisfatório',\n      opacity: 0.6,\n      marker: {\n        color: '#f44336',\n      },\n    };\n\n    const data = [firstTrace, secondTrace];\n\n    return data;\n  }\n\n  makeHistogramLayout = (titleX, titleY) => {\n    const layout = {\n      width: 1300, \n      height: 600,\n      autosize: true,\n      xaxis: {\n        title: titleX,\n      },\n      yaxis: {\n        title: titleY,\n      },\n      title: 'Situação atual dos alunos',\n      font: {\n        family: 'Avenir, sans-serif',\n        size: 14,\n      },\n    };\n\n    return layout;\n  }\n\n  makeScatterChart = (satisfactoryY, unsatisfactoryY, satisfactoryX, unsatisfactoryX) => {\n    const satisfactoryTrace = {\n      x: satisfactoryX,\n      y: satisfactoryY,\n      mode: 'markers',\n      type: 'scatter',\n      name: 'Satisfatório',\n      // text: ['A-1', 'A-2', 'A-3', 'A-4', 'A-5'],\n      marker: { \n        size: 12,\n        color: '#4caf50',\n      },\n    };\n    \n    const unsatisfactoryTrace = {\n      x: unsatisfactoryX,\n      y: unsatisfactoryY,\n      mode: 'markers',\n      type: 'scatter',\n      name: 'Insatisfatório',\n      // text: ['B-a', 'B-b', 'B-c', 'B-d', 'B-e'],\n      marker: { \n        size: 12,\n        color: '#f44336',\n      },\n    };\n    \n    const data = [satisfactoryTrace, unsatisfactoryTrace];\n\n    return data;\n  }\n\n  makeScatterLayout = (titleX, minXaxis, maxXaxis, titleY, minYaxis, maxYaxis) => {\n    const layout = {\n      width: 1300, \n      height: 600,\n      autosize: true,\n      xaxis: {\n        title: titleX,\n        range: [minXaxis-0.2, maxXaxis+0.2],\n      },\n      yaxis: {\n        title: titleY,\n        range: [minYaxis-0.2, maxYaxis+0.2],\n      },\n      title: 'Situação atual dos alunos',\n      font: {\n        family: 'Avenir, sans-serif',\n        size: 14,\n      },\n    };\n\n    return layout;\n  }\n\n  getGradeAndForumAndWebquestChartDataLayout = () => {\n    const bubbleChartLayoutDinamic = {\n      title: 'Situação atual dos alunos',\n      autosize: true,\n      // showlegend: false,\n      width: 1300, \n      height: 600,\n      font: {\n        family: 'Avenir, sans-serif',\n        size: 14,\n      },\n      xaxis: {\n        title: 'Média dos Fóruns',\n      },\n      yaxis: {\n        title: 'Média dos Webquests (atividade de pesquisa)',\n      },\n    };\n\n    return bubbleChartLayoutDinamic;\n  }\n\n  getAllIndicatorsMeanChartDataDynamic = () => {\n    const { prediction } = this.props;\n\n    let indicators = prediction.data.indicators;\n\n    let indicatorSatisfactoryMeans = [];\n    let indicatorUnsatisfactoryMeans = [];\n\n    for (const indicator of indicators) {\n      let indicatorValueSatisfactorySum = 0;\n      let satisfactoryCount = 0;\n      let indicatorValueUnsatisfactorySum = 0;\n      let unsatisfactoryCount = 0;\n\n      for (const [index, uniqueRealData] of prediction.data.realData.entries()) {\n        const choosedStudentVariablesLabelAndValue = Object.assign({}, uniqueRealData);\n        \n        const studentPredictionResult = prediction.data.predictedData[index];\n        if (studentPredictionResult === 0) {\n          indicatorValueUnsatisfactorySum += choosedStudentVariablesLabelAndValue[indicator];\n          unsatisfactoryCount += 1;\n        } else {\n          indicatorValueSatisfactorySum += choosedStudentVariablesLabelAndValue[indicator];\n          satisfactoryCount += 1;\n        }\n      }\n\n      const indicatorSatisfactoryMean = satisfactoryCount > 0 ? (indicatorValueSatisfactorySum / satisfactoryCount).toFixed(2) : 0;\n      indicatorSatisfactoryMeans.push(indicatorSatisfactoryMean);\n\n      const indicatorUnatisfactoryMean = unsatisfactoryCount > 0 ? (indicatorValueUnsatisfactorySum / unsatisfactoryCount).toFixed(2) : 0;\n      indicatorUnsatisfactoryMeans.push(indicatorUnatisfactoryMean);\n    }\n\n    const traceSatisfactory = {\n      type: 'bar',\n      x: indicatorSatisfactoryMeans,\n      y: indicators,\n      name: 'Satisfatório',\n      marker: {\n        color: '#4caf50',\n        width: 1.5\n      },\n      orientation: 'h',\n    };\n\n    const traceUnsatisfactory = {\n      type: 'bar',\n      x: indicatorUnsatisfactoryMeans,\n      y: indicators,\n      name: 'Insatisfatório',\n      marker: {\n        color: '#f44336',\n        width: 1.5\n      },\n      orientation: 'h',\n    };\n\n    return [traceSatisfactory, traceUnsatisfactory];\n  }\n\n  getAllIndicatorsMeanChartLayoutDynamic = () => {\n    const barChartLayoutDynamic = {\n      title: 'Média dos indicadores dos alunos',\n      autosize: false,\n      width: 640, \n      height: 400,\n      yaxis: {\n        automargin: true,\n      },\n      font: {\n        family: 'Avenir, sans-serif',\n        size: 14,\n      },\n      barmode: 'stack',\n    };\n\n    return barChartLayoutDynamic;\n  }\n\n  getSatisfactoryAndUnsatisfactoryChartDataDynamic = () => {\n    const { prediction } = this.props;\n\n    let countZeros = prediction.data.countDisapproved;\n    let countOnes = prediction.data.countApproved;\n\n    const barChartDataDynamic = {\n      x: ['Satisfatório', 'Insatisfatório'],\n      y: [countOnes, countZeros],\n      width: 0.5,\n      marker:{\n        color: ['#4caf50', '#f44336'],\n      },\n      type: 'bar'\n    };\n\n    return [barChartDataDynamic];\n  }\n\n  getSatisfactoryAndUnsatisfactoryChartLayoutDynamic = () => {\n    const barChartLayoutDynamic = {\n      title: 'Análise preditiva de desempenho dos alunos',\n      autosize: false,\n      width: 640, \n      height: 400,\n      yaxis: {\n        automargin: true,\n      },\n      font: {\n        family: 'Avenir, sans-serif',\n        size: 14,  \n      },\n    };\n\n    return barChartLayoutDynamic;\n  }\n\n  getPieChartDataDynamic = (predictionResult) => {\n    let countZeros = 0;\n    let countOnes = 0;\n\n    predictionResult.forEach(binaryResult => {\n      if (binaryResult === 0) {\n        countZeros++;\n      } else {\n        countOnes++;\n      }\n    });\n\n    const pieChartDataDynamic = {\n      values: [countOnes, countZeros],\n      labels: ['Satisfatório', 'Insatisfatório'],\n      marker:{\n        colors: ['#4caf50', '#f44336'],\n      },\n      type: 'pie',\n    };\n\n    return pieChartDataDynamic;\n  }\n\n  getPieChartLayoutDynamic = () => {\n    const pieChartLayoutDynamic = {\n      title: 'Análise preditiva de desempenho dos alunos',\n      width: 800, \n      height: 500,\n      font:{\n        family: 'Avenir, sans-serif'  \n      },\n    };\n\n    return pieChartLayoutDynamic;\n  }\n\n  renderIndicatorsMeaningTable = () => {\n    const { prediction: { data: { indicators } } } = this.props;\n\n    const { mappedVariablesMeaning } = this.state;\n\n    return (\n      <Table \n        // stickyHeader \n        aria-label=\"Indicators meaning table\" \n        size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ fontFamily: 'Avenir, sans-serif', fontWeight: 'bold' }}>Indicador</TableCell>\n            <TableCell style={{ fontFamily: 'Avenir, sans-serif', fontWeight: 'bold' }}>Significado</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {indicators.map((indicator) => (\n            <TableRow key={indicator}>\n              <TableCell component=\"th\" scope=\"row\"  style={{ fontFamily: 'Avenir, sans-serif' }}>\n                {indicator}\n              </TableCell>\n              <TableCell  style={{ fontFamily: 'Avenir, sans-serif' }}>{mappedVariablesMeaning[indicator]}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n\n  renderStudentCards= (choosedStudent, predictionInfoText) => {\n    const { prediction } = this.props;\n\n    let countZeros = prediction.data.countDisapproved;\n    let countOnes = prediction.data.countApproved;\n\n    const { \n      choosedVariable,\n    } = this.state;\n\n    const descriptiveAnalysisObject = this.getDescriptiveAnalysisByStudentAndClass(choosedStudent.value);\n\n    const {\n      studentFirstGrade,\n      studentSecondGrade,\n      studentGradeMean,\n      classGradeAverage,\n      studentWebquest,\n      classWebquestAverage,\n      studentForum,\n      classForumAverage,\n      webquestText,\n      forumText,\n      gradeText,\n    } = descriptiveAnalysisObject;\n\n    return (\n      <CardContainer style={{ display: 'flex', flexDirection: choosedVariable && choosedVariable.length ? 'column' : null, width: choosedVariable && choosedVariable.length ? '30%' : '100%', justifyContent: choosedVariable && choosedVariable.length ? null : 'space-around', margin: '0 10px' }}>\n        <Card variant=\"outlined\" style={{ minWidth: '320px', marginBottom: '10px' }}>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ color: 'white', fontFamily: 'Avenir, sans-serif', backgroundColor: 'rgb(74, 81, 115, 0.9)', minHeight: '50px', justifyContent: 'center', display: 'flex' }}>\n            <span style={{ alignSelf: 'center' }}>Análise Preditiva</span>\n          </Typography>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: '#4caf50', fontFamily: 'Avenir, sans-serif' }}>\n              Desempenho satisfatório\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#4caf50', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n              {predictionInfoText === 'Aprovado' ?\n                <span><strong>{choosedStudent.label}</strong> + {countOnes-1} alunos</span>\n              : <span>{countOnes} alunos</span>\n              }\n            </Typography>\n            <hr style={{ margin: '10px 0 5px' }}></hr>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: '#f44336', fontFamily: 'Avenir, sans-serif' }}>\n              Desempenho insatisfatório\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: '#f44336', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n              {predictionInfoText === 'Reprovado' ?\n                <span><strong>{choosedStudent.label}</strong> + {countZeros-1} alunos</span>\n              : <span>{countZeros} alunos</span>\n              }\n            </Typography>\n          </CardContent>\n        </Card>\n        <Card variant=\"outlined\" style={{ minWidth: '320px', marginBottom: '10px' }}>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ color: 'white', fontFamily: 'Avenir, sans-serif', backgroundColor: 'rgb(74, 81, 115, 0.9)', minHeight: '50px', justifyContent: 'center', display: 'flex', padding: '10px' }}>\n            <span style={{ alignSelf: 'center' }}>Análise Descritiva do Aluno</span>\n          </Typography>\n          {gradeText || webquestText || forumText ?\n          <CardContent>\n            <div style={{ border: '5px aliceblue', borderStyle: 'outset', borderRadius: '10px', padding: '5px' }}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif' }}>\n                Avaliações do aluno\n              </Typography>\n              { gradeText && gradeText === 'Média das provas:' && (studentFirstGrade || studentSecondGrade) ?\n              <div>\n                { studentFirstGrade ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n                  <span>Primeira prova: {studentFirstGrade}</span>\n                </Typography>  : null }\n                { studentSecondGrade ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n                  <span>Segunda prova: {studentSecondGrade}</span>\n                </Typography>  : null }\n              </div>\n              : null }\n              { gradeText ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n                <span>{gradeText} {studentGradeMean}</span>\n              </Typography> : null }\n              { webquestText ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n                <span>{webquestText} {studentWebquest}</span>\n              </Typography> : null }\n              { forumText ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n                <span>{forumText} {studentForum}</span>\n              </Typography> : null }\n            </div>\n          </CardContent>\n          : \n          <div style={{ padding: '5px' }}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif' }}>\n              O aluno não possui avaliações\n            </Typography>\n          </div>\n          }\n        </Card>\n        <Card variant=\"outlined\" style={{ minWidth: '320px' }}>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ color: 'white', fontFamily: 'Avenir, sans-serif', backgroundColor: 'rgb(74, 81, 115, 0.9)', minHeight: '50px', justifyContent: 'center', display: 'flex', padding: '10px' }}>\n            <span style={{ alignSelf: 'center' }}>Análise Descritiva da Turma</span>\n          </Typography>\n          {gradeText || webquestText || forumText ?\n          <CardContent>\n            <div style={{ border: '5px aliceblue', borderStyle: 'outset', borderRadius: '10px', padding: '5px' }}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif' }}>\n                Média da turma\n              </Typography>\n              { gradeText ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n                <span>{gradeText} {classGradeAverage}</span>\n              </Typography> : null }\n              { webquestText ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n                <span>{webquestText} {classWebquestAverage}</span>\n              </Typography> : null }\n              { forumText ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif', fontSize: '15px' }}>\n                <span>{forumText} {classForumAverage}</span>\n              </Typography> : null }\n            </div>\n          </CardContent>\n          : \n          <div style={{ padding: '5px' }}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: 'black', fontFamily: 'Avenir, sans-serif' }}>\n              A turma não possui avaliações\n            </Typography>\n          </div>\n          }\n        </Card>\n      </CardContainer>\n    )\n  } \n\n  generateHashName = (studentName) => {\n    const hashedName = md5(studentName);\n    return hashedName;\n  }\n\n  render() {\n    const { course, subject, semester, phenomenon, prediction, period, student } = this.props;\n    const { courseSelected, subjectSelected, semesterSelected, phenomenonSelected, periodSelected, studentSelected,  } = this.props.indicator;\n    const { \n      config, tabValue, chartOptions, choosedChart, studentOptions, choosedStudent, variableOptions, choosedVariable, detailedOptions, choosedDetailed, detailedChartData, detailedChartLayout, loadingChart, predictionInfoText, chipSelected,\n    } = this.state;\n\n    const availableStudents = [];\n\n    if (student && student.data && student.data.length) {\n      for (const uniqueStudent of student.data) {\n        const hashedName = this.generateHashName(uniqueStudent.label);\n\n        availableStudents.push({\n          label: hashedName,\n          value: uniqueStudent.value,\n        });\n      }\n    }\n\n    return (\n        <MainContainer>\n          <AsideContainer>\n            <LeftContent>\n              <Header>\n                <h1>Filtros</h1>\n              </Header>\n\n              {/* <SelectText>Fenômenos Educacionais</SelectText> */}\n              <SelectText>Modelos Treinados</SelectText>\n              <SelectContainer>\n                <Select\n                  isClearable\n                  value={phenomenonSelected}\n                  noOptionsMessage={() => 'Sem dados'}\n                  onChange={(e) => this.handleChange(e, 'phenomenonSelected')}\n                  placeholder={'Selecione os Fenômenos'}\n                  styles={selectStyle}\n                  options={phenomenon.data.asMutable()} />\n              </SelectContainer>\n\n              <SelectText>Cursos</SelectText>\n              <SelectContainer>\n                <Select\n                  isClearable\n                  value={courseSelected}\n                  noOptionsMessage={() => 'Sem dados'}\n                  onChange={(e) => this.handleChange(e, 'courseSelected')}\n                  placeholder={'Selecione os Cursos'}\n                  styles={selectStyle}\n                  options={course.data.asMutable()} />\n              </SelectContainer>\n\n\n              <SelectText>Disciplinas</SelectText>\n              <SelectContainer>\n                <Select\n                  isClearable\n                  noOptionsMessage={() => 'Sem dados'}\n                  value={subjectSelected}\n                  onChange={(e) => this.handleChange(e, 'subjectSelected')}\n                  placeholder={'Selecione as Disciplinas'}\n                  styles={selectStyle}\n                  options={subject.data.asMutable()} />\n              </SelectContainer>\n\n              <SelectText>Semestres</SelectText>\n              <SelectContainer>\n                <Select\n                  isClearable\n                  value={semesterSelected}\n                  noOptionsMessage={() => 'Sem dados'}\n                  onChange={(e) => this.handleChange(e, 'semesterSelected')}\n                  placeholder={'Selecione as Turmas'}\n                  styles={selectStyle}\n                  options={semester.data.asMutable()} />\n              </SelectContainer>\n\n              {/* <SelectText>Períodos</SelectText>\n              <SelectContainer>\n                <Select\n                  isMulti\n                  isClearable\n                  value={periodSelected}\n                  noOptionsMessage={() => 'Sem dados'}\n                  onChange={(e) => this.handleChange(e, 'periodSelected')}\n                  placeholder={'Selecione os Períodos'}\n                  styles={selectStyle}\n                  options={period.data.asMutable()} />\n              </SelectContainer> */}\n\n              <SelectText>Alunos</SelectText>\n              <SelectContainer>\n                <Select\n                  isMulti\n                  isClearable\n                  value={studentSelected}\n                  noOptionsMessage={() => 'Sem dados'}\n                  onChange={(e) => this.handleChange(e, 'studentSelected')}\n                  placeholder={'Selecione os Alunos'}\n                  styles={selectStyle}\n                  options={availableStudents} />\n              </SelectContainer>\n\n              <Button onClick={this.onSubmit.bind(this)}>Gerar Análise</Button>\n\n            </LeftContent>\n          </AsideContainer>\n\n          {prediction.data ?\n          <PerfectScrollbar style={{ width: '100%', background: '#eaeff1'}}>\n            <DashboardMainContainer>\n              <div>\n                <FullContainer>\n                  <Header style={{ padding: '10px 10px 0px' }}>\n                    <MonitorIcon size={22} color={'#4A5173'} />\n                    <h1 style={{ padding: '0px 0px 0px 12px', color: '#4A5173' }}>Learning Analytics Dashboard</h1>\n                    {/* <div style={{ position: 'absolute', right: '0', marginTop: '6px' }}>\n                      <Item\n                        onClick={this.setChip.bind(this, 'overallView')}>\n                        <InfoIcon size={22} color={'white'} />\n                      </Item>\n                    </div> */}\n                  </Header>\n                </FullContainer>\n\n                <FullContainer style={{ boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.1)' }}>\n                  <Header>\n                    <div style={{ display: 'flex', paddingLeft: '10px' }}>\n                      <div>\n                        <Tooltip \n                          title=\"Veja o resumo das principais informações da análise gerada\"\n                          arrow\n                          classes={{ tooltip: { fontSize: '15px' } }}>\n                          <ChipContainer>\n                            <Chip\n                              label='Visão Geral'\n                              className={chipSelected === 'overallView' ? 'active-chip' : 'inactive-chip'}\n                              onClick={this.setChip.bind(this, 'overallView')}\n                            />\n                          </ChipContainer>\n                        </Tooltip>\n                      </div>\n                      <div style={{ paddingLeft: '.5vw' }}>\n                        <Tooltip \n                          title=\"Veja os detalhes da situação de cada aluno\"\n                          arrow>\n                          <ChipContainer>\n                            <Chip\n                              label='Alunos'\n                              className={chipSelected === 'studentsView' ? 'active-chip' : 'inactive-chip'}\n                              variant=\"outlined\"\n                              onClick={this.setChip.bind(this, 'studentsView')}\n                            />\n                          </ChipContainer>\n                        </Tooltip>\n                      </div>\n                      {/* <div style={{ paddingLeft: '.5vw' }}>\n                        <Tooltip title=\"Veja as informações dos indicadores dos alunos no AVA\" arrow>\n                        <ChipContainer>\n                          <Chip\n                            label='Indicadores'\n                            className={chipSelected === 'indicatorsView' ? 'active-chip' : 'inactive-chip'}\n                            onClick={this.setChip.bind(this, 'indicatorsView')}\n                          />\n                        </ChipContainer>\n                        </Tooltip>\n                      </div> */}\n                    </div>\n                  </Header>\n                </FullContainer>\n                {chipSelected === 'studentsView' ? \n                <div>\n                  <FullContainer>\n                    <div style={{ width: '25%', margin: '5px 10px' }}>\n                      <SelectText style={{ color: '#4A5173',  fontFamily: 'Avenir, sans-serif', fontSize: '14px' }}>Aluno</SelectText>\n                      <SelectContainer style={{ paddingBottom: '0px' }}>\n                        <Select\n                          value={choosedStudent}\n                          onChange={this.handleStudentChange}\n                          placeholder={'Selecione o aluno'}\n                          styles={selectStyle}\n                          options={studentOptions} />\n                      </SelectContainer>\n                    </div>\n                    <div style={{ width: '75%', margin: '5px 10px' }}>\n                      <SelectText style={{ color: '#4A5173',  fontFamily: 'Avenir, sans-serif', fontSize: '14px' }}>Indicadores</SelectText>\n                      <SelectContainer style={{ paddingBottom: '0px' }}>\n                        <Select\n                          isMulti\n                          value={choosedVariable}\n                          onChange={this.handleVariableChange}\n                          placeholder={'Selecione os indicadores'}\n                          styles={selectStyle}\n                          options={variableOptions} />\n                      </SelectContainer>\n                    </div>\n                  </FullContainer>\n                </div> : null}\n              </div>\n\n              {chipSelected === 'overallView' ? \n              <div>\n                <FullContainer>\n                  <HalfContent style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <Alert variant=\"filled\" severity=\"success\" style={{ textAlign: 'center' }}>\n                      <AlertTitle>\n                        <span style={{ fontStyle: 'normal', fontWeight: 'bold', fontFamily: 'Avenir, sans-serif' }}>\n                          Desempenho Satisfatório\n                        </span>\n                      </AlertTitle>\n                      <div style={{ fontStyle: 'normal', fontSize: '30px', fontWeight: 'bold', fontFamily: 'Avenir, sans-serif', marginTop: '12%' }}>\n                        {prediction.data.percentageApproved} %\n                      </div>\n                    </Alert>\n\n                    <Alert variant=\"filled\" severity=\"error\" style={{ textAlign: 'center' }}>\n                      <AlertTitle>\n                        <span style={{ fontStyle: 'normal', fontWeight: 'bold', fontFamily: 'Avenir, sans-serif' }}>\n                          Desempenho Insatisfatório\n                        </span>\n                      </AlertTitle>\n                      <div style={{ fontStyle: 'normal', fontSize: '30px', fontWeight: 'bold', fontFamily: 'Avenir, sans-serif', marginTop: '12%' }}>\n                        {prediction.data.percentageDisapproved} %\n                      </div>\n                    </Alert>\n                  </HalfContent>\n\n                  <HalfContent>\n                    <TableContainer component={Paper} style={{ maxHeight: '135px', borderRadius: '5px' }}>\n                      {this.renderIndicatorsMeaningTable()}\n                    </TableContainer>\n                  </HalfContent>\n                </FullContainer>\n\n                <FullContainer style={{ textAlign: 'center' }}>\n                  <HalfContent style={{ backgroundColor: 'white', borderRadius: '5px' }}>\n                    <Plot\n                      data={\n                        this.getChartDataDynamically('satisfactoryAndUnsatisfactory')\n                      }\n                      layout={\n                        this.getChartLayoutDynamically('satisfactoryAndUnsatisfactory')\n                      }\n                      config={\n                        config\n                      }\n                      graphDiv='graph'\n                    />\n                  </HalfContent>\n\n                  <HalfContent style={{ backgroundColor: 'white', borderRadius: '5px' }}>\n                    <Plot\n                      data={\n                        this.getChartDataDynamically('allIndicatorsMean')\n                      }\n                      layout={\n                        this.getChartLayoutDynamically('allIndicatorsMean')\n                      }\n                      config={\n                        config\n                      }\n                      graphDiv='graph'\n                    />\n                  </HalfContent>\n                </FullContainer>\n\n                <FullContainer style={{ textAlign: 'center' }}>\n                  {this.getChartDataDynamically('gradeAndForumAndWebquest')}\n                </FullContainer>\n              </div> : null}\n\n              {chipSelected === 'studentsView' ? \n              <div style={{ width: '100%', display: 'flex', padding: '10px' }}>\n                {choosedStudent && choosedVariable && !loadingChart ?\n                <div style={{ width: '70%',  margin: '0 10px', textAlign: 'center', background: 'white' }}>\n                  <Plot\n                    data={\n                      detailedChartData\n                    }\n                    layout={\n                      detailedChartLayout\n                    }\n                    config={config}\n                    graphDiv=\"graph\"\n                  />\n                </div>\n                : null }\n                {this.renderStudentCards(choosedStudent, predictionInfoText)}\n              </div>\n              : null}\n\n              {/* {chipSelected === 'indicatorsView' ? \n              <div>\n                <FullContainer>\n                  <HalfContent style={{ backgroundColor: 'white', borderRadius: '5px' }}>\n                    <Plot\n                      data={\n                        this.getChartDataDynamically('satisfactoryAndUnsatisfactory')\n                      }\n                      layout={\n                        this.getChartLayoutDynamically('satisfactoryAndUnsatisfactory')\n                      }\n                      config={\n                        config\n                      }\n                      graphDiv='graph'\n                    />\n                  </HalfContent>\n\n                  <HalfContent style={{ backgroundColor: 'white', borderRadius: '5px' }}>\n                    <Plot\n                      data={\n                        this.getChartDataDynamically('satisfactoryAndUnsatisfactory')\n                      }\n                      layout={\n                        this.getChartLayoutDynamically('satisfactoryAndUnsatisfactory')\n                      }\n                      config={\n                        config\n                      }\n                      graphDiv='graph'\n                    />\n                  </HalfContent>\n                </FullContainer>\n              </div> : null} */}\n\n              {/* <Content>\n                {prediction.data ?\n                <GraphContainer>\n                  <FlexItem>\n                    <SelectText>Gráfico</SelectText>\n                      <SelectContainer>\n                        <Select\n                          value={choosedChart}\n                          onChange={this.handleChartChange}\n                          placeholder={'Selecione o tipo do gráfico'}\n                          styles={selectStyle}\n                          options={chartOptions} />\n                      </SelectContainer>\n\n                      <Plot\n                        data={[\n                          this.getChartDataDynamically()\n                        ]}\n                        layout={\n                          this.getChartLayoutDynamically()\n                        }\n                        config={config}\n                        graphDiv=\"graph\"\n                      />\n                  </FlexItem>\n                </GraphContainer>\n                : null}\n              </Content> */}\n\n              {/* <Content>\n                {prediction.data ?\n                  <TabsContainer>\n                    <Tabs\n                      value={tabValue}\n                      indicatorColor=\"primary\"\n                      textColor=\"primary\"\n                      onChange={this.handleTabChange}\n                      centered\n                    >\n                      <Tab label=\"Geral\" />\n                      <Tab label=\"Detalhado\" />\n                    </Tabs>\n\n                    {tabValue === 0 ?\n                      <GraphContainer>\n                        <FlexItem>\n                          <SelectText>Gráfico</SelectText>\n                            <SelectContainer>\n                              <Select\n                                value={choosedChart}\n                                onChange={this.handleChartChange}\n                                placeholder={'Selecione o tipo do gráfico'}\n                                styles={selectStyle}\n                                options={chartOptions} />\n                            </SelectContainer>\n\n                            <Plot\n                              data={[\n                                this.getChartDataDynamically()\n                              ]}\n                              layout={\n                                this.getChartLayoutDynamically()\n                              }\n                              config={config}\n                              graphDiv=\"graph\"\n                            />\n                        </FlexItem>\n                      </GraphContainer>\n                    : null}\n\n                    {tabValue === 1 ?\n                      <FlexInside>\n                        <LeftContentInside>\n                          <SelectText>Detalhar por</SelectText>\n                          <SelectContainer>\n                            <Select\n                              value={choosedDetailed}\n                              onChange={this.handleDetailedChange}\n                              styles={selectStyle}\n                              options={detailedOptions} />\n                          </SelectContainer>\n\n                          {choosedDetailed.value === 'byStudent' ?\n                            <div>\n                              <SelectText>Aluno</SelectText>\n                              <SelectContainer>\n                                <Select\n                                  value={choosedStudent}\n                                  onChange={this.handleStudentChange}\n                                  placeholder={'Selecione o aluno'}\n                                  styles={selectStyle}\n                                  options={studentOptions} />\n                              </SelectContainer>\n          \n                              <SelectText>Variáveis</SelectText>\n                              <SelectContainer>\n                                <Select\n                                  isMulti\n                                  isClearable\n                                  value={choosedVariable}\n                                  onChange={this.handleVariableChange}\n                                  placeholder={'Selecione as variáveis'}\n                                  styles={selectStyle}\n                                  options={variableOptions} />\n                              </SelectContainer>\n                              {predictionInfoText && predictionInfoText === 'Aprovado' ?\n                                  <Alert variant=\"outlined\" severity=\"success\">\n                                  Predição: Aprovado\n                                  </Alert>\n                              : null}\n                              {predictionInfoText && predictionInfoText === 'Reprovado' ?\n                                  <Alert variant=\"outlined\" severity=\"error\">\n                                  Predição: Reprovado\n                                  </Alert>\n                              : null}\n                            </div>\n                          : null}\n\n                          {choosedDetailed.value === 'byVariable' ?\n                            <div>\n                              <SelectText>Alunos</SelectText>\n                              <SelectContainer>\n                                <Select\n                                  isMulti\n                                  isClearable\n                                  value={choosedStudent}\n                                  onChange={this.handleStudentChange}\n                                  placeholder={'Selecione os alunos'}\n                                  styles={selectStyle}\n                                  options={studentOptions} />\n                              </SelectContainer>\n          \n                              <SelectText>Variável</SelectText>\n                              <SelectContainer>\n                                <Select\n                                  value={choosedVariable}\n                                  onChange={this.handleVariableChange}\n                                  placeholder={'Selecione a variável'}\n                                  styles={selectStyle}\n                                  options={variableOptions} />\n                              </SelectContainer>\n                              {predictionInfoText ?\n                                  <Alert variant=\"outlined\" severity=\"info\">\n                                  {predictionInfoText}\n                                  </Alert>\n                              : null}\n                            </div>\n                          : null}\n                        </LeftContentInside>\n\n                        {choosedStudent && choosedVariable && !loadingChart ?\n                          <GraphContainerInside>\n                            <FlexItem>\n                              <Plot\n                                data={\n                                  detailedChartData\n                                }\n                                layout={\n                                  detailedChartLayout\n                                }\n                                config={config}\n                                graphDiv=\"graph\"\n                              />\n                            </FlexItem>\n                          </GraphContainerInside>\n                        : null }\n                      </FlexInside>\n                    : null}\n                  </TabsContainer>\n                : null}\n\n                {prediction.loading ?\n                  <ExternalLoadingContainer>\n                    <LoadingContainer>\n                      <ProgressSpinner style={{ width: '70px', height: '70px' }} strokeWidth=\"4\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\n                    </LoadingContainer>\n                  </ExternalLoadingContainer>\n                  : null}\n              </Content> */}\n            </DashboardMainContainer>\n          </PerfectScrollbar>\n          : null }\n\n          {prediction.loading ?\n          <ExternalLoadingContainer>\n            <LoadingContainer>\n              <ProgressSpinner style={{ width: '70px', height: '70px' }} strokeWidth=\"4\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\n            </LoadingContainer>\n          </ExternalLoadingContainer>\n          : null}\n        </MainContainer>\n    )\n  }\n}\n\nconst mapStateToProps = ({ course, indicator, subject, semester, phenomenon, prediction, period, student }) => ({ course, indicator, subject, semester, phenomenon, prediction, period, student});\n\nexport default connect(mapStateToProps,\n  {\n    ...toastrActions, ...CourseActions, \n    ...IndicatorActions, ...SemesterActions, \n    ...SubjectActions, ...PhenomenonActions,\n    ...PredictionActions, ...StudentActions,\n    ...PeriodActions\n  })(Dashboard);","import React, { Component } from 'react';\n\nimport { Container } from './styles';\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators } from 'redux';\n\nimport SideMenu from '../../components/SideMenu';\nimport DataSource from '../../components/DataSource';\nimport Indicators from '../../components/Indicators';\nimport PreProcessing from '../../components/PreProcessing';\nimport { Creators as ScreenActions } from '../../store/ducks/screen';\nimport { Creators as LmsActions } from '../../store/ducks/lms';\nimport { DATASOURCE, INDICATORS, PRE_PROCESSING, TRAIN, TRAIN_MODEL, LAD } from '../../constants';\nimport Train from '../../components/Train';\nimport TrainModel from '../TrainModel';\nimport Dashboard from '../../components/Dashboard';\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.getLms();\n  }\n\n  renderContent = () => {\n    const { activeComponent } = this.props.screen;\n\n    if (activeComponent === DATASOURCE) {\n      return <DataSource />;\n    }\n\n    if (activeComponent === INDICATORS) {\n      return <Indicators />;\n    }\n\n    if (activeComponent === PRE_PROCESSING) {\n      return <PreProcessing />;\n    }\n\n    if (activeComponent === TRAIN) {\n      return <Train />;\n    }\n\n    if (activeComponent === TRAIN_MODEL) {\n      return <TrainModel />;\n    }\n\n    if (activeComponent === LAD) {\n      return <Dashboard />;\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <Container>\n        <SideMenu />\n        {this.renderContent()}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ screen }) => ({ screen });\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ ...ScreenActions, ...LmsActions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  flex: 1;\n  height: 100%;\n  background: #FFF;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-right: 20vh;\n`;\n\nexport const Image = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nexport const SignForm = styled.form`\n  border-radius: 5px;\n  padding: 40px;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  h1 {\n    font-weight: 500;\n    margin: 0 0 10px;\n    font-weight: 800;\n    font-size: 18px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    color: #4A5173;\n    justify-content: center;\n  }\n\n  span {\n    color: #000;\n    font-size: 16px;\n    line-height: 31px;\n    letter-spacing: 0.07em;\n    margin-top: 15px;\n  }\n\n  button {\n    margin: 30px 0 0;\n    color: #4A5173;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.14em;\n    text-transform: uppercase;\n    background-color: #FFF;\n    border: 1px solid #4A5173;\n\n    &:hover {\n      color: #FFF;\n    }\n  }\n`","import React, { Component } from 'react';\nimport Button from '../../../styles/Button';\nimport { Container, SignForm } from './styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport logo from '../../../assets/login_logo.svg';\nimport squares from '../../../assets/login_squares.svg';\nimport { Creators as AuthActions } from '../../../store/ducks/auth';\nimport { DialogInput } from '../../../styles/global';\n\nclass SignIn extends Component {\n\n  state = {\n    email: 'admin@fmdev.com.br',\n    password: 'p@ssW0rd'\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const { signInRequest } = this.props;\n\n    signInRequest(email, password);\n\n  }\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <Container>\n        <img alt=\"\" src={squares} width={200} height={200} />\n\n        <SignForm>\n          <img alt=\"\" src={logo} />\n          <h1>ACESSE A PLATAFORMA</h1>\n\n          <span>Email</span>\n          <DialogInput type=\"email\" value={email} onChange={this.handleInputChange} name=\"email\" />\n\n          <span>Senha</span>\n          <DialogInput type=\"password\" value={password} onChange={this.handleInputChange} name=\"password\" />\n\n          <Button size=\"big\" onClick={this.handleSubmit}>Acessar o meu ambiente</Button>\n\n        </SignForm>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(AuthActions, dispatch);\n\nexport default connect(null, mapDispatchToProps)(SignIn);","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Switch } from 'react-router-dom';\n\nimport history from './history';\n\nimport Private from './private';\nimport Guest from './guest';\nimport Main from '../pages/Main'\nimport SignIn from '../pages/Auth/SignIn';\nimport { SIGNIN, ROOT, TRAIN_MODEL } from './constants';\nimport TrainModel from '../pages/TrainModel';\n\nconst Routes = () => (\n  <ConnectedRouter history={history}>\n    <Switch>\n      <Guest path={SIGNIN} component={SignIn} />\n      <Private path={ROOT} exact component={Main} />\n      <Private path={TRAIN_MODEL} exact component={TrainModel} />\n    </Switch>\n  </ConnectedRouter>\n)\n\nexport default Routes","export const ROOT = '/';\nexport const TRAIN = '/train';\nexport const SIGNIN = '/signin';\nexport const TRAIN_MODEL = '/train-model';","import React, { Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport GlobalStyle from './styles/global';\nimport ReduxToastr from 'react-redux-toastr';\nimport { materialUIStyle } from './styles/global';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nimport store from './store';\nimport Routes from './routes';\n\nrequire('dotenv').config({  \n  path: process.env.NODE_ENV === \"development\" ? \".env.development\" : \".env\"\n})\n\nconst App = () => (\n  <Provider store={store}>\n    <Fragment>\n      <MuiThemeProvider theme={materialUIStyle}>\n        <Routes />\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n          closeOnToastrClick />\n      </MuiThemeProvider>\n      <GlobalStyle />\n    </Fragment>\n  </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}